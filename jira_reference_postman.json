{
	"info": {
		"_postman_id": "cc40b3de-1093-44e1-94c4-498c2fe3c9bb",
		"name": "Jira - Reference",
		"description": "Jira Cloud platform REST API documentation\n\nContact Support:\n Email: ecosystem@atlassian.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5049119",
		"_collection_link": "https://www.postman.com/api-evangelist/atlassian-jira/collection/2lygwmu/jira-reference?action=share&source=collection_link&creator=5049119"
	},
	"item": [
		{
			"name": "Application Properties",
			"item": [
				{
					"name": "Get Application Property",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/application-properties?key=<string>&permissionLevel=<string>&keyFilter=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"application-properties"
							],
							"query": [
								{
									"key": "key",
									"value": "<string>",
									"description": "The key of the application property."
								},
								{
									"key": "permissionLevel",
									"value": "<string>",
									"description": "The permission level of all items being returned in the list."
								},
								{
									"key": "keyFilter",
									"value": "<string>",
									"description": "When a `key` isn't provided, this filters the list of results by the application property `key` using a regular expression. For example, using `jira.lf.*` will return all application properties with keys that start with *jira.lf.*."
								}
							]
						},
						"description": "Returns all application properties or an application property.\n\nIf you specify a value for the `key` parameter, then an application property is returned as an object (not in an array). Otherwise, an array of all editable application properties is returned. See [Set application property](#api-rest-api-3-application-properties-id-put) for descriptions of editable properties.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/application-properties?key=<string>&permissionLevel=<string>&keyFilter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"application-properties"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>"
										},
										{
											"key": "permissionLevel",
											"value": "<string>"
										},
										{
											"key": "keyFilter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"id\\\":\\\"jira.home\\\",\\\"key\\\":\\\"jira.home\\\",\\\"value\\\":\\\"/var/jira/jira-home\\\",\\\"name\\\":\\\"jira.home\\\",\\\"desc\\\":\\\"Jira home directory\\\",\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"\\\"},{\\\"id\\\":\\\"jira.clone.prefix\\\",\\\"key\\\":\\\"jira.clone.prefix\\\",\\\"value\\\":\\\"CLONE -\\\",\\\"name\\\":\\\"The prefix added to the Summary field of cloned issues\\\",\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"CLONE -\\\"}]\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/application-properties?key=<string>&permissionLevel=<string>&keyFilter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"application-properties"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>"
										},
										{
											"key": "permissionLevel",
											"value": "<string>"
										},
										{
											"key": "keyFilter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the application property is not found or the user does not have permission to view it.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/application-properties?key=<string>&permissionLevel=<string>&keyFilter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"application-properties"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>"
										},
										{
											"key": "permissionLevel",
											"value": "<string>"
										},
										{
											"key": "keyFilter",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Advanced Settings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/application-properties/advanced-settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"application-properties",
								"advanced-settings"
							]
						},
						"description": "Returns the application properties that are accessible on the *Advanced Settings* page. To navigate to the *Advanced Settings* page in Jira, choose the Jira icon > **Jira settings** > **System**, **General Configuration** and then click **Advanced Settings** (in the upper right).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/application-properties/advanced-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"application-properties",
										"advanced-settings"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user is not an administrator.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/application-properties/advanced-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"application-properties",
										"advanced-settings"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/application-properties/advanced-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"application-properties",
										"advanced-settings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"id\\\":\\\"jira.home\\\",\\\"key\\\":\\\"jira.home\\\",\\\"value\\\":\\\"/var/jira/jira-home\\\",\\\"name\\\":\\\"jira.home\\\",\\\"desc\\\":\\\"Jira home directory\\\",\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"\\\"},{\\\"id\\\":\\\"jira.clone.prefix\\\",\\\"key\\\":\\\"jira.clone.prefix\\\",\\\"value\\\":\\\"CLONE -\\\",\\\"name\\\":\\\"The prefix added to the Summary field of cloned issues\\\",\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"CLONE -\\\"}]\""
						}
					]
				},
				{
					"name": "Set Application Property",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<string>\",\n    \"value\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/application-properties/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"application-properties",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The key of the application property to update."
								}
							]
						},
						"description": "Changes the value of an application property. For example, you can change the value of the `jira.clone.prefix` from its default value of *CLONE -* to *Clone -* if you prefer sentence case capitalization. Editable properties are described below along with their default values.\n\n#### Advanced settings ####\n\nThe advanced settings below are also accessible in [Jira](https://confluence.atlassian.com/x/vYXKM).\n\n| Key | Description | Default value |  \n| -- | -- | -- |  \n| `jira.clone.prefix` | The string of text prefixed to the title of a cloned issue. | `CLONE -` |  \n| `jira.date.picker.java.format` | The date format for the Java (server-side) generated dates. This must be the same as the `jira.date.picker.javascript.format` format setting. | `d/MMM/yy` |  \n| `jira.date.picker.javascript.format` | The date format for the JavaScript (client-side) generated dates. This must be the same as the `jira.date.picker.java.format` format setting. | `%e/%b/%y` |  \n| `jira.date.time.picker.java.format` | The date format for the Java (server-side) generated date times. This must be the same as the `jira.date.time.picker.javascript.format` format setting. | `dd/MMM/yy h:mm a` |  \n| `jira.date.time.picker.javascript.format` | The date format for the JavaScript (client-side) generated date times. This must be the same as the `jira.date.time.picker.java.format` format setting. | `%e/%b/%y %I:%M %p` |  \n| `jira.issue.actions.order` | The default order of actions (such as *Comments* or *Change history*) displayed on the issue view. | `asc` |  \n| `jira.table.cols.subtasks` | The columns to show while viewing subtask issues in a table. For example, a list of subtasks on an issue. | `issuetype, status, assignee, progress` |  \n| `jira.view.issue.links.sort.order` | The sort order of the list of issue links on the issue view. | `type, status, priority` |  \n| `jira.comment.collapsing.minimum.hidden` | The minimum number of comments required for comment collapsing to occur. A value of `0` disables comment collapsing. | `4` |  \n| `jira.newsletter.tip.delay.days` | The number of days before a prompt to sign up to the Jira Insiders newsletter is shown. A value of `-1` disables this feature. | `7` |  \n\n\n#### Look and feel ####\n\nThe settings listed below adjust the [look and feel](https://confluence.atlassian.com/x/VwCLLg).\n\n| Key | Description | Default value |  \n| -- | -- | -- |  \n| `jira.lf.date.time` | The [ time format](https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html). | `h:mm a` |  \n| `jira.lf.date.day` | The [ day format](https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html). | `EEEE h:mm a` |  \n| `jira.lf.date.complete` | The [ date and time format](https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html). | `dd/MMM/yy h:mm a` |  \n| `jira.lf.date.dmy` | The [ date format](https://docs.oracle.com/javase/6/docs/api/index.html?java/text/SimpleDateFormat.html). | `dd/MMM/yy` |  \n| `jira.date.time.picker.use.iso8061` | When enabled, sets Monday as the first day of the week in the date picker, as specified by the ISO8601 standard. | `false` |  \n| `jira.lf.logo.url` | The URL of the logo image file. | `/images/icon-jira-logo.png` |  \n| `jira.lf.logo.show.application.title` | Controls the visibility of the application title on the sidebar. | `false` |  \n| `jira.lf.favicon.url` | The URL of the favicon. | `/favicon.ico` |  \n| `jira.lf.favicon.hires.url` | The URL of the high-resolution favicon. | `/images/64jira.png` |  \n| `jira.lf.top.adg3.bgcolour` | The background color of the sidebar. | `#0747A6` |  \n| `jira.lf.top.adg3.textcolour` | The color of the text and logo of the sidebar. | `#DEEBFF` |  \n| `jira.lf.hero.button.base.bg.colour` | The background color of the hero button. | `#3b7fc4` |  \n| `jira.title` | The text for the application title. The application title can also be set in *General settings*. | `Jira` |  \n| `jira.option.globalsharing` | Whether filters and dashboards can be shared with anyone signed into Jira. | `true` |  \n| `xflow.product.suggestions.enabled` | Whether to expose product suggestions for other Atlassian products within Jira. | `true` |  \n\n\n#### Other settings ####\n\n| Key | Description | Default value |  \n| -- | -- | -- |  \n| `jira.issuenav.criteria.autoupdate` | Whether instant updates to search criteria is active. | `true` |  \n\n\n*Note: Be careful when changing [application properties and advanced settings](https://confluence.atlassian.com/x/vYXKM).*\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"/var/jira/jira-home\""
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/application-properties/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"application-properties",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"/var/jira/jira-home\""
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/application-properties/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"application-properties",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"pariatur sit ad nulla\",\n \"key\": \"Ut do cupidatat reprehenderit cillum\",\n \"value\": \"veniam \",\n \"name\": \"sit anim nisi\",\n \"desc\": \"a\",\n \"type\": \"et officia ea reprehenderit\",\n \"defaultValue\": \"dolor irure\",\n \"example\": \"\",\n \"allowedValues\": [\n  \"aute nulla in consect\",\n  \"do dolore in aliquip\"\n ]\n}"
						},
						{
							"name": "Returned if the data type of the `value` does not match the application property's data type. For example, a string is provided instead of an integer.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"/var/jira/jira-home\""
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/application-properties/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"application-properties",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the property is not found or the user does not have permission to view it.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"/var/jira/jira-home\""
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/application-properties/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"application-properties",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have permission to edit the property.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"/var/jira/jira-home\""
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/application-properties/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"application-properties",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Application Role",
			"item": [
				{
					"name": "Get All Application Roles",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/applicationrole",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"applicationrole"
							]
						},
						"description": "Returns all application roles. In Jira, application roles are managed using the [Application access configuration](https://confluence.atlassian.com/x/3YxjL) page.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/applicationrole",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"applicationrole"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"key\\\":\\\"jira-software\\\",\\\"groups\\\":[\\\"jira-software-users\\\",\\\"jira-testers\\\"],\\\"name\\\":\\\"Jira Software\\\",\\\"defaultGroups\\\":[\\\"jira-software-users\\\"],\\\"selectedByDefault\\\":false,\\\"defined\\\":false,\\\"numberOfSeats\\\":10,\\\"remainingSeats\\\":5,\\\"userCount\\\":5,\\\"userCountDescription\\\":\\\"5 developers\\\",\\\"hasUnlimitedSeats\\\":false,\\\"platform\\\":false},{\\\"key\\\":\\\"jira-core\\\",\\\"groups\\\":[\\\"jira-core-users\\\"],\\\"name\\\":\\\"Jira Core\\\",\\\"defaultGroups\\\":[\\\"jira-core-users\\\"],\\\"selectedByDefault\\\":false,\\\"defined\\\":false,\\\"numberOfSeats\\\":1,\\\"remainingSeats\\\":1,\\\"userCount\\\":0,\\\"userCountDescription\\\":\\\"0 users\\\",\\\"hasUnlimitedSeats\\\":false,\\\"platform\\\":true}]\""
						},
						{
							"name": "Returned if the user is not an administrator.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/applicationrole",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"applicationrole"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/applicationrole",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"applicationrole"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Application Role",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/applicationrole/:key",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"applicationrole",
								":key"
							],
							"variable": [
								{
									"key": "key",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The key of the application role. Use the [Get all application roles](#api-rest-api-3-applicationrole-get) operation to get the key for each application role."
								}
							]
						},
						"description": "Returns an application role.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user is not an administrator.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/applicationrole/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"applicationrole",
										":key"
									],
									"variable": [
										{
											"key": "key"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the role is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/applicationrole/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"applicationrole",
										":key"
									],
									"variable": [
										{
											"key": "key"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/applicationrole/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"applicationrole",
										":key"
									],
									"variable": [
										{
											"key": "key"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/applicationrole/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"applicationrole",
										":key"
									],
									"variable": [
										{
											"key": "key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"key\\\":\\\"jira-software\\\",\\\"groups\\\":[\\\"jira-software-users\\\",\\\"jira-testers\\\"],\\\"name\\\":\\\"Jira Software\\\",\\\"defaultGroups\\\":[\\\"jira-software-users\\\"],\\\"selectedByDefault\\\":false,\\\"defined\\\":false,\\\"numberOfSeats\\\":10,\\\"remainingSeats\\\":5,\\\"userCount\\\":5,\\\"userCountDescription\\\":\\\"5 developers\\\",\\\"hasUnlimitedSeats\\\":false,\\\"platform\\\":false}\""
						}
					]
				}
			]
		},
		{
			"name": "Attachment",
			"item": [
				{
					"name": "Get Jira Attachment Settings",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/attachment/meta",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"attachment",
								"meta"
							]
						},
						"description": "Returns the attachment settings, that is, whether attachments are enabled and the maximum attachment size allowed.\n\nNote that there are also [project permissions](https://confluence.atlassian.com/x/yodKLg) that restrict whether users can create and delete attachments.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/meta",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										"meta"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/meta",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										"meta"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"enabled\\\":true,\\\"uploadLimit\\\":1000000}\""
						}
					]
				},
				{
					"name": "Get All Metadata For An Expanded Attachment",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/attachment/:id/expand/human",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"attachment",
								":id",
								"expand",
								"human"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the attachment."
								}
							]
						},
						"description": "Returns the metadata for the contents of an attachment, if it is an archive, and metadata for the attachment itself. For example, if the attachment is a ZIP archive, then information about the files in the archive is returned and metadata for the ZIP archive. Currently, only the ZIP archive format is supported.\n\nUse this operation to retrieve data that is presented to the user, as this operation returns the metadata for the attachment itself, such as the attachment's ID and name. Otherwise, use [ Get contents metadata for an expanded attachment](#api-rest-api-3-attachment-id-expand-raw-get), which only returns the metadata for the attachment's contents.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** For the issue containing the attachment:\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "The user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id/expand/human",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id",
										"expand",
										"human"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful. If an empty list is returned in the response, the attachment is empty, corrupt, or not an archive.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id/expand/human",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id",
										"expand",
										"human"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":7237823,\\\"name\\\":\\\"images.zip\\\",\\\"entries\\\":[{\\\"path\\\":\\\"MG00N067.JPG\\\",\\\"index\\\":0,\\\"size\\\":\\\"119 kB\\\",\\\"mediaType\\\":\\\"image/jpeg\\\",\\\"label\\\":\\\"MG00N067.JPG\\\"},{\\\"path\\\":\\\"Allegro from Duet in C Major.mp3\\\",\\\"index\\\":1,\\\"size\\\":\\\"1.36 MB\\\",\\\"mediaType\\\":\\\"audio/mpeg\\\",\\\"label\\\":\\\"Allegro from Duet in C Major.mp3\\\"},{\\\"path\\\":\\\"long/path/thanks/to/lots/of/subdirectories/inside/making/it/quite/hard/to/reach/the/leaf.txt\\\",\\\"index\\\":2,\\\"size\\\":\\\"0.0 k\\\",\\\"mediaType\\\":\\\"text/plain\\\",\\\"label\\\":\\\"long/path/thanks/to/.../reach/the/leaf.txt\\\"}],\\\"totalEntryCount\\\":39,\\\"mediaType\\\":\\\"application/zip\\\"}\""
						},
						{
							"name": "Returned if the attachment is an archive, but not a supported archive format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id/expand/human",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id",
										"expand",
										"human"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id/expand/human",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id",
										"expand",
										"human"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id/expand/human",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id",
										"expand",
										"human"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Contents Metadata For An Expanded Attachment",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/attachment/:id/expand/raw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"attachment",
								":id",
								"expand",
								"raw"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the attachment."
								}
							]
						},
						"description": "Returns the metadata for the contents of an attachment, if it is an archive. For example, if the attachment is a ZIP archive, then information about the files in the archive is returned. Currently, only the ZIP archive format is supported.\n\nUse this operation if you are processing the data without presenting it to the user, as this operation only returns the metadata for the contents of the attachment. Otherwise, to retrieve data to present to the user, use [ Get all metadata for an expanded attachment](#api-rest-api-3-attachment-id-expand-human-get) which also returns the metadata for the attachment itself, such as the attachment's ID and name.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** For the issue containing the attachment:\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id/expand/raw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id",
										"expand",
										"raw"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id/expand/raw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id",
										"expand",
										"raw"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id/expand/raw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id",
										"expand",
										"raw"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful. If an empty list is returned in the response, the attachment is empty, corrupt, or not an archive.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id/expand/raw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id",
										"expand",
										"raw"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"entries\\\":[{\\\"entryIndex\\\":0,\\\"name\\\":\\\"Allegro from Duet in C Major.mp3\\\",\\\"size\\\":1430174,\\\"mediaType\\\":\\\"audio/mpeg\\\"},{\\\"entryIndex\\\":1,\\\"name\\\":\\\"lrm.rtf\\\",\\\"size\\\":331,\\\"mediaType\\\":\\\"text/rtf\\\"}],\\\"totalEntryCount\\\":24}\""
						},
						{
							"name": "Returned if the attachment is an archive, but not a supported archive format.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id/expand/raw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id",
										"expand",
										"raw"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Attachment Metadata",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/attachment/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"attachment",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the attachment."
								}
							]
						},
						"description": "Returns the metadata for an attachment. Note that the attachment itself is not returned.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/attachments/10000\\\",\\\"filename\\\":\\\"picture.jpg\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"created\\\":\\\"2020-12-17T01:45:40.239+0000\\\",\\\"size\\\":23123,\\\"mimeType\\\":\\\"image/jpeg\\\",\\\"content\\\":\\\"https://your-domain.atlassian.net/jira/secure/attachments/10000/picture.jpg\\\",\\\"thumbnail\\\":\\\"https://your-domain.atlassian.net/jira/secure/thumbnail/10000/picture.jpg\\\"}\""
						}
					]
				},
				{
					"name": "Delete Attachment",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/attachment/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"attachment",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the attachment."
								}
							]
						},
						"description": "Deletes an attachment from an issue.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** For the project holding the issue containing the attachment:\n\n *  *Delete own attachments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete an attachment created by the calling user.\n *  *Delete all attachments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete an attachment created by any user."
					},
					"response": [
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/attachment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"attachment",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Comment",
			"item": [
				{
					"name": "Get Comments By Ids",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\": [\n        \"<long>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/comment/list?expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"comment",
								"list"
							],
							"query": [
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `renderedBody` Returns the comment body rendered in HTML.\n *  `properties` Returns the comment's properties."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of just the comments for a list of comments specified by comment IDs.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** Comments are returned where the user:\n\n *  has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the comment.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to."
					},
					"response": [
						{
							"name": "Returned if the request contains more than 1000 IDs or is empty.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        1,\n        2,\n        5,\n        10\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/list?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										"list"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        1,\n        2,\n        5,\n        10\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/list?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										"list"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":1048576,\\\"startAt\\\":0,\\\"total\\\":1,\\\"isLast\\\":true,\\\"values\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"body\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\\\"}]}]},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"created\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"updated\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"role\\\",\\\"value\\\":\\\"Administrators\\\"}}]}\""
						}
					]
				},
				{
					"name": "Get Comment Property",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"comment",
								":commentId",
								"properties",
								":propertyKey"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the comment."
								},
								{
									"key": "propertyKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The key of the property."
								}
							]
						},
						"description": "Returns the value of a comment property.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to."
					},
					"response": [
						{
							"name": "Returned if the comment or the property is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"key\\\":\\\"issue.support\\\",\\\"value\\\":{\\\"system.conversation.id\\\":\\\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\\\",\\\"system.support.time\\\":\\\"1m\\\"}}\""
						}
					]
				},
				{
					"name": "Set Comment Property",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"comment",
								":commentId",
								"properties",
								":propertyKey"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the comment."
								},
								{
									"key": "propertyKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The key of the property. The maximum length is 255 characters."
								}
							]
						},
						"description": "Creates or updates the value of a property for a comment. Use this resource to store custom data against a comment.\n\nThe value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.\n\n**[Permissions](#permissions) required:** either of:\n\n *  *Edit All Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to create or update the value of a property on any comment.\n *  *Edit Own Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to create or update the value of a property on a comment created by the user.\n\nAlso, when the visibility of a comment is restricted to a role or group the user must be a member of that role or group."
					},
					"response": [
						{
							"name": "Returned if the comment is not found.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the comment property is updated.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if the comment property is created.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Delete Comment Property",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"comment",
								":commentId",
								"properties",
								":propertyKey"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the comment."
								},
								{
									"key": "propertyKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The key of the property."
								}
							]
						},
						"description": "Deletes a comment property.\n\n**[Permissions](#permissions) required:** either of:\n\n *  *Edit All Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete a property from any comment.\n *  *Edit Own Comments* [project permission](https://confluence.atlassian.com/x/yodKLg) to delete a property from a comment created by the user.\n\nAlso, when the visibility of a comment is restricted to a role or group the user must be a member of that role or group."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the comment or the property is not found or the user has the necessary project permissions but isn't a member of the role or group visibility of the comment is restricted to.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "commentId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Comment Property Keys",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"comment",
								":commentId",
								"properties"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the comment."
								}
							]
						},
						"description": "Returns the keys of all the properties of a comment.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to."
					},
					"response": [
						{
							"name": "Returned if the comment ID is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties"
									],
									"variable": [
										{
											"key": "commentId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties"
									],
									"variable": [
										{
											"key": "commentId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties"
									],
									"variable": [
										{
											"key": "commentId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"keys\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\\\",\\\"key\\\":\\\"issue.support\\\"}]}\""
						},
						{
							"name": "Returned if the comment is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties"
									],
									"variable": [
										{
											"key": "commentId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/comment/:commentId/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"comment",
										":commentId",
										"properties"
									],
									"variable": [
										{
											"key": "commentId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Component",
			"item": [
				{
					"name": "Create Component",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"leadUserName\": \"<string>\",\n    \"leadAccountId\": \"<string>\",\n    \"assigneeType\": \"<string>\",\n    \"project\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/component",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"component"
							]
						},
						"description": "Creates a component. Use components to provide containers for issues within a project.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project in which the component is created or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have permission to manage the project containing the component or does not have permission to administer Jira.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isAssigneeTypeValid\": false,\n    \"name\": \"Component 1\",\n    \"description\": \"This is a Jira component\",\n    \"project\": \"HSP\",\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"leadAccountId\": \"5b10a2844c20165700ede21g\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  the user is not found.\n *  `name` is not provided.\n *  `name` is over 255 characters in length.\n *  `projectId` is not provided.\n *  `assigneeType` is an invalid value.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isAssigneeTypeValid\": false,\n    \"name\": \"Component 1\",\n    \"description\": \"This is a Jira component\",\n    \"project\": \"HSP\",\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"leadAccountId\": \"5b10a2844c20165700ede21g\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isAssigneeTypeValid\": false,\n    \"name\": \"Component 1\",\n    \"description\": \"This is a Jira component\",\n    \"project\": \"HSP\",\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"leadAccountId\": \"5b10a2844c20165700ede21g\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Component 1\\\",\\\"description\\\":\\\"This is a Jira component\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"assignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"realAssigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"realAssignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"isAssigneeTypeValid\\\":false,\\\"project\\\":\\\"HSP\\\",\\\"projectId\\\":10000}\""
						},
						{
							"name": "Returned if the project is not found or the user does not have permission to browse the project containing the component.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isAssigneeTypeValid\": false,\n    \"name\": \"Component 1\",\n    \"description\": \"This is a Jira component\",\n    \"project\": \"HSP\",\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"leadAccountId\": \"5b10a2844c20165700ede21g\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isAssigneeTypeValid\": false,\n    \"name\": \"Component 1\",\n    \"description\": \"This is a Jira component\",\n    \"project\": \"HSP\",\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"leadAccountId\": \"5b10a2844c20165700ede21g\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Component",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/component/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"component",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the component."
								}
							]
						},
						"description": "Returns a component.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for project containing the component."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Component 1\\\",\\\"description\\\":\\\"This is a Jira component\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"assignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"realAssigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"realAssignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"isAssigneeTypeValid\\\":false,\\\"project\\\":\\\"HSP\\\",\\\"projectId\\\":10000}\""
						},
						{
							"name": "Returned if the component is not found or the user does not have permission to browse the project containing the component.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Component",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"leadUserName\": \"<string>\",\n    \"leadAccountId\": \"<string>\",\n    \"assigneeType\": \"<string>\",\n    \"project\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/component/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"component",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the component."
								}
							]
						},
						"description": "Updates a component. Any fields included in the request are overwritten. If `leadAccountId` is an empty string (\"\") the component lead is removed.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the component or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isAssigneeTypeValid\": false,\n    \"name\": \"Component 1\",\n    \"description\": \"This is a Jira component\",\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"leadAccountId\": \"5b10a2844c20165700ede21g\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isAssigneeTypeValid\": false,\n    \"name\": \"Component 1\",\n    \"description\": \"This is a Jira component\",\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"leadAccountId\": \"5b10a2844c20165700ede21g\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Component 1\\\",\\\"description\\\":\\\"This is a Jira component\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"assignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"realAssigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"realAssignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"isAssigneeTypeValid\\\":false,\\\"project\\\":\\\"HSP\\\",\\\"projectId\\\":10000}\""
						},
						{
							"name": "Returned if:\n\n *  the user is not found.\n *  `assigneeType` is an invalid value.\n *  `name` is over 255 characters in length.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isAssigneeTypeValid\": false,\n    \"name\": \"Component 1\",\n    \"description\": \"This is a Jira component\",\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"leadAccountId\": \"5b10a2844c20165700ede21g\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the component is not found or the user does not have permission to browse the project containing the component.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isAssigneeTypeValid\": false,\n    \"name\": \"Component 1\",\n    \"description\": \"This is a Jira component\",\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"leadAccountId\": \"5b10a2844c20165700ede21g\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have permission to manage the project containing the component or does not have permission to administer Jira.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isAssigneeTypeValid\": false,\n    \"name\": \"Component 1\",\n    \"description\": \"This is a Jira component\",\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"leadAccountId\": \"5b10a2844c20165700ede21g\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Component",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/component/:id?moveIssuesTo=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"component",
								":id"
							],
							"query": [
								{
									"key": "moveIssuesTo",
									"value": "<string>",
									"description": "The ID of the component to replace the deleted component. If this value is null no replacement is made."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the component."
								}
							]
						},
						"description": "Deletes a component.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the component or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if:\n\n *  the component is not found.\n *  the replacement component is not found.\n *  the user does not have permission to browse the project containing the component.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id?moveIssuesTo=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id"
									],
									"query": [
										{
											"key": "moveIssuesTo",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id?moveIssuesTo=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id"
									],
									"query": [
										{
											"key": "moveIssuesTo",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have permission to manage the project containing the component or does not have permission to administer Jira.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id?moveIssuesTo=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id"
									],
									"query": [
										{
											"key": "moveIssuesTo",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id?moveIssuesTo=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id"
									],
									"query": [
										{
											"key": "moveIssuesTo",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Component Issues Count",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/component/:id/relatedIssueCounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"component",
								":id",
								"relatedIssueCounts"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the component."
								}
							]
						},
						"description": "Returns the counts of issues assigned to the component.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id/relatedIssueCounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id",
										"relatedIssueCounts"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"issueCount\\\":23}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id/relatedIssueCounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id",
										"relatedIssueCounts"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the component is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/component/:id/relatedIssueCounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"component",
										":id",
										"relatedIssueCounts"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Configuration",
			"item": [
				{
					"name": "Timetracking",
					"item": [
						{
							"name": "Options",
							"item": [
								{
									"name": "Get Time Tracking Settings",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking/options",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"configuration",
												"timetracking",
												"options"
											]
										},
										"description": "Returns the time tracking settings. This includes settings such as the time format, default time unit, and others. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking/options",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"configuration",
														"timetracking",
														"options"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking/options",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"configuration",
														"timetracking",
														"options"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"workingHoursPerDay\\\":7.6,\\\"workingDaysPerWeek\\\":5.5,\\\"timeFormat\\\":\\\"pretty\\\",\\\"defaultUnit\\\":\\\"hour\\\"}\""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking/options",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"configuration",
														"timetracking",
														"options"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Time Tracking Settings",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"defaultUnit\": \"<string>\",\n    \"timeFormat\": \"<string>\",\n    \"workingDaysPerWeek\": \"<double>\",\n    \"workingHoursPerDay\": \"<double>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking/options",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"configuration",
												"timetracking",
												"options"
											]
										},
										"description": "Sets the time tracking settings.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"defaultUnit\": \"hour\",\n    \"workingHoursPerDay\": 7.6,\n    \"workingDaysPerWeek\": 5.5,\n    \"timeFormat\": \"pretty\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking/options",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"configuration",
														"timetracking",
														"options"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"workingHoursPerDay\\\":7.6,\\\"workingDaysPerWeek\\\":5.5,\\\"timeFormat\\\":\\\"pretty\\\",\\\"defaultUnit\\\":\\\"hour\\\"}\""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"defaultUnit\": \"hour\",\n    \"workingHoursPerDay\": 7.6,\n    \"workingDaysPerWeek\": 5.5,\n    \"timeFormat\": \"pretty\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking/options",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"configuration",
														"timetracking",
														"options"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"defaultUnit\": \"hour\",\n    \"workingHoursPerDay\": 7.6,\n    \"workingDaysPerWeek\": 5.5,\n    \"timeFormat\": \"pretty\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking/options",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"configuration",
														"timetracking",
														"options"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request object is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"defaultUnit\": \"hour\",\n    \"workingHoursPerDay\": 7.6,\n    \"workingDaysPerWeek\": 5.5,\n    \"timeFormat\": \"pretty\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking/options",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"configuration",
														"timetracking",
														"options"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Selected Time Tracking Provider",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"configuration",
										"timetracking"
									]
								},
								"description": "Returns the time tracking provider that is currently selected. Note that if time tracking is disabled, then a successful but empty response is returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"configuration",
												"timetracking"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"configuration",
												"timetracking"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful and time tracking is enabled.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"configuration",
												"timetracking"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"key\\\":\\\"Jira\\\",\\\"name\\\":\\\"JIRA provided time tracking\\\",\\\"url\\\":\\\"/example/config/url\\\"}\""
								},
								{
									"name": "Returned if the request is successful but time tracking is disabled.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"configuration",
												"timetracking"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Select Time Tracking Provider",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"<string>\",\n    \"name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"configuration",
										"timetracking"
									]
								},
								"description": "Selects a time tracking provider.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"Jira\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"configuration",
												"timetracking"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"Jira\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"configuration",
												"timetracking"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the time tracking provider is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"Jira\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"configuration",
												"timetracking"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"Jira\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"configuration",
												"timetracking"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Get All Time Tracking Providers",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking/list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"configuration",
										"timetracking",
										"list"
									]
								},
								"description": "Returns all time tracking providers. By default, Jira only has one time tracking provider: *JIRA provided time tracking*. However, you can install other time tracking providers via apps from the Atlassian Marketplace. For more information on time tracking providers, see the documentation for the [ Time Tracking Provider](https://developer.atlassian.com/cloud/jira/platform/modules/time-tracking-provider/) module.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"configuration",
												"timetracking",
												"list"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"configuration",
												"timetracking",
												"list"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/configuration/timetracking/list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"configuration",
												"timetracking",
												"list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"[{\\\"key\\\":\\\"Jira\\\",\\\"name\\\":\\\"JIRA provided time tracking\\\",\\\"url\\\":\\\"/example/config/url\\\"}]\""
								}
							]
						}
					]
				},
				{
					"name": "Get Global Settings",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"configuration"
							]
						},
						"description": "Returns the [global settings](https://confluence.atlassian.com/x/qYXKM) in Jira. These settings determine whether optional features (for example, subtasks, time tracking, and others) are enabled. If time tracking is enabled, this operation also returns the time tracking configuration.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"configuration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"votingEnabled\\\":true,\\\"watchingEnabled\\\":true,\\\"unassignedIssuesAllowed\\\":false,\\\"subTasksEnabled\\\":false,\\\"issueLinkingEnabled\\\":true,\\\"timeTrackingEnabled\\\":true,\\\"attachmentsEnabled\\\":true,\\\"timeTrackingConfiguration\\\":{\\\"workingHoursPerDay\\\":8.0,\\\"workingDaysPerWeek\\\":5.0,\\\"timeFormat\\\":\\\"pretty\\\",\\\"defaultUnit\\\":\\\"day\\\"}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"configuration"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Custom Field Option",
			"item": [
				{
					"name": "Get Options For Field",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option?startAt=0&maxResults=1000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"customField",
								":fieldId",
								"option"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "1000",
									"description": "The maximum number of items to return per page."
								}
							],
							"variable": [
								{
									"key": "fieldId",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the custom field. Note: This is the numeric part of the of the field ID. For example, for a field with the ID *customfield\\_10075* use *10075*."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of options and, where the custom select field is of the type *Select List (cascading)*, cascading options for custom select fields. Cascading options are included in the item count when determining pagination. Only options from the global context are returned.\n\nNote that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource**, it cannot be used with issue field select list options created by Connect apps.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option?startAt=0&maxResults=1000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"customField",
										":fieldId",
										"option"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "1000"
										}
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option?startAt=0&maxResults=1000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"customField",
										":fieldId",
										"option"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "1000"
										}
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the field is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option?startAt=0&maxResults=1000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"customField",
										":fieldId",
										"option"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "1000"
										}
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option?startAt=0&maxResults=1000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"customField",
										":fieldId",
										"option"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "1000"
										}
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":2,\\\"startAt\\\":0,\\\"total\\\":100,\\\"isLast\\\":false,\\\"values\\\":[{\\\"id\\\":10000,\\\"value\\\":\\\"Option value\\\",\\\"cascadingOptions\\\":[\\\"Child option\\\",\\\"Child option 2\\\"]},{\\\"id\\\":10001,\\\"value\\\":\\\"Other option value\\\",\\\"cascadingOptions\\\":[]}]}\""
						}
					]
				},
				{
					"name": "Update Custom Field Options",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"options\": [\n        {\n            \"newValue\": \"<string>\",\n            \"value\": \"<string>\",\n            \"cascadingOptions\": [\n                {\n                    \"newValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                },\n                {\n                    \"newValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                }\n            ]\n        },\n        {\n            \"newValue\": \"<string>\",\n            \"value\": \"<string>\",\n            \"cascadingOptions\": [\n                {\n                    \"newValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                },\n                {\n                    \"newValue\": \"<string>\",\n                    \"value\": \"<string>\"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"customField",
								":fieldId",
								"option"
							],
							"variable": [
								{
									"key": "fieldId",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the custom field. Note: This is the numeric part of the of the field ID. For example, for a field with the ID *customfield\\_10075* use *10075*."
								}
							]
						},
						"description": "Updates the options on a custom select field. Where an updated option is in use on an issue, the value on the issue is also updated. Options that are not found are ignored. A maximum of 1000 options, including sub-options of *Select List (cascading)* fields, can be updated per request. The options are updated on the global context of the field.\n\nNote that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource**, it cannot be used with issue field select list options created by Connect apps.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"options\": [\n        {\n            \"newValue\": \"New option\",\n            \"value\": \"Option\"\n        },\n        {\n            \"cascadingOptions\": [\n                {\n                    \"newValue\": \"New first child option\",\n                    \"value\": \"First child option\"\n                }\n            ],\n            \"newValue\": \"Second option\",\n            \"value\": \"Second option\"\n        },\n        {\n            \"cascadingOptions\": [\n                {\n                    \"newValue\": \"New second child option\",\n                    \"value\": \"Second child option\"\n                },\n                {\n                    \"newValue\": \"New third child option\",\n                    \"value\": \"Third child option\"\n                }\n            ],\n            \"newValue\": \"New third option value\",\n            \"value\": \"Third option value\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"customField",
										":fieldId",
										"option"
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"ut reprehenderit laboris proi\",\n  \"aliquip nostrud laboris et\"\n ],\n \"errors\": {},\n \"status\": -7947044\n}"
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"options\": [\n        {\n            \"newValue\": \"New option\",\n            \"value\": \"Option\"\n        },\n        {\n            \"cascadingOptions\": [\n                {\n                    \"newValue\": \"New first child option\",\n                    \"value\": \"First child option\"\n                }\n            ],\n            \"newValue\": \"Second option\",\n            \"value\": \"Second option\"\n        },\n        {\n            \"cascadingOptions\": [\n                {\n                    \"newValue\": \"New second child option\",\n                    \"value\": \"Second child option\"\n                },\n                {\n                    \"newValue\": \"New third child option\",\n                    \"value\": \"Third child option\"\n                }\n            ],\n            \"newValue\": \"New third option value\",\n            \"value\": \"Third option value\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"customField",
										":fieldId",
										"option"
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"options\": [\n        {\n            \"newValue\": \"New option\",\n            \"value\": \"Option\"\n        },\n        {\n            \"cascadingOptions\": [\n                {\n                    \"newValue\": \"New first child option\",\n                    \"value\": \"First child option\"\n                }\n            ],\n            \"newValue\": \"Second option\",\n            \"value\": \"Second option\"\n        },\n        {\n            \"cascadingOptions\": [\n                {\n                    \"newValue\": \"New second child option\",\n                    \"value\": \"Second child option\"\n                },\n                {\n                    \"newValue\": \"New third child option\",\n                    \"value\": \"Third child option\"\n                }\n            ],\n            \"newValue\": \"New third option value\",\n            \"value\": \"Third option value\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"customField",
										":fieldId",
										"option"
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the field is not found.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"options\": [\n        {\n            \"newValue\": \"New option\",\n            \"value\": \"Option\"\n        },\n        {\n            \"cascadingOptions\": [\n                {\n                    \"newValue\": \"New first child option\",\n                    \"value\": \"First child option\"\n                }\n            ],\n            \"newValue\": \"Second option\",\n            \"value\": \"Second option\"\n        },\n        {\n            \"cascadingOptions\": [\n                {\n                    \"newValue\": \"New second child option\",\n                    \"value\": \"Second child option\"\n                },\n                {\n                    \"newValue\": \"New third child option\",\n                    \"value\": \"Third child option\"\n                }\n            ],\n            \"newValue\": \"New third option value\",\n            \"value\": \"Third option value\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"customField",
										":fieldId",
										"option"
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						}
					]
				},
				{
					"name": "Create Custom Field Options",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"options\": [\n        {\n            \"value\": \"<string>\",\n            \"cascadingOptions\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        },\n        {\n            \"value\": \"<string>\",\n            \"cascadingOptions\": [\n                \"<string>\",\n                \"<string>\"\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"customField",
								":fieldId",
								"option"
							],
							"variable": [
								{
									"key": "fieldId",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the custom field. Note: This is the numeric part of the of the field ID. For example, for a field with the ID *customfield\\_10075* use *10075*."
								}
							]
						},
						"description": "Creates options and, where the custom select field is of the type *Select List (cascading)*, cascading options for a custom select field. The options are added to the global context of the field.\n\nNote that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource**, it cannot be used with issue field select list options created by Connect apps.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"options\": [\n        {\n            \"cascadingOptions\": [],\n            \"value\": \"Option value\"\n        },\n        {\n            \"cascadingOptions\": [\n                \"Child option\"\n            ],\n            \"value\": \"Other option value\"\n        },\n        {\n            \"cascadingOptions\": [\n                \"Sub-option\",\n                \"Sub-option 2\"\n            ],\n            \"value\": \"Third option value\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"customField",
										":fieldId",
										"option"
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"options\": [\n        {\n            \"cascadingOptions\": [],\n            \"value\": \"Option value\"\n        },\n        {\n            \"cascadingOptions\": [\n                \"Child option\"\n            ],\n            \"value\": \"Other option value\"\n        },\n        {\n            \"cascadingOptions\": [\n                \"Sub-option\",\n                \"Sub-option 2\"\n            ],\n            \"value\": \"Third option value\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"customField",
										":fieldId",
										"option"
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"options\": [\n        {\n            \"cascadingOptions\": [],\n            \"value\": \"Option value\"\n        },\n        {\n            \"cascadingOptions\": [\n                \"Child option\"\n            ],\n            \"value\": \"Other option value\"\n        },\n        {\n            \"cascadingOptions\": [\n                \"Sub-option\",\n                \"Sub-option 2\"\n            ],\n            \"value\": \"Third option value\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"customField",
										":fieldId",
										"option"
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if the field is not found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"options\": [\n        {\n            \"cascadingOptions\": [],\n            \"value\": \"Option value\"\n        },\n        {\n            \"cascadingOptions\": [\n                \"Child option\"\n            ],\n            \"value\": \"Other option value\"\n        },\n        {\n            \"cascadingOptions\": [\n                \"Sub-option\",\n                \"Sub-option 2\"\n            ],\n            \"value\": \"Third option value\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/customField/:fieldId/option",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"customField",
										":fieldId",
										"option"
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						}
					]
				}
			]
		},
		{
			"name": "Dashboard",
			"item": [
				{
					"name": "Get All Dashboards",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/dashboard?filter=<string>&startAt=0&maxResults=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"dashboard"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>",
									"description": "The filter applied to the list of dashboards. Valid values are:\n\n *  `favourite` Returns dashboards the user has marked as favorite.\n *  `my` Returns dashboards owned by the user."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "20",
									"description": "The maximum number of items to return per page."
								}
							]
						},
						"description": "Returns a list of dashboards owned by or shared with the user. The list may be filtered to include only favorite or owned dashboards.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard?filter=<string>&startAt=0&maxResults=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "20"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard?filter=<string>&startAt=0&maxResults=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"startAt\\\":10,\\\"maxResults\\\":10,\\\"total\\\":143,\\\"prev\\\":\\\"https://your-domain.atlassian.net/rest/api/3/dashboard?startAt=0\\\",\\\"next\\\":\\\"https://your-domain.atlassian.net/rest/api/3/dashboard?startAt=10\\\",\\\"dashboards\\\":[{\\\"id\\\":\\\"10000\\\",\\\"isFavourite\\\":false,\\\"name\\\":\\\"System Dashboard\\\",\\\"popularity\\\":1,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/dashboard/10000\\\",\\\"sharePermissions\\\":[{\\\"type\\\":\\\"global\\\"}],\\\"view\\\":\\\"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000\\\"},{\\\"id\\\":\\\"20000\\\",\\\"isFavourite\\\":true,\\\"name\\\":\\\"Build Engineering\\\",\\\"owner\\\":{\\\"key\\\":\\\"Mia\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"mia\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"avatarUrls\\\":{\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\"}},\\\"popularity\\\":1,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/dashboard/20000\\\",\\\"sharePermissions\\\":[{\\\"id\\\":10105,\\\"type\\\":\\\"group\\\",\\\"group\\\":{\\\"name\\\":\\\"administrators\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/group?groupname=administrators\\\"}}],\\\"view\\\":\\\"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=20000\\\"}]}\""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard?filter=<string>&startAt=0&maxResults=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "20"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						}
					]
				},
				{
					"name": "Create Dashboard",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"<string>\",\n            \"project\": {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"favourite\": \"<boolean>\"\n            },\n            \"role\": {\n                \"name\": \"<string>\",\n                \"translatedName\": \"<string>\",\n                \"currentUserRole\": \"<boolean>\"\n            },\n            \"group\": {\n                \"name\": \"<string>\"\n            }\n        },\n        {\n            \"type\": \"<string>\",\n            \"project\": {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"favourite\": \"<boolean>\"\n            },\n            \"role\": {\n                \"name\": \"<string>\",\n                \"translatedName\": \"<string>\",\n                \"currentUserRole\": \"<boolean>\"\n            },\n            \"group\": {\n                \"name\": \"<string>\"\n            }\n        }\n    ],\n    \"description\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/dashboard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"dashboard"
							]
						},
						"description": "Creates a dashboard.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Auditors dashboard\",\n    \"description\": \"A dashboard to help auditors identify sample of issues to check.\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"global\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":\\\"10000\\\",\\\"isFavourite\\\":false,\\\"name\\\":\\\"System Dashboard\\\",\\\"popularity\\\":1,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/dashboard/10000\\\",\\\"sharePermissions\\\":[{\\\"type\\\":\\\"global\\\"}],\\\"view\\\":\\\"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000\\\"}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Auditors dashboard\",\n    \"description\": \"A dashboard to help auditors identify sample of issues to check.\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"global\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Auditors dashboard\",\n    \"description\": \"A dashboard to help auditors identify sample of issues to check.\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"global\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						}
					]
				},
				{
					"name": "Search For Dashboards",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/dashboard/search?dashboardName=<string>&accountId=<string>&owner=<string>&groupname=<string>&projectId=<long>&orderBy=name&startAt=0&maxResults=50&expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"dashboard",
								"search"
							],
							"query": [
								{
									"key": "dashboardName",
									"value": "<string>",
									"description": "String used to perform a case-insensitive partial match with `name`."
								},
								{
									"key": "accountId",
									"value": "<string>",
									"description": "User account ID used to return dashboards with the matching `owner.accountId`. This parameter cannot be used with the `owner` parameter."
								},
								{
									"key": "owner",
									"value": "<string>",
									"description": "This parameter is deprecated because of privacy changes. Use `accountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. User name used to return dashboards with the matching `owner.name`. This parameter cannot be used with the `accountId` parameter."
								},
								{
									"key": "groupname",
									"value": "<string>",
									"description": "Group name used to returns dashboards that are shared with a group that matches `sharePermissions.group.name`."
								},
								{
									"key": "projectId",
									"value": "<long>",
									"description": "Project ID used to returns dashboards that are shared with a project that matches `sharePermissions.project.id`."
								},
								{
									"key": "orderBy",
									"value": "name",
									"description": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by dashboard description. Note that this sort works independently of whether the expand to display the description field is in use.\n *  `favourite_count` Sorts by dashboard popularity.\n *  `id` Sorts by dashboard ID.\n *  `is_favourite` Sorts by whether the dashboard is marked as a favorite.\n *  `name` Sorts by dashboard name.\n *  `owner` Sorts by dashboard owner name."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information about dashboard in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `description` Returns the description of the dashboard.\n *  `owner` Returns the owner of the dashboard.\n *  `viewUrl` Returns the URL that is used to view the dashboard.\n *  `favourite` Returns `isFavourite`, an indicator of whether the user has set the dashboard as a favorite.\n *  `favouritedCount` Returns `popularity`, a count of how many users have set this dashboard as a favorite.\n *  `sharePermissions` Returns details of the share permissions defined for the dashboard."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of dashboards. This operation is similar to [Get dashboards](#api-rest-api-3-dashboard-get) except that the results can be refined to include dashboards that have specific attributes. For example, dashboards with a particular name. When multiple attributes are specified only filters matching all attributes are returned.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** The following dashboards that match the query parameters are returned:\n\n *  Dashboards owned by the user. Not returned for anonymous users.\n *  Dashboards shared with a group that the user is a member of. Not returned for anonymous users.\n *  Dashboards shared with a private project that the user can browse. Not returned for anonymous users.\n *  Dashboards shared with a public project.\n *  Dashboards shared with the public."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/search?dashboardName=<string>&accountId=<string>&owner=<string>&groupname=<string>&projectId=<long>&orderBy=name&startAt=0&maxResults=50&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										"search"
									],
									"query": [
										{
											"key": "dashboardName",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "owner",
											"value": "<string>"
										},
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "projectId",
											"value": "<long>"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/dashboard/search?expand=owner&maxResults=50&startAt=0\\\",\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":2,\\\"isLast\\\":true,\\\"values\\\":[{\\\"description\\\":\\\"Testing program\\\",\\\"id\\\":\\\"1\\\",\\\"isFavourite\\\":true,\\\"name\\\":\\\"Testing\\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/user?accountId=5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia\\\",\\\"active\\\":true,\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"avatarUrls\\\":{\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\"}},\\\"popularity\\\":1,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/dashboard/1\\\",\\\"sharePermissions\\\":[{\\\"type\\\":\\\"global\\\"}],\\\"view\\\":\\\"https://your-domain.atlassian.net/Dashboard.jspa?selectPageId=1\\\"},{\\\"description\\\":\\\"Quantum initiative\\\",\\\"id\\\":\\\"2\\\",\\\"isFavourite\\\":false,\\\"name\\\":\\\"Quantum \\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/user?accountId=5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia\\\",\\\"active\\\":true,\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"avatarUrls\\\":{\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\"}},\\\"popularity\\\":0,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/dashboard/2\\\",\\\"sharePermissions\\\":[{\\\"type\\\":\\\"loggedin\\\"}],\\\"view\\\":\\\"https://your-domain.atlassian.net/Dashboard.jspa?selectPageId=2\\\"}]}\""
						},
						{
							"name": "401 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/search?dashboardName=<string>&accountId=<string>&owner=<string>&groupname=<string>&projectId=<long>&orderBy=name&startAt=0&maxResults=50&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										"search"
									],
									"query": [
										{
											"key": "dashboardName",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "owner",
											"value": "<string>"
										},
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "projectId",
											"value": "<long>"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if:\n\n *  `orderBy` is invalid.\n *  `expand` includes an invalid value.\n *  `accountId` and `owner` are provided.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/search?dashboardName=<string>&accountId=<string>&owner=<string>&groupname=<string>&projectId=<long>&orderBy=name&startAt=0&maxResults=50&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										"search"
									],
									"query": [
										{
											"key": "dashboardName",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "owner",
											"value": "<string>"
										},
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "projectId",
											"value": "<long>"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						}
					]
				},
				{
					"name": "Get Dashboard Item Property",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"dashboard",
								":dashboardId",
								"items",
								":itemId",
								"properties",
								":propertyKey"
							],
							"variable": [
								{
									"key": "dashboardId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the dashboard."
								},
								{
									"key": "itemId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the dashboard item."
								},
								{
									"key": "propertyKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The key of the dashboard item property."
								}
							]
						},
						"description": "Returns the key and value of a dashboard item property.\n\nA dashboard item enables an app to add user-specific information to a user dashboard. Dashboard items are exposed to users as gadgets that users can add to their dashboards. For more information on how users do this, see [Adding and customizing gadgets](https://confluence.atlassian.com/x/7AeiLQ).\n\nWhen an app creates a dashboard item it registers a callback to receive the dashboard item ID. The callback fires whenever the item is rendered or, where the item is configurable, the user edits the item. The app then uses this resource to store the item's content or configuration details. For more information on working with dashboard items, see [ Building a dashboard item for a JIRA Connect add-on](https://developer.atlassian.com/server/jira/platform/guide-building-a-dashboard-item-for-a-jira-connect-add-on-33746254/) and the [Dashboard Item](https://developer.atlassian.com/cloud/jira/platform/modules/dashboard-item/) documentation.\n\nThere is no resource to set or get dashboard items.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** The user must be the owner of the dashboard or be shared the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard. The System dashboard is considered to be shared with all other users."
					},
					"response": [
						{
							"name": "Returned if the dashboard, the dashboard item, or dashboard item property is not found, or the dashboard is not owned by or shared with the user.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"key\\\":\\\"issue.support\\\",\\\"value\\\":{\\\"system.conversation.id\\\":\\\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\\\",\\\"system.support.time\\\":\\\"1m\\\"}}\""
						}
					]
				},
				{
					"name": "Set Dashboard Item Property",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"dashboard",
								":dashboardId",
								"items",
								":itemId",
								"properties",
								":propertyKey"
							],
							"variable": [
								{
									"key": "dashboardId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the dashboard."
								},
								{
									"key": "itemId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the dashboard item."
								},
								{
									"key": "propertyKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The key of the dashboard item property. The maximum length is 255 characters."
								}
							]
						},
						"description": "Sets the value of a dashboard item property. Use this resource in apps to store custom data against a dashboard item.\n\nA dashboard item enables an app to add user-specific information to a user dashboard. Dashboard items are exposed to users as gadgets that users can add to their dashboards. For more information on how users do this, see [Adding and customizing gadgets](https://confluence.atlassian.com/x/7AeiLQ).\n\nWhen an app creates a dashboard item it registers a callback to receive the dashboard item ID. The callback fires whenever the item is rendered or, where the item is configurable, the user edits the item. The app then uses this resource to store the item's content or configuration details. For more information on working with dashboard items, see [ Building a dashboard item for a JIRA Connect add-on](https://developer.atlassian.com/server/jira/platform/guide-building-a-dashboard-item-for-a-jira-connect-add-on-33746254/) and the [Dashboard Item](https://developer.atlassian.com/cloud/jira/platform/modules/dashboard-item/) documentation.\n\nThere is no resource to set or get dashboard items.\n\nThe value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** The user must be the owner of the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard."
					},
					"response": [
						{
							"name": "Returned if the dashboard item property is created.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if the user is not the owner of the dashboard.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the dashboard item property is updated.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if the dashboard item is not found or the dashboard is not shared with the user.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Dashboard Item Property",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"dashboard",
								":dashboardId",
								"items",
								":itemId",
								"properties",
								":propertyKey"
							],
							"variable": [
								{
									"key": "dashboardId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the dashboard."
								},
								{
									"key": "itemId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the dashboard item."
								},
								{
									"key": "propertyKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The key of the dashboard item property."
								}
							]
						},
						"description": "Deletes a dashboard item property.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** The user must be the owner of the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard."
					},
					"response": [
						{
							"name": "Returned if the dashboard or dashboard item ID is invalid.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the dashboard item property is deleted.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user is not the owner of the dashboard.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the dashboard item is not found or the dashboard is not shared with the user.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Dashboard Item Property Keys",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"dashboard",
								":dashboardId",
								"items",
								":itemId",
								"properties"
							],
							"variable": [
								{
									"key": "dashboardId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the dashboard."
								},
								{
									"key": "itemId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the dashboard item."
								}
							]
						},
						"description": "Returns the keys of all properties for a dashboard item.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** The user must be the owner of the dashboard or be shared the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard. The System dashboard is considered to be shared with all other users."
					},
					"response": [
						{
							"name": "Returned if the dashboard or dashboard item is not found, or the dashboard is not owned by or shared with the user.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"keys\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\\\",\\\"key\\\":\\\"issue.support\\\"}]}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":dashboardId",
										"items",
										":itemId",
										"properties"
									],
									"variable": [
										{
											"key": "dashboardId"
										},
										{
											"key": "itemId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Dashboard",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"dashboard",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the dashboard."
								}
							]
						},
						"description": "Returns a dashboard.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None.\n\nHowever, to get a dashboard, the dashboard must be shared with the user or the user must own it. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard. The System dashboard is considered to be shared with all other users."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":\\\"10000\\\",\\\"isFavourite\\\":false,\\\"name\\\":\\\"System Dashboard\\\",\\\"popularity\\\":1,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/dashboard/10000\\\",\\\"sharePermissions\\\":[{\\\"type\\\":\\\"global\\\"}],\\\"view\\\":\\\"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000\\\"}\""
						},
						{
							"name": "Returned if the dashboard is not found or the dashboard is not owned by or shared with the user.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Dashboard",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"<string>\",\n            \"project\": {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"favourite\": \"<boolean>\"\n            },\n            \"role\": {\n                \"name\": \"<string>\",\n                \"translatedName\": \"<string>\",\n                \"currentUserRole\": \"<boolean>\"\n            },\n            \"group\": {\n                \"name\": \"<string>\"\n            }\n        },\n        {\n            \"type\": \"<string>\",\n            \"project\": {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"favourite\": \"<boolean>\"\n            },\n            \"role\": {\n                \"name\": \"<string>\",\n                \"translatedName\": \"<string>\",\n                \"currentUserRole\": \"<boolean>\"\n            },\n            \"group\": {\n                \"name\": \"<string>\"\n            }\n        }\n    ],\n    \"description\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"dashboard",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the dashboard to update."
								}
							]
						},
						"description": "Updates a dashboard, replacing all the dashboard details with those provided.\n\n**[Permissions](#permissions) required:** None\n\nThe dashboard to be updated must be owned by the user."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Auditors dashboard\",\n    \"description\": \"A dashboard to help auditors identify sample of issues to check.\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"global\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":\\\"10000\\\",\\\"isFavourite\\\":false,\\\"name\\\":\\\"System Dashboard\\\",\\\"popularity\\\":1,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/dashboard/10000\\\",\\\"sharePermissions\\\":[{\\\"type\\\":\\\"global\\\"}],\\\"view\\\":\\\"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000\\\"}\""
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Auditors dashboard\",\n    \"description\": \"A dashboard to help auditors identify sample of issues to check.\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"global\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Auditors dashboard\",\n    \"description\": \"A dashboard to help auditors identify sample of issues to check.\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"global\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the dashboard is not found or the dashboard is not owned by the user.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Auditors dashboard\",\n    \"description\": \"A dashboard to help auditors identify sample of issues to check.\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"global\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						}
					]
				},
				{
					"name": "Delete Dashboard",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"dashboard",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the dashboard."
								}
							]
						},
						"description": "Deletes a dashboard.\n\n**[Permissions](#permissions) required:** None\n\nThe dashboard to be deleted must be owned by the user."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the dashboard is deleted.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Copy Dashboard",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"<string>\",\n            \"project\": {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"favourite\": \"<boolean>\"\n            },\n            \"role\": {\n                \"name\": \"<string>\",\n                \"translatedName\": \"<string>\",\n                \"currentUserRole\": \"<boolean>\"\n            },\n            \"group\": {\n                \"name\": \"<string>\"\n            }\n        },\n        {\n            \"type\": \"<string>\",\n            \"project\": {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"favourite\": \"<boolean>\"\n            },\n            \"role\": {\n                \"name\": \"<string>\",\n                \"translatedName\": \"<string>\",\n                \"currentUserRole\": \"<boolean>\"\n            },\n            \"group\": {\n                \"name\": \"<string>\"\n            }\n        }\n    ],\n    \"description\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/dashboard/:id/copy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"dashboard",
								":id",
								"copy"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) "
								}
							]
						},
						"description": "Copies a dashboard. Any values provided in the `dashboard` parameter replace those in the copied dashboard.\n\n**[Permissions](#permissions) required:** None\n\nThe dashboard to be copied must be owned by or shared with the user."
					},
					"response": [
						{
							"name": "Returned if the dashboard is not found or the dashboard is not owned by or shared with the user.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Auditors dashboard\",\n    \"description\": \"A dashboard to help auditors identify sample of issues to check.\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"global\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id/copy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id",
										"copy"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Auditors dashboard\",\n    \"description\": \"A dashboard to help auditors identify sample of issues to check.\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"global\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id/copy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id",
										"copy"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Auditors dashboard\",\n    \"description\": \"A dashboard to help auditors identify sample of issues to check.\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"global\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id/copy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id",
										"copy"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":\\\"10000\\\",\\\"isFavourite\\\":false,\\\"name\\\":\\\"System Dashboard\\\",\\\"popularity\\\":1,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/dashboard/10000\\\",\\\"sharePermissions\\\":[{\\\"type\\\":\\\"global\\\"}],\\\"view\\\":\\\"https://your-domain.atlassian.net/secure/Dashboard.jspa?selectPageId=10000\\\"}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Auditors dashboard\",\n    \"description\": \"A dashboard to help auditors identify sample of issues to check.\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"global\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/dashboard/:id/copy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"dashboard",
										":id",
										"copy"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						}
					]
				}
			]
		},
		{
			"name": "Expression",
			"item": [
				{
					"name": "Analyse Jira Expression",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"expressions\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"contextVariables\": \"<object>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/expression/analyse?check=syntax",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"expression",
								"analyse"
							],
							"query": [
								{
									"key": "check",
									"value": "syntax",
									"description": "The check to perform:\n\n *  `syntax` Each expression's syntax is checked to ensure the expression can be parsed. Also, syntactic limits are validated. For example, the expression's length.\n *  `type` EXPERIMENTAL. Each expression is type checked and the final type of the expression inferred. Any type errors that would result in the expression failure at runtime are reported. For example, accessing properties that don't exist or passing the wrong number of arguments to functions. Also performs the syntax check.\n *  `complexity` EXPERIMENTAL. Determines the formulae for how many [expensive operations](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#expensive-operations) each expression may execute."
								}
							]
						},
						"description": "Analyses and validates Jira expressions.\n\nAs an experimental feature, this operation can also attempt to type-check the expressions.\n\nLearn more about Jira expressions in the [documentation](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/).\n\n**[Permissions](#permissions) required**: None."
					},
					"response": [
						{
							"name": "404 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contextVariables\": {\n        \"listOfStrings\": \"List<String>\",\n        \"record\": \"{ a: Number, b: String }\",\n        \"value\": \"User\"\n    },\n    \"expressions\": [\n        \"issues.map(issue => issue.properties['property_key'])\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/expression/analyse?check=syntax",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"expression",
										"analyse"
									],
									"query": [
										{
											"key": "check",
											"value": "syntax"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contextVariables\": {\n        \"listOfStrings\": \"List<String>\",\n        \"record\": \"{ a: Number, b: String }\",\n        \"value\": \"User\"\n    },\n    \"expressions\": [\n        \"issues.map(issue => issue.properties['property_key'])\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/expression/analyse?check=syntax",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"expression",
										"analyse"
									],
									"query": [
										{
											"key": "check",
											"value": "syntax"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contextVariables\": {\n        \"listOfStrings\": \"List<String>\",\n        \"record\": \"{ a: Number, b: String }\",\n        \"value\": \"User\"\n    },\n    \"expressions\": [\n        \"issues.map(issue => issue.properties['property_key'])\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/expression/analyse?check=syntax",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"expression",
										"analyse"
									],
									"query": [
										{
											"key": "check",
											"value": "syntax"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contextVariables\": {\n        \"listOfStrings\": \"List<String>\",\n        \"record\": \"{ a: Number, b: String }\",\n        \"value\": \"User\"\n    },\n    \"expressions\": [\n        \"issues.map(issue => issue.properties['property_key'])\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/expression/analyse?check=syntax",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"expression",
										"analyse"
									],
									"query": [
										{
											"key": "check",
											"value": "syntax"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"results\\\":[{\\\"expression\\\":\\\"analysed expression\\\",\\\"errors\\\":[{\\\"line\\\":1,\\\"column\\\":4,\\\"message\\\":\\\"!, -, typeof, (, IDENTIFIER, null, true, false, NUMBER, STRING, new, [ or { expected, > encountered.\\\",\\\"type\\\":\\\"syntax\\\"},{\\\"message\\\":\\\"Jira expression is too long (1040), limit: 1000 characters\\\",\\\"type\\\":\\\"other\\\"},{\\\"message\\\":\\\"Jira expression has too many nodes (150), limit: 100 leaves\\\",\\\"type\\\":\\\"other\\\"}],\\\"valid\\\":false},{\\\"expression\\\":\\\"issues.map(i => {idAndKey: [i.id, i.key], summary: i.summary, comments: i.comments})\\\",\\\"valid\\\":true,\\\"type\\\":\\\"List<{idAndKey: [Number, String], summary: String, comments: List<Comment>}>\\\",\\\"complexity\\\":{\\\"expensiveOperations\\\":\\\"N\\\",\\\"variables\\\":{\\\"N\\\":\\\"issues\\\"}}},{\\\"expression\\\":\\\"issues.map(i => i.id > '0')\\\",\\\"errors\\\":[{\\\"expression\\\":\\\"i.id > 0\\\",\\\"message\\\":\\\"Can't compare Number to String.\\\",\\\"type\\\":\\\"type\\\"}],\\\"valid\\\":false,\\\"type\\\":\\\"TypeError\\\"}]}\""
						}
					]
				},
				{
					"name": "Evaluate Jira Expression",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"expression\": \"<string>\",\n    \"context\": {\n        \"issue\": {\n            \"id\": \"<long>\",\n            \"key\": \"<string>\"\n        },\n        \"issues\": {\n            \"jql\": {\n                \"query\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"startAt\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"maxResults\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"validation\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        },\n        \"project\": {\n            \"id\": \"<long>\",\n            \"key\": \"<string>\"\n        },\n        \"sprint\": \"<long>\",\n        \"board\": \"<long>\",\n        \"serviceDesk\": \"<long>\",\n        \"customerRequest\": \"<long>\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/expression/eval?expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"expression",
								"eval"
							],
							"query": [
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts `meta.complexity` that returns information about the expression complexity. For example, the number of expensive operations used by the expression and how close the expression is to reaching the [complexity limit](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#restrictions). Useful when designing and debugging your expressions."
								}
							]
						},
						"description": "Evaluates a Jira expression and returns its value.\n\nThis resource can be used to test Jira expressions that you plan to use elsewhere, or to fetch data in a flexible way. Consult the [Jira expressions documentation](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/) for more details.\n\n#### Context variables ####\n\nThe following context variables are available to Jira expressions evaluated by this resource. Their presence depends on various factors; usually you need to manually request them in the context object sent in the payload, but some of them are added automatically under certain conditions.\n\n *  `user` ([User](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user)): The current user. Always available and equal to `null` if the request is anonymous.\n *  `app` ([App](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#app)): The Connect app that made the request. Available only for authenticated requests made by Connect Apps (read more here: [Authentication for Connect apps](https://developer.atlassian.com/cloud/jira/platform/security-for-connect-apps/)).\n *  `issue` ([Issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue)): The current issue. Available only when the issue is provided in the request context object.\n *  `issues` ([List](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#list) of [Issues](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue)): A collection of issues matching a JQL query. Available only when JQL is provided in the request context object.\n *  `project` ([Project](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#project)): The current project. Available only when the project is provided in the request context object.\n *  `sprint` ([Sprint](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#sprint)): The current sprint. Available only when the sprint is provided in the request context object.\n *  `board` ([Board](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#board)): The current board. Available only when the board is provided in the request context object.\n *  `serviceDesk` ([ServiceDesk](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#servicedesk)): The current service desk. Available only when the service desk is provided in the request context object.\n *  `customerRequest` ([CustomerRequest](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#customerrequest)): The current customer request. Available only when the customer request is provided in the request context object.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required**: None. However, an expression may return different results for different users depending on their permissions. For example, different users may see different comments on the same issue.  \nPermission to access Jira Software is required to access Jira Software context variables (`board` and `sprint`) or fields (for example, `issue.sprint`)."
					},
					"response": [
						{
							"name": "Returned if the evaluation results in a value. The result is a JSON primitive value, list, or object.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expression\": \"{ key: issue.key, type: issue.issueType.name, links: issue.links.map(link => link.linkedIssue.id) }\",\n    \"context\": {\n        \"issue\": {\n            \"key\": \"ACJIRA-1470\"\n        },\n        \"sprint\": 10001,\n        \"project\": {\n            \"key\": \"ACJIRA\"\n        },\n        \"serviceDesk\": 10023,\n        \"issues\": {\n            \"jql\": {\n                \"maxResults\": 100,\n                \"query\": \"project = HSP\",\n                \"startAt\": 0,\n                \"validation\": \"strict\"\n            }\n        },\n        \"board\": 10100,\n        \"customerRequest\": 1450\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/expression/eval?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"expression",
										"eval"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"value\\\":\\\"The expression's result. This value can be any JSON, not necessarily a String\\\",\\\"meta\\\":{\\\"complexity\\\":{\\\"steps\\\":{\\\"value\\\":1,\\\"limit\\\":10000},\\\"expensiveOperations\\\":{\\\"value\\\":3,\\\"limit\\\":10},\\\"beans\\\":{\\\"value\\\":0,\\\"limit\\\":1000},\\\"primitiveValues\\\":{\\\"value\\\":1,\\\"limit\\\":10000}},\\\"issues\\\":{\\\"jql\\\":{\\\"startAt\\\":0,\\\"maxResults\\\":1000,\\\"count\\\":140,\\\"totalCount\\\":140,\\\"validationWarnings\\\":[\\\"There is a problem with the JQL query.\\\"]}}}}\""
						},
						{
							"name": "Returned if any object provided in the request context is not found or the user does not have permission to view it.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expression\": \"{ key: issue.key, type: issue.issueType.name, links: issue.links.map(link => link.linkedIssue.id) }\",\n    \"context\": {\n        \"issue\": {\n            \"key\": \"ACJIRA-1470\"\n        },\n        \"sprint\": 10001,\n        \"project\": {\n            \"key\": \"ACJIRA\"\n        },\n        \"serviceDesk\": 10023,\n        \"issues\": {\n            \"jql\": {\n                \"maxResults\": 100,\n                \"query\": \"project = HSP\",\n                \"startAt\": 0,\n                \"validation\": \"strict\"\n            }\n        },\n        \"board\": 10100,\n        \"customerRequest\": 1450\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/expression/eval?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"expression",
										"eval"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Issue does not exist or you do not have permission to see it.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if:\n\n *  the request is invalid, that is:\n    \n     *  invalid data is provided, such as a request including issue ID and key.\n     *  the expression is invalid and can not be parsed.\n *  evaluation fails at runtime. This may happen for various r",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expression\": \"{ key: issue.key, type: issue.issueType.name, links: issue.links.map(link => link.linkedIssue.id) }\",\n    \"context\": {\n        \"issue\": {\n            \"key\": \"ACJIRA-1470\"\n        },\n        \"sprint\": 10001,\n        \"project\": {\n            \"key\": \"ACJIRA\"\n        },\n        \"serviceDesk\": 10023,\n        \"issues\": {\n            \"jql\": {\n                \"maxResults\": 100,\n                \"query\": \"project = HSP\",\n                \"startAt\": 0,\n                \"validation\": \"strict\"\n            }\n        },\n        \"board\": 10100,\n        \"customerRequest\": 1450\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/expression/eval?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"expression",
										"eval"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Evaluation failed: \\\\\\\"issue['a' + 'b']\\\\\\\" - Unrecognized property of `issue`: \\\\\\\"ab\\\\\\\" ('a' + 'b'). Available properties of type 'Issue' are: 'assignee', 'comments', 'description', 'id', 'issueType', 'key', 'priority', 'project', 'properties', 'reporter', 'status', 'summary'\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expression\": \"{ key: issue.key, type: issue.issueType.name, links: issue.links.map(link => link.linkedIssue.id) }\",\n    \"context\": {\n        \"issue\": {\n            \"key\": \"ACJIRA-1470\"\n        },\n        \"sprint\": 10001,\n        \"project\": {\n            \"key\": \"ACJIRA\"\n        },\n        \"serviceDesk\": 10023,\n        \"issues\": {\n            \"jql\": {\n                \"maxResults\": 100,\n                \"query\": \"project = HSP\",\n                \"startAt\": 0,\n                \"validation\": \"strict\"\n            }\n        },\n        \"board\": 10100,\n        \"customerRequest\": 1450\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/expression/eval?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"expression",
										"eval"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Field",
			"item": [
				{
					"name": "Field Id}",
					"item": [
						{
							"name": "Context",
							"item": [
								{
									"name": "Context Id}",
									"item": [
										{
											"name": "Option",
											"item": [
												{
													"name": "Get Custom Field Options (Context)",
													"request": {
														"auth": {
															"type": "inherit"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option?optionId=<long>&onlyOptions=false&startAt=0&maxResults=100",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId",
																"option"
															],
															"query": [
																{
																	"key": "optionId",
																	"value": "<long>",
																	"description": "The ID of the option."
																},
																{
																	"key": "onlyOptions",
																	"value": "false",
																	"description": "Whether only options are returned."
																},
																{
																	"key": "startAt",
																	"value": "0",
																	"description": "The index of the first item to return in a page of results (page offset)."
																},
																{
																	"key": "maxResults",
																	"value": "100",
																	"description": "The maximum number of items to return per page."
																}
															],
															"variable": [
																{
																	"key": "fieldId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the custom field."
																},
																{
																	"key": "contextId",
																	"value": "<long>",
																	"type": "string",
																	"description": "(Required) The ID of the context."
																}
															]
														},
														"description": "Returns a [paginated](#pagination) list of all custom field option for a context. Options are returned first then cascading options, in the order they display in Jira.\n\nThis operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
													},
													"response": [
														{
															"name": "Returned if the custom field is not found or the context doesn't match the custom field.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option?optionId=<long>&onlyOptions=false&startAt=0&maxResults=100",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"query": [
																		{
																			"key": "optionId",
																			"value": "<long>"
																		},
																		{
																			"key": "onlyOptions",
																			"value": "false"
																		},
																		{
																			"key": "startAt",
																			"value": "0"
																		},
																		{
																			"key": "maxResults",
																			"value": "100"
																		}
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"The custom field was not found.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the request is not valid.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option?optionId=<long>&onlyOptions=false&startAt=0&maxResults=100",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"query": [
																		{
																			"key": "optionId",
																			"value": "<long>"
																		},
																		{
																			"key": "onlyOptions",
																			"value": "false"
																		},
																		{
																			"key": "startAt",
																			"value": "0"
																		},
																		{
																			"key": "maxResults",
																			"value": "100"
																		}
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"The custom field doesn't support options.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the authentication credentials are incorrect or missing.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option?optionId=<long>&onlyOptions=false&startAt=0&maxResults=100",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"query": [
																		{
																			"key": "optionId",
																			"value": "<long>"
																		},
																		{
																			"key": "onlyOptions",
																			"value": "false"
																		},
																		{
																			"key": "startAt",
																			"value": "0"
																		},
																		{
																			"key": "maxResults",
																			"value": "100"
																		}
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Returned if the user does not have the necessary permission.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option?optionId=<long>&onlyOptions=false&startAt=0&maxResults=100",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"query": [
																		{
																			"key": "optionId",
																			"value": "<long>"
																		},
																		{
																			"key": "onlyOptions",
																			"value": "false"
																		},
																		{
																			"key": "startAt",
																			"value": "0"
																		},
																		{
																			"key": "maxResults",
																			"value": "100"
																		}
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can manage custom field options.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the request is successful.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option?optionId=<long>&onlyOptions=false&startAt=0&maxResults=100",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"query": [
																		{
																			"key": "optionId",
																			"value": "<long>"
																		},
																		{
																			"key": "onlyOptions",
																			"value": "false"
																		},
																		{
																			"key": "startAt",
																			"value": "0"
																		},
																		{
																			"key": "maxResults",
																			"value": "100"
																		}
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":4,\\\"isLast\\\":true,\\\"values\\\":[{\\\"id\\\":\\\"10001\\\",\\\"value\\\":\\\"New York\\\"},{\\\"id\\\":\\\"10002\\\",\\\"value\\\":\\\"Boston\\\",\\\"disabled\\\":true},{\\\"id\\\":\\\"10004\\\",\\\"value\\\":\\\"Denver\\\"},{\\\"id\\\":\\\"10003\\\",\\\"value\\\":\\\"Brooklyn\\\",\\\"optionId\\\":\\\"10001\\\"}]}\""
														}
													]
												},
												{
													"name": "Update Custom Field Options (Context)",
													"request": {
														"auth": {
															"type": "inherit"
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"options\": [\n        {\n            \"id\": \"<string>\",\n            \"value\": \"<string>\",\n            \"disabled\": \"<boolean>\"\n        },\n        {\n            \"id\": \"<string>\",\n            \"value\": \"<string>\",\n            \"disabled\": \"<boolean>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId",
																"option"
															],
															"variable": [
																{
																	"key": "fieldId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the custom field."
																},
																{
																	"key": "contextId",
																	"value": "<long>",
																	"type": "string",
																	"description": "(Required) The ID of the context."
																}
															]
														},
														"description": "Updates the options of a custom field.\n\nIf any of the options are not found, no options are updated. Options where the values in the request match the current values aren't updated and aren't reported in the response.\n\nNote that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource**, it cannot be used with issue field select list options created by Connect apps.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
													},
													"response": [
														{
															"name": "Returned if the user does not have the necessary permission.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"options\": [\n        {\n            \"disabled\": false,\n            \"id\": \"10001\",\n            \"value\": \"Scranton\"\n        },\n        {\n            \"disabled\": true,\n            \"id\": \"10002\",\n            \"value\": \"Manhattan\"\n        },\n        {\n            \"disabled\": false,\n            \"id\": \"10003\",\n            \"value\": \"The Electric City\"\n        }\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can manage custom field options.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the request is successful.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"options\": [\n        {\n            \"disabled\": false,\n            \"id\": \"10001\",\n            \"value\": \"Scranton\"\n        },\n        {\n            \"disabled\": true,\n            \"id\": \"10002\",\n            \"value\": \"Manhattan\"\n        },\n        {\n            \"disabled\": false,\n            \"id\": \"10003\",\n            \"value\": \"The Electric City\"\n        }\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"options\\\":[{\\\"id\\\":\\\"10001\\\",\\\"value\\\":\\\"Scranton\\\",\\\"disabled\\\":false},{\\\"id\\\":\\\"10002\\\",\\\"value\\\":\\\"Manhattan\\\",\\\"disabled\\\":true},{\\\"id\\\":\\\"10003\\\",\\\"value\\\":\\\"The Electric City\\\",\\\"disabled\\\":false}]}\""
														},
														{
															"name": "Returned if the authentication credentials are incorrect or missing.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"options\": [\n        {\n            \"disabled\": false,\n            \"id\": \"10001\",\n            \"value\": \"Scranton\"\n        },\n        {\n            \"disabled\": true,\n            \"id\": \"10002\",\n            \"value\": \"Manhattan\"\n        },\n        {\n            \"disabled\": false,\n            \"id\": \"10003\",\n            \"value\": \"The Electric City\"\n        }\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Returned if the field, context, or one or more options is not found.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"options\": [\n        {\n            \"disabled\": false,\n            \"id\": \"10001\",\n            \"value\": \"Scranton\"\n        },\n        {\n            \"disabled\": true,\n            \"id\": \"10002\",\n            \"value\": \"Manhattan\"\n        },\n        {\n            \"disabled\": false,\n            \"id\": \"10003\",\n            \"value\": \"The Electric City\"\n        }\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"The custom field was not found.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the request is not valid.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"options\": [\n        {\n            \"disabled\": false,\n            \"id\": \"10001\",\n            \"value\": \"Scranton\"\n        },\n        {\n            \"disabled\": true,\n            \"id\": \"10002\",\n            \"value\": \"Manhattan\"\n        },\n        {\n            \"disabled\": false,\n            \"id\": \"10003\",\n            \"value\": \"The Electric City\"\n        }\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"The custom field doesn't support options.\\\"],\\\"errors\\\":{}}\""
														}
													]
												},
												{
													"name": "Create Custom Field Options (Context)",
													"request": {
														"auth": {
															"type": "inherit"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"options\": [\n        {\n            \"value\": \"<string>\",\n            \"optionId\": \"<string>\",\n            \"disabled\": \"<boolean>\"\n        },\n        {\n            \"value\": \"<string>\",\n            \"optionId\": \"<string>\",\n            \"disabled\": \"<boolean>\"\n        }\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId",
																"option"
															],
															"variable": [
																{
																	"key": "fieldId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the custom field."
																},
																{
																	"key": "contextId",
																	"value": "<long>",
																	"type": "string",
																	"description": "(Required) The ID of the context."
																}
															]
														},
														"description": "Creates options and, where the custom select field is of the type Select List (cascading), cascading options for a custom select field. The options are added to a context of the field.\n\nThis operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
													},
													"response": [
														{
															"name": "Returned if the user does not have the necessary permission.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"options\": [\n        {\n            \"disabled\": false,\n            \"value\": \"Scranton\"\n        },\n        {\n            \"optionId\": \"10000\",\n            \"disabled\": true,\n            \"value\": \"Manhattan\"\n        },\n        {\n            \"disabled\": false,\n            \"value\": \"The Electric City\"\n        }\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can manage custom field options.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the authentication credentials are incorrect or missing.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"options\": [\n        {\n            \"disabled\": false,\n            \"value\": \"Scranton\"\n        },\n        {\n            \"optionId\": \"10000\",\n            \"disabled\": true,\n            \"value\": \"Manhattan\"\n        },\n        {\n            \"disabled\": false,\n            \"value\": \"The Electric City\"\n        }\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Returned if the custom field is not found or the context doesn't match the custom field.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"options\": [\n        {\n            \"disabled\": false,\n            \"value\": \"Scranton\"\n        },\n        {\n            \"optionId\": \"10000\",\n            \"disabled\": true,\n            \"value\": \"Manhattan\"\n        },\n        {\n            \"disabled\": false,\n            \"value\": \"The Electric City\"\n        }\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"The custom field was not found.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the request is not valid.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"options\": [\n        {\n            \"disabled\": false,\n            \"value\": \"Scranton\"\n        },\n        {\n            \"optionId\": \"10000\",\n            \"disabled\": true,\n            \"value\": \"Manhattan\"\n        },\n        {\n            \"disabled\": false,\n            \"value\": \"The Electric City\"\n        }\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"The custom field doesn't support options.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the request is successful.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"options\": [\n        {\n            \"disabled\": false,\n            \"value\": \"Scranton\"\n        },\n        {\n            \"optionId\": \"10000\",\n            \"disabled\": true,\n            \"value\": \"Manhattan\"\n        },\n        {\n            \"disabled\": false,\n            \"value\": \"The Electric City\"\n        }\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"options\\\":[{\\\"id\\\":\\\"10001\\\",\\\"value\\\":\\\"Scranton\\\",\\\"disabled\\\":false},{\\\"id\\\":\\\"10002\\\",\\\"value\\\":\\\"Manhattan\\\",\\\"optionId\\\":\\\"10000\\\",\\\"disabled\\\":true},{\\\"id\\\":\\\"10003\\\",\\\"value\\\":\\\"The Electric City\\\",\\\"disabled\\\":false}]}\""
														}
													]
												},
												{
													"name": "Reorder Custom Field Options (Context)",
													"request": {
														"auth": {
															"type": "inherit"
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"customFieldOptionIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"after\": \"<string>\",\n    \"position\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option/move",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId",
																"option",
																"move"
															],
															"variable": [
																{
																	"key": "fieldId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the custom field."
																},
																{
																	"key": "contextId",
																	"value": "<long>",
																	"type": "string",
																	"description": "(Required) The ID of the context."
																}
															]
														},
														"description": "Changes the order of custom field options or cascading options in a context.\n\nThis operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
													},
													"response": [
														{
															"name": "Returned if the user does not have the necessary permission.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"position\": \"First\",\n    \"customFieldOptionIds\": [\n        \"10001\",\n        \"10002\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option/move",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option",
																		"move"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can manage custom field options.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the request is not valid.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"position\": \"First\",\n    \"customFieldOptionIds\": [\n        \"10001\",\n        \"10002\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option/move",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option",
																		"move"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"'after' and 'position' were provided. Only 'after' or 'position' can be specified.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the field, the context, or one or more of the options is not found..",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"position\": \"First\",\n    \"customFieldOptionIds\": [\n        \"10001\",\n        \"10002\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option/move",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option",
																		"move"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"The custom field was not found.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the authentication credentials are incorrect or missing.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"position\": \"First\",\n    \"customFieldOptionIds\": [\n        \"10001\",\n        \"10002\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option/move",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option",
																		"move"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Returned if options are reordered.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"position\": \"First\",\n    \"customFieldOptionIds\": [\n        \"10001\",\n        \"10002\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option/move",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option",
																		"move"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Delete Custom Field Options (Context)",
													"request": {
														"auth": {
															"type": "inherit"
														},
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option/:optionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId",
																"option",
																":optionId"
															],
															"variable": [
																{
																	"key": "fieldId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the custom field."
																},
																{
																	"key": "contextId",
																	"value": "<long>",
																	"type": "string",
																	"description": "(Required) The ID of the context from which an option should be deleted."
																},
																{
																	"key": "optionId",
																	"value": "<long>",
																	"type": "string",
																	"description": "(Required) The ID of the option to delete."
																}
															]
														},
														"description": "Deletes a custom field option.\n\nOptions with cascading options cannot be deleted without deleting the cascading options first.\n\nThis operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
													},
													"response": [
														{
															"name": "Returned if the request is not valid.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option/:optionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option",
																		":optionId"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		},
																		{
																			"key": "optionId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"The custom field doesn't support options.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the field, the context, or the option is not found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option/:optionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option",
																		":optionId"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		},
																		{
																			"key": "optionId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"The custom field was not found.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the option is deleted.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option/:optionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option",
																		":optionId"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		},
																		{
																			"key": "optionId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Returned if the user does not have the necessary permission.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option/:optionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option",
																		":optionId"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		},
																		{
																			"key": "optionId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can manage custom field options.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the authentication credentials are incorrect or missing.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/option/:optionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"option",
																		":optionId"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		},
																		{
																			"key": "optionId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Project",
											"item": [
												{
													"name": "Assign Custom Field Context To Projects",
													"request": {
														"auth": {
															"type": "inherit"
														},
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/project",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId",
																"project"
															],
															"variable": [
																{
																	"key": "fieldId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the custom field."
																},
																{
																	"key": "contextId",
																	"value": "<long>",
																	"type": "string",
																	"description": "(Required) The ID of the context."
																}
															]
														},
														"description": "Assigns a custom field context to projects.\n\nIf any project in the request is assigned to any context of the custom field, the operation fails.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
													},
													"response": [
														{
															"name": "Returned if the request is not valid.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"projectIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/project",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"project"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"The projectIds must not contain duplicates.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the authentication credentials are incorrect or missing.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"projectIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/project",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"project"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Returned if operation is successful.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"projectIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/project",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"project"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Returned if the custom field, context, or project is not found.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"projectIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/project",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"project"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"The context was not found.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the user does not have the required permissions.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"projectIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/project",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"project"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access custom field contexts.\\\"],\\\"errors\\\":{}}\""
														}
													]
												},
												{
													"name": "Remove Custom Field Context From Projects",
													"request": {
														"auth": {
															"type": "inherit"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/project/remove",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId",
																"project",
																"remove"
															],
															"variable": [
																{
																	"key": "fieldId",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the custom field."
																},
																{
																	"key": "contextId",
																	"value": "<long>",
																	"type": "string",
																	"description": "(Required) The ID of the context."
																}
															]
														},
														"description": "Removes a custom field context from projects.\n\nA custom field context without any projects applies to all projects. Removing all projects from a custom field context would result in it applying to all projects.\n\nIf any project in the request is not assigned to the context, or the operation would result in two global contexts for the field, the operation fails.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
													},
													"response": [
														{
															"name": "Returned if the user does not have the required permissions.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"projectIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/project/remove",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"project",
																		"remove"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access custom field contexts.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the custom field, context, or one or more projects are not found.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"projectIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/project/remove",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"project",
																		"remove"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"The context was not found.\\\"],\\\"errors\\\":{}}\""
														},
														{
															"name": "Returned if the authentication credentials are incorrect or missing.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"projectIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/project/remove",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"project",
																		"remove"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Returned if the custom field context is removed from the projects.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"projectIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/project/remove",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"project",
																		"remove"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{}"
														},
														{
															"name": "Returned if the request is not valid.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"projectIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/project/remove",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"field",
																		":fieldId",
																		"context",
																		":contextId",
																		"project",
																		"remove"
																	],
																	"variable": [
																		{
																			"key": "fieldId"
																		},
																		{
																			"key": "contextId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"errorMessages\\\":[\\\"The projectIds must not contain duplicates.\\\"],\\\"errors\\\":{}}\""
														}
													]
												}
											]
										},
										{
											"name": "Update Custom Field Context",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context",
														":contextId"
													],
													"variable": [
														{
															"key": "fieldId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the custom field."
														},
														{
															"key": "contextId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the context."
														}
													]
												},
												"description": "Updates a [ custom field context](https://confluence.atlassian.com/adminjiracloud/what-are-custom-field-contexts-991923859.html).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the custom field or the context is not found.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"Bug fields context\",\n    \"description\": \"A context used to define the custom field options for bugs.\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"errorMessages\\\":[\\\"The context was not found.\\\"],\\\"errors\\\":{}}\""
												},
												{
													"name": "Returned if the user does not have the required permissions.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"Bug fields context\",\n    \"description\": \"A context used to define the custom field options for bugs.\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access custom field contexts.\\\"],\\\"errors\\\":{}}\""
												},
												{
													"name": "Returned if the context is updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"Bug fields context\",\n    \"description\": \"A context used to define the custom field options for bugs.\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"Bug fields context\",\n    \"description\": \"A context used to define the custom field options for bugs.\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is not valid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"Bug fields context\",\n    \"description\": \"A context used to define the custom field options for bugs.\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"errorMessages\\\":[\\\"The contextId has to be provided.\\\"],\\\"errors\\\":{}}\""
												}
											]
										},
										{
											"name": "Delete Custom Field Context",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context",
														":contextId"
													],
													"variable": [
														{
															"key": "fieldId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the custom field."
														},
														{
															"key": "contextId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the context."
														}
													]
												},
												"description": "Deletes a [ custom field context](https://confluence.atlassian.com/adminjiracloud/what-are-custom-field-contexts-991923859.html).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the custom field or the context is not found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"errorMessages\\\":[\\\"The context was not found.\\\"],\\\"errors\\\":{}}\""
												},
												{
													"name": "Returned if the user does not have the required permissions.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access custom field contexts.\\\"],\\\"errors\\\":{}}\""
												},
												{
													"name": "Returned if the context is deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Returned if the request is not valid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"errorMessages\\\":[\\\"The contextId has to be provided.\\\"],\\\"errors\\\":{}}\""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Add Issue Types To Context",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/issuetype",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context",
														":contextId",
														"issuetype"
													],
													"variable": [
														{
															"key": "fieldId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the custom field."
														},
														{
															"key": "contextId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the context."
														}
													]
												},
												"description": "Adds issue types to a custom field context, appending the issue types to the issue types list.\n\nA custom field context without any issue types applies to all issue types. Adding issue types to such a custom field context would result in it applying to only the listed issue types.\n\nIf any of the issue types exists in the custom field context, the operation fails and no issue types are added.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the custom field, context, or issue type is not found.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/issuetype",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId",
																"issuetype"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"errorMessages\\\":[\\\"The context was not found.\\\"],\\\"errors\\\":{}}\""
												},
												{
													"name": "Returned if the issue type is a sub-task, but sub-tasks are disabled in Jira settings.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/issuetype",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId",
																"issuetype"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"errorMessages\\\":[\\\"Sub-tasks are disabled in Jira. At least one of the issue types is a sub-task.\\\"],\\\"errors\\\":{}}\""
												},
												{
													"name": "Returned if the request is not valid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/issuetype",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId",
																"issuetype"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"errorMessages\\\":[\\\"These issue types are already associated with the context: 10001.\\\"],\\\"errors\\\":{}}\""
												},
												{
													"name": "Returned if operation is successful.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/issuetype",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId",
																"issuetype"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Returned if the user does not have the required permissions.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/issuetype",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId",
																"issuetype"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access custom field contexts.\\\"],\\\"errors\\\":{}}\""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10005\",\n        \"10006\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/:contextId/issuetype",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"field",
																":fieldId",
																"context",
																":contextId",
																"issuetype"
															],
															"variable": [
																{
																	"key": "fieldId"
																},
																{
																	"key": "contextId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Custom Field Contexts",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context?isAnyIssueType=<boolean>&isGlobalContext=<boolean>&contextId=<long>&startAt=0&maxResults=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldId",
												"context"
											],
											"query": [
												{
													"key": "isAnyIssueType",
													"value": "<boolean>",
													"description": "Whether to return contexts that apply to all issue types."
												},
												{
													"key": "isGlobalContext",
													"value": "<boolean>",
													"description": "Whether to return contexts that apply to all projects."
												},
												{
													"key": "contextId",
													"value": "<long>",
													"description": "The list of context IDs. To include multiple contexts, separate IDs with ampersand: `contextId=10000&contextId=10001`."
												},
												{
													"key": "startAt",
													"value": "0",
													"description": "The index of the first item to return in a page of results (page offset)."
												},
												{
													"key": "maxResults",
													"value": "50",
													"description": "The maximum number of items to return per page."
												}
											],
											"variable": [
												{
													"key": "fieldId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the custom field."
												}
											]
										},
										"description": "Returns a [paginated](#pagination) list of [ contexts](https://confluence.atlassian.com/adminjiracloud/what-are-custom-field-contexts-991923859.html) for a custom field. Contexts can be returned as follows:\n\n *  With no other parameters set, all contexts.\n *  By defining `id` only, all contexts from the list of IDs.\n *  By defining `isAnyIssueType`, limit the list of contexts returned to either those that apply to all issue types (true) or those that apply to only a subset of issue types (false)\n *  By defining `isGlobalContext`, limit the list of contexts return to either those that apply to all projects (global contexts) (true) or those that apply to only a subset of projects (false).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context?isAnyIssueType=<boolean>&isGlobalContext=<boolean>&contextId=<long>&startAt=0&maxResults=50",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context"
													],
													"query": [
														{
															"key": "isAnyIssueType",
															"value": "<boolean>"
														},
														{
															"key": "isGlobalContext",
															"value": "<boolean>"
														},
														{
															"key": "contextId",
															"value": "<long>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														}
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the required permissions.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context?isAnyIssueType=<boolean>&isGlobalContext=<boolean>&contextId=<long>&startAt=0&maxResults=50",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context"
													],
													"query": [
														{
															"key": "isAnyIssueType",
															"value": "<boolean>"
														},
														{
															"key": "isGlobalContext",
															"value": "<boolean>"
														},
														{
															"key": "contextId",
															"value": "<long>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														}
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access custom field contexts.\\\"],\\\"errors\\\":{}}\""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context?isAnyIssueType=<boolean>&isGlobalContext=<boolean>&contextId=<long>&startAt=0&maxResults=50",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context"
													],
													"query": [
														{
															"key": "isAnyIssueType",
															"value": "<boolean>"
														},
														{
															"key": "isGlobalContext",
															"value": "<boolean>"
														},
														{
															"key": "contextId",
															"value": "<long>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														}
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":2,\\\"isLast\\\":true,\\\"values\\\":[{\\\"id\\\":\\\"10025\\\",\\\"name\\\":\\\"Bug fields context\\\",\\\"description\\\":\\\"A context used to define the custom field options for bugs.\\\",\\\"isGlobalContext\\\":true,\\\"isAnyIssueType\\\":false},{\\\"id\\\":\\\"10026\\\",\\\"name\\\":\\\"Task fields context\\\",\\\"description\\\":\\\"A context used to define the custom field options for tasks.\\\",\\\"isGlobalContext\\\":false,\\\"isAnyIssueType\\\":false}]}\""
										},
										{
											"name": "Returned if the custom field was not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context?isAnyIssueType=<boolean>&isGlobalContext=<boolean>&contextId=<long>&startAt=0&maxResults=50",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context"
													],
													"query": [
														{
															"key": "isAnyIssueType",
															"value": "<boolean>"
														},
														{
															"key": "isGlobalContext",
															"value": "<boolean>"
														},
														{
															"key": "contextId",
															"value": "<long>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														}
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"The custom field was not found.\\\"],\\\"errors\\\":{}}\""
										}
									]
								},
								{
									"name": "Create Custom Field Context",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"projectIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"issueTypeIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldId",
												"context"
											],
											"variable": [
												{
													"key": "fieldId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the custom field."
												}
											]
										},
										"description": "Creates a custom field context.\n\nIf `projectIds` is empty, a global context is created. A global context is one that applies to all project. If `issueTypeIds` is empty, the context applies to all issue types.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeIds\": [\n        \"10010\"\n    ],\n    \"name\": \"Bug fields context\",\n    \"description\": \"A context used to define the custom field options for bugs.\",\n    \"projectIds\": []\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context"
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeIds\": [\n        \"10010\"\n    ],\n    \"name\": \"Bug fields context\",\n    \"description\": \"A context used to define the custom field options for bugs.\",\n    \"projectIds\": []\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context"
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the custom field context is created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeIds\": [\n        \"10010\"\n    ],\n    \"name\": \"Bug fields context\",\n    \"description\": \"A context used to define the custom field options for bugs.\",\n    \"projectIds\": []\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context"
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":\\\"10025\\\",\\\"name\\\":\\\"Bug fields context\\\",\\\"description\\\":\\\"A context used to define the custom field options for bugs.\\\",\\\"projectIds\\\":[],\\\"issueTypeIds\\\":[\\\"10010\\\"]}\""
										},
										{
											"name": "Returned if the issue type is a sub-task, but sub-tasks are disabled in Jira settings.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeIds\": [\n        \"10010\"\n    ],\n    \"name\": \"Bug fields context\",\n    \"description\": \"A context used to define the custom field options for bugs.\",\n    \"projectIds\": []\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context"
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"Sub-tasks are disabled in Jira. At least one of the issue types is a sub-task.\\\"],\\\"errors\\\":{}}\""
										},
										{
											"name": "Returned if the field, project, or issue type is not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeIds\": [\n        \"10010\"\n    ],\n    \"name\": \"Bug fields context\",\n    \"description\": \"A context used to define the custom field options for bugs.\",\n    \"projectIds\": []\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context"
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get Issue Types For Custom Field Context",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/issueTypeMapping?contextId=<long>&contextId=<long>&startAt=0&maxResults=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldId",
												"context",
												"issueTypeMapping"
											],
											"query": [
												{
													"key": "contextId",
													"value": "<long>",
													"description": "The ID of the context. To include multiple contexts, provide an ampersand-separated list. For example, `contextId=10001&contextId=10002`."
												},
												{
													"key": "contextId",
													"value": "<long>",
													"description": "The ID of the context. To include multiple contexts, provide an ampersand-separated list. For example, `contextId=10001&contextId=10002`."
												},
												{
													"key": "startAt",
													"value": "0",
													"description": "The index of the first item to return in a page of results (page offset)."
												},
												{
													"key": "maxResults",
													"value": "50",
													"description": "The maximum number of items to return per page."
												}
											],
											"variable": [
												{
													"key": "fieldId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the custom field."
												}
											]
										},
										"description": "Returns a [paginated](#pagination) list of context to issue type mappings for a custom field. Mappings are returned for all contexts or a list of contexts. Mappings are ordered first by context ID and then by issue type ID.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if operation is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/issueTypeMapping?contextId=<long>&contextId=<long>&startAt=0&maxResults=50",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context",
														"issueTypeMapping"
													],
													"query": [
														{
															"key": "contextId",
															"value": "<long>"
														},
														{
															"key": "contextId",
															"value": "<long>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														}
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":3,\\\"isLast\\\":true,\\\"values\\\":[{\\\"contextId\\\":\\\"10001\\\",\\\"issueTypeId\\\":\\\"10010\\\"},{\\\"contextId\\\":\\\"10001\\\",\\\"issueTypeId\\\":\\\"10011\\\"},{\\\"contextId\\\":\\\"10002\\\",\\\"isAnyIssueType\\\":true}]}\""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/issueTypeMapping?contextId=<long>&contextId=<long>&startAt=0&maxResults=50",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context",
														"issueTypeMapping"
													],
													"query": [
														{
															"key": "contextId",
															"value": "<long>"
														},
														{
															"key": "contextId",
															"value": "<long>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														}
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the required permissions.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/issueTypeMapping?contextId=<long>&contextId=<long>&startAt=0&maxResults=50",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context",
														"issueTypeMapping"
													],
													"query": [
														{
															"key": "contextId",
															"value": "<long>"
														},
														{
															"key": "contextId",
															"value": "<long>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														}
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access custom field contexts.\\\"],\\\"errors\\\":{}}\""
										}
									]
								},
								{
									"name": "Get Custom Field Contexts For Projects And Issue Types",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mappings\": [\n        {\n            \"issueTypeId\": \"<string>\",\n            \"projectId\": \"<string>\"\n        },\n        {\n            \"issueTypeId\": \"<string>\",\n            \"projectId\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/mapping?startAt=0&maxResults=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldId",
												"context",
												"mapping"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0",
													"description": "The index of the first item to return in a page of results (page offset)."
												},
												{
													"key": "maxResults",
													"value": "50",
													"description": "The maximum number of items to return per page."
												}
											],
											"variable": [
												{
													"key": "fieldId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the custom field."
												}
											]
										},
										"description": "Returns a [paginated](#pagination) list of project and issue type mappings and, for each mapping, the ID of a [custom field context](https://confluence.atlassian.com/x/k44fOw) that applies to the project and issue type.\n\nIf there is no custom field context assigned to the project then, if present, the custom field context that applies to all projects is returned if it also applies to the issue type or all issue types. If a custom field context is not found, the returned custom field context ID is `null`.\n\nDuplicate project and issue type mappings cannot be provided in the request.\n\nThe order of the returned values is the same as provided in the request.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"mappings\": [\n        {\n            \"issueTypeId\": \"10000\",\n            \"projectId\": \"10000\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"projectId\": \"10000\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"projectId\": \"10001\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/mapping?startAt=0&maxResults=50",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context",
														"mapping"
													],
													"query": [
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														}
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"mappings\": [\n        {\n            \"issueTypeId\": \"10000\",\n            \"projectId\": \"10000\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"projectId\": \"10000\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"projectId\": \"10001\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/mapping?startAt=0&maxResults=50",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context",
														"mapping"
													],
													"query": [
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														}
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"maxResults\\\":50,\\\"startAt\\\":0,\\\"total\\\":3,\\\"isLast\\\":true,\\\"values\\\":[{\\\"projectId\\\":\\\"10000\\\",\\\"issueTypeId\\\":\\\"10000\\\",\\\"contextId\\\":\\\"10000\\\"},{\\\"projectId\\\":\\\"10000\\\",\\\"issueTypeId\\\":\\\"10001\\\",\\\"contextId\\\":null},{\\\"projectId\\\":\\\"10001\\\",\\\"issueTypeId\\\":\\\"10002\\\",\\\"contextId\\\":\\\"10003\\\"}]}\""
										},
										{
											"name": "Returned if the request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"mappings\": [\n        {\n            \"issueTypeId\": \"10000\",\n            \"projectId\": \"10000\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"projectId\": \"10000\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"projectId\": \"10001\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/mapping?startAt=0&maxResults=50",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context",
														"mapping"
													],
													"query": [
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														}
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"Duplicate project and issue type mappings cannot be provided.\\\"],\\\"errors\\\":{}}\""
										},
										{
											"name": "Returned if the custom field, project, or issue type is not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"mappings\": [\n        {\n            \"issueTypeId\": \"10000\",\n            \"projectId\": \"10000\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"projectId\": \"10000\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"projectId\": \"10001\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/mapping?startAt=0&maxResults=50",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context",
														"mapping"
													],
													"query": [
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														}
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"These projects were not found: 10005.\\\"],\\\"errors\\\":{}}\""
										},
										{
											"name": "Returned if the user does not have the required permissions.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"mappings\": [\n        {\n            \"issueTypeId\": \"10000\",\n            \"projectId\": \"10000\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"projectId\": \"10000\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"projectId\": \"10001\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/context/mapping?startAt=0&maxResults=50",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldId",
														"context",
														"mapping"
													],
													"query": [
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														}
													],
													"variable": [
														{
															"key": "fieldId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access custom field contexts.\\\"],\\\"errors\\\":{}}\""
										}
									]
								}
							]
						},
						{
							"name": "Get Contexts For A Field",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/contexts?startAt=0&maxResults=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"field",
										":fieldId",
										"contexts"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "20",
											"description": "The maximum number of items to return per page."
										}
									],
									"variable": [
										{
											"key": "fieldId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the field to return contexts for."
										}
									]
								},
								"description": "Returns a [paginated](#pagination) list of the contexts a field is used in. Deprecated, use [ Get custom field contexts](#api-rest-api-3-field-fieldId-context-get).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/contexts?startAt=0&maxResults=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldId",
												"contexts"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "20"
												}
											],
											"variable": [
												{
													"key": "fieldId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/contexts?startAt=0&maxResults=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldId",
												"contexts"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "20"
												}
											],
											"variable": [
												{
													"key": "fieldId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"maxResults\\\":1,\\\"startAt\\\":0,\\\"total\\\":5,\\\"isLast\\\":false,\\\"values\\\":[{\\\"id\\\":10001,\\\"name\\\":\\\"Default Context\\\"}]}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/contexts?startAt=0&maxResults=20",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldId",
												"contexts"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "20"
												}
											],
											"variable": [
												{
													"key": "fieldId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Screens For A Field",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/screens?startAt=0&maxResults=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"field",
										":fieldId",
										"screens"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "100",
											"description": "The maximum number of items to return per page."
										}
									],
									"variable": [
										{
											"key": "fieldId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the field to return screens for."
										}
									]
								},
								"description": "Returns a [paginated](#pagination) list of the screens a field is used in.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/screens?startAt=0&maxResults=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldId",
												"screens"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "fieldId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"maxResults\\\":1,\\\"startAt\\\":0,\\\"total\\\":5,\\\"isLast\\\":false,\\\"values\\\":[{\\\"id\\\":10001,\\\"name\\\":\\\"Default Screen\\\",\\\"description\\\":\\\"Provides for the update of all system fields.\\\"}]}\""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/screens?startAt=0&maxResults=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldId",
												"screens"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "fieldId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldId/screens?startAt=0&maxResults=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldId",
												"screens"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "100"
												}
											],
											"variable": [
												{
													"key": "fieldId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Field Key}/option",
					"item": [
						{
							"name": "Suggestions",
							"item": [
								{
									"name": "Get Selectable Issue Field Options",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/suggestions/edit?startAt=0&maxResults=50&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldKey",
												"option",
												"suggestions",
												"edit"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0",
													"description": "The index of the first item to return in a page of results (page offset)."
												},
												{
													"key": "maxResults",
													"value": "50",
													"description": "The maximum number of items to return per page."
												},
												{
													"key": "projectId",
													"value": "<long>",
													"description": "Filters the results to options that are only available in the specified project."
												}
											],
											"variable": [
												{
													"key": "fieldKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`"
												}
											]
										},
										"description": "Returns a [paginated](#pagination) list of options for a select list issue field that can be viewed and selected by the user.\n\nNote that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/suggestions/edit?startAt=0&maxResults=50&projectId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														"suggestions",
														"edit"
													],
													"query": [
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														},
														{
															"key": "projectId",
															"value": "<long>"
														}
													],
													"variable": [
														{
															"key": "fieldKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the field is not found or does not support options.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/suggestions/edit?startAt=0&maxResults=50&projectId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														"suggestions",
														"edit"
													],
													"query": [
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														},
														{
															"key": "projectId",
															"value": "<long>"
														}
													],
													"variable": [
														{
															"key": "fieldKey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/suggestions/edit?startAt=0&maxResults=50&projectId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														"suggestions",
														"edit"
													],
													"query": [
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "50"
														},
														{
															"key": "projectId",
															"value": "<long>"
														}
													],
													"variable": [
														{
															"key": "fieldKey"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option/suggestions?startAt=0&maxResults=1\\\",\\\"nextPage\\\":\\\"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option/suggestions?startAt=1&maxResults=1\\\",\\\"maxResults\\\":1,\\\"startAt\\\":0,\\\"total\\\":10,\\\"isLast\\\":false,\\\"values\\\":[{\\\"id\\\":1,\\\"value\\\":\\\"Team 1\\\",\\\"properties\\\":{\\\"leader\\\":{\\\"name\\\":\\\"Leader Name\\\",\\\"email\\\":\\\"lname@example.com\\\"},\\\"members\\\":42,\\\"description\\\":\\\"The team's description\\\",\\\"founded\\\":\\\"2016-06-06\\\"}}]}\""
										}
									]
								},
								{
									"name": "Get Visible Issue Field Options",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/suggestions/search?startAt=0&maxResults=<integer>&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldKey",
												"option",
												"suggestions",
												"search"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0",
													"description": "The index of the first item to return in a page of results (page offset)."
												},
												{
													"key": "maxResults",
													"value": "<integer>",
													"description": "The maximum number of items to return per page."
												},
												{
													"key": "projectId",
													"value": "<long>",
													"description": "Filters the results to options that are only available in the specified project."
												}
											],
											"variable": [
												{
													"key": "fieldKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`"
												}
											]
										},
										"description": "Returns a [paginated](#pagination) list of options for a select list issue field that can be viewed by the user.\n\nNote that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/suggestions/search?startAt=0&maxResults=<integer>&projectId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														"suggestions",
														"search"
													],
													"query": [
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "<integer>"
														},
														{
															"key": "projectId",
															"value": "<long>"
														}
													],
													"variable": [
														{
															"key": "fieldKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the field is not found or does not support options.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/suggestions/search?startAt=0&maxResults=<integer>&projectId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														"suggestions",
														"search"
													],
													"query": [
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "<integer>"
														},
														{
															"key": "projectId",
															"value": "<long>"
														}
													],
													"variable": [
														{
															"key": "fieldKey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/suggestions/search?startAt=0&maxResults=<integer>&projectId=<long>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														"suggestions",
														"search"
													],
													"query": [
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "<integer>"
														},
														{
															"key": "projectId",
															"value": "<long>"
														}
													],
													"variable": [
														{
															"key": "fieldKey"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option/suggestions?startAt=0&maxResults=1\\\",\\\"nextPage\\\":\\\"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option/suggestions?startAt=1&maxResults=1\\\",\\\"maxResults\\\":1,\\\"startAt\\\":0,\\\"total\\\":10,\\\"isLast\\\":false,\\\"values\\\":[{\\\"id\\\":1,\\\"value\\\":\\\"Team 1\\\",\\\"properties\\\":{\\\"leader\\\":{\\\"name\\\":\\\"Leader Name\\\",\\\"email\\\":\\\"lname@example.com\\\"},\\\"members\\\":42,\\\"description\\\":\\\"The team's description\\\",\\\"founded\\\":\\\"2016-06-06\\\"}}]}\""
										}
									]
								}
							]
						},
						{
							"name": "Option Id}",
							"item": [
								{
									"name": "Get Issue Field Option",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldKey",
												"option",
												":optionId"
											],
											"variable": [
												{
													"key": "fieldKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`"
												},
												{
													"key": "optionId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the option to be returned."
												}
											]
										},
										"description": "Returns an option from a select list issue field.\n\nNote that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field."
									},
									"response": [
										{
											"name": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId"
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the option is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId"
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the requested option is returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId"
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":1,\\\"value\\\":\\\"Team 1\\\",\\\"properties\\\":{\\\"leader\\\":{\\\"name\\\":\\\"Leader Name\\\",\\\"email\\\":\\\"lname@example.com\\\"},\\\"members\\\":42,\\\"description\\\":\\\"The team's description\\\",\\\"founded\\\":\\\"2016-06-06\\\"},\\\"config\\\":{\\\"scope\\\":{\\\"projects\\\":[],\\\"projects2\\\":[{\\\"id\\\":1001,\\\"attributes\\\":[\\\"notSelectable\\\"]},{\\\"id\\\":1002,\\\"attributes\\\":[\\\"notSelectable\\\"]}],\\\"global\\\":{}},\\\"attributes\\\":[]}}\""
										},
										{
											"name": "Returned if the field is not found or does not support options.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId"
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update Issue Field Option",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\",\n    \"value\": \"<string>\",\n    \"properties\": \"<object>\",\n    \"config\": {\n        \"scope\": {\n            \"projects\": [\n                \"<long>\"\n            ],\n            \"projects2\": [\n                {\n                    \"id\": \"<long>\",\n                    \"attributes\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                }\n            ],\n            \"global\": {\n                \"attributes\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            }\n        },\n        \"attributes\": [\n            \"<string>\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldKey",
												"option",
												":optionId"
											],
											"variable": [
												{
													"key": "fieldKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`"
												},
												{
													"key": "optionId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the option to be updated."
												}
											]
										},
										"description": "Updates or creates an option for a select list issue field. This operation requires that the option ID is provided when creating an option, therefore, the option ID needs to be specified as a path and body parameter. The option ID provided in the path and body must be identical.\n\nNote that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field."
									},
									"response": [
										{
											"name": "Returned if the option is updated or created.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"Team 1\""
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId"
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":1,\\\"value\\\":\\\"Team 1\\\",\\\"properties\\\":{\\\"leader\\\":{\\\"name\\\":\\\"Leader Name\\\",\\\"email\\\":\\\"lname@example.com\\\"},\\\"members\\\":42,\\\"description\\\":\\\"The team's description\\\",\\\"founded\\\":\\\"2016-06-06\\\"},\\\"config\\\":{\\\"scope\\\":{\\\"projects\\\":[],\\\"projects2\\\":[{\\\"id\\\":1001,\\\"attributes\\\":[\\\"notSelectable\\\"]},{\\\"id\\\":1002,\\\"attributes\\\":[\\\"notSelectable\\\"]}],\\\"global\\\":{}},\\\"attributes\\\":[]}}\""
										},
										{
											"name": "Returned if field is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"Team 1\""
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId"
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"Team 1\""
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId"
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the option is invalid, or the *ID* in the request object does not match the *optionId* parameter.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\"Team 1\""
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId"
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Issue Field Option",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldKey",
												"option",
												":optionId"
											],
											"variable": [
												{
													"key": "fieldKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`"
												},
												{
													"key": "optionId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the option to be deleted."
												}
											]
										},
										"description": "Deletes an option from a select list issue field.\n\nNote that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field."
									},
									"response": [
										{
											"name": "Returned if the field or option is not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId"
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the field option is deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId"
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId"
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the option is selected for the field in any issue.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId"
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Replace Issue Field Option",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId/issue?replaceWith=<long>&jql=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldKey",
												"option",
												":optionId",
												"issue"
											],
											"query": [
												{
													"key": "replaceWith",
													"value": "<long>",
													"description": "The ID of the option that will replace the currently selected option."
												},
												{
													"key": "jql",
													"value": "<string>",
													"description": "A JQL query that specifies the issues to be updated. For example, *project=10000*."
												}
											],
											"variable": [
												{
													"key": "fieldKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`"
												},
												{
													"key": "optionId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the option to be deselected."
												}
											]
										},
										"description": "Deselects an issue-field select-list option from all issues where it is selected. A different option can be selected to replace the deselected option. The update can also be limited to a smaller set of issues by using a JQL query.\n\nThis is an [asynchronous operation](#async). The response object contains a link to the long-running task.\n\nNote that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field."
									},
									"response": [
										{
											"name": "Returned if the JQL query is invalid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId/issue?replaceWith=<long>&jql=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId",
														"issue"
													],
													"query": [
														{
															"key": "replaceWith",
															"value": "<long>"
														},
														{
															"key": "jql",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the long-running task to deselect the option is started.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId/issue?replaceWith=<long>&jql=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId",
														"issue"
													],
													"query": [
														{
															"key": "replaceWith",
															"value": "<long>"
														},
														{
															"key": "jql",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "See Other",
											"code": 303,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/task/1\\\",\\\"id\\\":\\\"1\\\",\\\"description\\\":\\\"Remove option 1 from issues matched by '*', and replace with option 3\\\",\\\"status\\\":\\\"COMPLETE\\\",\\\"result\\\":{\\\"modifiedIssues\\\":[10001,10010],\\\"unmodifiedIssues\\\":[10005],\\\"errors\\\":{\\\"errors\\\":{},\\\"errorMessages\\\":[\\\"Option 2 cannot be set on issue MKY-5 as it is not in the correct scope\\\"],\\\"httpStatusCode\\\":{\\\"present\\\":true}}},\\\"elapsedRuntime\\\":42}\""
										},
										{
											"name": "Returned if the field is not found or does not support options, or the options to be replaced are not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option/:optionId/issue?replaceWith=<long>&jql=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"field",
														":fieldKey",
														"option",
														":optionId",
														"issue"
													],
													"query": [
														{
															"key": "replaceWith",
															"value": "<long>"
														},
														{
															"key": "jql",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "fieldKey"
														},
														{
															"key": "optionId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get All Issue Field Options",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"field",
										":fieldKey",
										"option"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "50",
											"description": "The maximum number of items to return per page."
										}
									],
									"variable": [
										{
											"key": "fieldKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`"
										}
									]
								},
								"description": "Returns a [paginated](#pagination) list of all the options of a select list issue field. A select list issue field is a type of [issue field](https://developer.atlassian.com/cloud/jira/platform/modules/issue-field/) that enables a user to select a value from a list of options.\n\nNote that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field."
							},
							"response": [
								{
									"name": "Returned if the field is not found or does not support options.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option?startAt=0&maxResults=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldKey",
												"option"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												}
											],
											"variable": [
												{
													"key": "fieldKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option?startAt=0&maxResults=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldKey",
												"option"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												}
											],
											"variable": [
												{
													"key": "fieldKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option?startAt=0&maxResults=1\\\",\\\"nextPage\\\":\\\"https://your-domain.atlassian.net/rest/api/3/field/fieldKey/option?startAt=1&maxResults=1\\\",\\\"maxResults\\\":1,\\\"startAt\\\":0,\\\"total\\\":10,\\\"isLast\\\":false,\\\"values\\\":[{\\\"id\\\":1,\\\"value\\\":\\\"Team 1\\\",\\\"properties\\\":{\\\"leader\\\":{\\\"name\\\":\\\"Leader Name\\\",\\\"email\\\":\\\"lname@example.com\\\"},\\\"members\\\":42,\\\"description\\\":\\\"The team's description\\\",\\\"founded\\\":\\\"2016-06-06\\\"},\\\"config\\\":{\\\"scope\\\":{\\\"projects\\\":[],\\\"projects2\\\":[{\\\"id\\\":1001,\\\"attributes\\\":[\\\"notSelectable\\\"]},{\\\"id\\\":1002,\\\"attributes\\\":[\\\"notSelectable\\\"]}],\\\"global\\\":{}},\\\"attributes\\\":[]}}]}\""
								},
								{
									"name": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option?startAt=0&maxResults=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldKey",
												"option"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												}
											],
											"variable": [
												{
													"key": "fieldKey"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Issue Field Option",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"<string>\",\n    \"properties\": \"<object>\",\n    \"config\": {\n        \"scope\": {\n            \"projects\": [\n                \"<long>\"\n            ],\n            \"projects2\": [\n                {\n                    \"id\": \"<long>\",\n                    \"attributes\": [\n                        {\n                            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                        }\n                    ]\n                }\n            ],\n            \"global\": {\n                \"attributes\": [\n                    {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                ]\n            }\n        },\n        \"attributes\": [\n            \"<string>\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"field",
										":fieldKey",
										"option"
									],
									"variable": [
										{
											"key": "fieldKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`"
										}
									]
								},
								"description": "Creates an option for a select list issue field.\n\nNote that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"Team 1\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldKey",
												"option"
											],
											"variable": [
												{
													"key": "fieldKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"id\\\":1,\\\"value\\\":\\\"Team 1\\\",\\\"properties\\\":{\\\"leader\\\":{\\\"name\\\":\\\"Leader Name\\\",\\\"email\\\":\\\"lname@example.com\\\"},\\\"members\\\":42,\\\"description\\\":\\\"The team's description\\\",\\\"founded\\\":\\\"2016-06-06\\\"},\\\"config\\\":{\\\"scope\\\":{\\\"projects\\\":[],\\\"projects2\\\":[{\\\"id\\\":1001,\\\"attributes\\\":[\\\"notSelectable\\\"]},{\\\"id\\\":1002,\\\"attributes\\\":[\\\"notSelectable\\\"]}],\\\"global\\\":{}},\\\"attributes\\\":[]}}\""
								},
								{
									"name": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"Team 1\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldKey",
												"option"
											],
											"variable": [
												{
													"key": "fieldKey"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the option is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"Team 1\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldKey",
												"option"
											],
											"variable": [
												{
													"key": "fieldKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the field is not found or does not support options.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"Team 1\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/field/:fieldKey/option",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"field",
												":fieldKey",
												"option"
											],
											"variable": [
												{
													"key": "fieldKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Fields",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"field"
							]
						},
						"description": "Returns system and custom issue fields according to the following rules:\n\n *  Fields that cannot be added to the issue navigator are always returned.\n *  Fields that cannot be placed on an issue screen are always returned.\n *  Fields that depend on global Jira settings are only returned if the setting is enabled. That is, timetracking fields, subtasks, votes, and watches.\n *  For all other fields, this operation only returns the fields that the user has permission to view (that is, the field is used in at least one project that the user has *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.)\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"field"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"id\\\":\\\"description\\\",\\\"name\\\":\\\"Description\\\",\\\"custom\\\":false,\\\"orderable\\\":true,\\\"navigable\\\":true,\\\"searchable\\\":true,\\\"clauseNames\\\":[\\\"description\\\"],\\\"schema\\\":{\\\"type\\\":\\\"string\\\",\\\"system\\\":\\\"description\\\"}},{\\\"id\\\":\\\"summary\\\",\\\"key\\\":\\\"summary\\\",\\\"name\\\":\\\"Summary\\\",\\\"custom\\\":false,\\\"orderable\\\":true,\\\"navigable\\\":true,\\\"searchable\\\":true,\\\"clauseNames\\\":[\\\"summary\\\"],\\\"schema\\\":{\\\"type\\\":\\\"string\\\",\\\"system\\\":\\\"summary\\\"}}]\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"field"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Custom Field",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"searcherKey\": \"<string>\",\n    \"type\": \"<string>\",\n    \"description\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"field"
							]
						},
						"description": "Creates a custom field.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if:\n\n *  the user does not have permission to create custom fields.\n *  any of the request object properties have invalid or missing values.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"searcherKey\": \"com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher\",\n    \"name\": \"New custom field\",\n    \"description\": \"Custom field for picking groups\",\n    \"type\": \"com.atlassian.jira.plugin.system.customfieldtypes:grouppicker\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"field"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the custom field is created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"searcherKey\": \"com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher\",\n    \"name\": \"New custom field\",\n    \"description\": \"Custom field for picking groups\",\n    \"type\": \"com.atlassian.jira.plugin.system.customfieldtypes:grouppicker\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"field"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":\\\"customfield_10101\\\",\\\"key\\\":\\\"customfield_10101\\\",\\\"name\\\":\\\"New custom field\\\",\\\"untranslatedName\\\":\\\"New custom field\\\",\\\"custom\\\":true,\\\"orderable\\\":true,\\\"navigable\\\":true,\\\"searchable\\\":true,\\\"clauseNames\\\":[\\\"cf[10101]\\\",\\\"New custom field\\\"],\\\"schema\\\":{\\\"type\\\":\\\"project\\\",\\\"custom\\\":\\\"com.atlassian.jira.plugin.system.customfieldtypes:project\\\",\\\"customId\\\":10101}}\""
						}
					]
				},
				{
					"name": "Get Fields Paginated",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/field/search?startAt=0&maxResults=50&type=<string>&type=<string>&id=<string>&query=<string>&orderBy=<string>&expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"field",
								"search"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "The type of fields to search."
								},
								{
									"key": "type",
									"value": "<string>",
									"description": "The type of fields to search."
								},
								{
									"key": "id",
									"value": "<string>",
									"description": "The IDs of the custom fields to return or, where `query` is specified, filter."
								},
								{
									"key": "query",
									"value": "<string>",
									"description": "String used to perform a case-insensitive partial match with field names or descriptions."
								},
								{
									"key": "orderBy",
									"value": "<string>",
									"description": "[Order](#ordering) the results by a field:\n\n *  `contextsCount` Sorts by the number of contexts related to a field.\n *  `lastUsed` Sorts by the date when the value of the field last changed.\n *  `name` Sorts by the field name.\n *  `screensCount` Sorts by the number of screens related to a field."
								},
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `key` Returns the key for each field.\n *  `lastUsed` Returns the date when the value of the field last changed.\n *  `screensCount` Returns the number of screens related to a field.\n *  `contextsCount` Returns the number of contexts related to a field.\n *  `isLocked` Returns information about whether the field is [locked](https://confluence.atlassian.com/x/ZSN7Og)."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of fields for Classic Jira projects. The list can include:\n\n *  all fields.\n *  specific fields, by defining `id`.\n *  fields that contain a string in the field name or description, by defining `query`.\n *  specific fields that contain a string in the field name or description, by defining `id` and `query`.\n\nOnly custom fields can be queried, `type` must be set to `custom`.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/field/search?startAt=0&maxResults=50&type=<string>&type=<string>&id=<string>&query=<string>&orderBy=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"field",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access fields.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/field/search?startAt=0&maxResults=50&type=<string>&type=<string>&id=<string>&query=<string>&orderBy=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"field",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":50,\\\"startAt\\\":0,\\\"total\\\":2,\\\"isLast\\\":false,\\\"values\\\":[{\\\"id\\\":\\\"customfield_10000\\\",\\\"name\\\":\\\"Approvers\\\",\\\"description\\\":\\\"Contains users needed for approval. This custom field was created by Jira Service Desk.\\\",\\\"key\\\":\\\"customfield_10000\\\",\\\"isLocked\\\":true,\\\"screensCount\\\":2,\\\"contextsCount\\\":2,\\\"lastUsed\\\":{\\\"type\\\":\\\"TRACKED\\\",\\\"value\\\":\\\"2019-09-12T10:10:00.055+0000\\\"}},{\\\"id\\\":\\\"customfield_10001\\\",\\\"name\\\":\\\"Change reason\\\",\\\"description\\\":\\\"Choose the reason for the change request\\\",\\\"key\\\":\\\"customfield_10001\\\",\\\"isLocked\\\":false,\\\"screensCount\\\":2,\\\"contextsCount\\\":2}]}\""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/field/search?startAt=0&maxResults=50&type=<string>&type=<string>&id=<string>&query=<string>&orderBy=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"field",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Only custom fields can be queried.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/field/search?startAt=0&maxResults=50&type=<string>&type=<string>&id=<string>&query=<string>&orderBy=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"field",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "type",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "orderBy",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Field Configuration",
			"item": [
				{
					"name": "Get All Field Configurations",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/fieldconfiguration?startAt=0&maxResults=50&id=<long>&isDefault=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"fieldconfiguration"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "id",
									"value": "<long>",
									"description": "The list of field configuration IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`."
								},
								{
									"key": "isDefault",
									"value": "false",
									"description": "If *true* returns the default field configuration only."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of all field configurations.\n\nOnly field configurations used in classic projects are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfiguration?startAt=0&maxResults=50&id=<long>&isDefault=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfiguration"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "isDefault",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":50,\\\"startAt\\\":0,\\\"total\\\":2,\\\"isLast\\\":true,\\\"values\\\":[{\\\"id\\\":10000,\\\"name\\\":\\\"Default Field Configuration\\\",\\\"description\\\":\\\"The default field configuration description\\\",\\\"isDefault\\\":true},{\\\"id\\\":10001,\\\"name\\\":\\\"My Field Configuration\\\",\\\"description\\\":\\\"My field configuration description\\\"}]}\""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfiguration?startAt=0&maxResults=50&id=<long>&isDefault=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfiguration"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "isDefault",
											"value": "false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfiguration?startAt=0&maxResults=50&id=<long>&isDefault=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfiguration"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "isDefault",
											"value": "false"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Field Configuration Items",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/fieldconfiguration/:id/fields?startAt=0&maxResults=50",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"fieldconfiguration",
								":id",
								"fields"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the field configuration."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of all fields for a configuration.\n\nOnly the fields from configurations used in classic projects are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the field configuration is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfiguration/:id/fields?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfiguration",
										":id",
										"fields"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfiguration/:id/fields?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfiguration",
										":id",
										"fields"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfiguration/:id/fields?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfiguration",
										":id",
										"fields"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":50,\\\"startAt\\\":0,\\\"total\\\":2,\\\"isLast\\\":true,\\\"values\\\":[{\\\"id\\\":\\\"environment\\\",\\\"description\\\":\\\"For example operating system, software platform and/or hardware specifications (include as appropriate for the issue).\\\",\\\"isHidden\\\":false,\\\"isRequired\\\":false},{\\\"id\\\":\\\"description\\\",\\\"isHidden\\\":false,\\\"isRequired\\\":false}]}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfiguration/:id/fields?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfiguration",
										":id",
										"fields"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Field Configuration Scheme",
			"item": [
				{
					"name": "Project",
					"item": [
						{
							"name": "Get Field Configuration Schemes For Projects",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/project?startAt=0&maxResults=50&projectId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfigurationscheme",
										"project"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "50",
											"description": "The maximum number of items to return per page."
										},
										{
											"key": "projectId",
											"value": "<long>",
											"description": "(Required) The list of project IDs. To include multiple projects, separate IDs with ampersand: `projectId=10000&projectId=10001`."
										}
									]
								},
								"description": "Returns a [paginated](#pagination) list of field configuration schemes and, for each scheme, a list of the projects that use it.\n\nThe list is sorted by field configuration scheme ID. The first item contains the list of project IDs assigned to the default field configuration scheme.\n\nOnly field configuration schemes used in classic projects are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/project?startAt=0&maxResults=50&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"fieldconfigurationscheme",
												"project"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "projectId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"maxResults\\\":50,\\\"startAt\\\":0,\\\"total\\\":5,\\\"isLast\\\":true,\\\"values\\\":[{\\\"projectIds\\\":[\\\"10\\\",\\\"11\\\"]},{\\\"fieldConfigurationScheme\\\":{\\\"id\\\":\\\"10002\\\",\\\"name\\\":\\\"Field Configuration Scheme for software related projects\\\",\\\"description\\\":\\\"We can use this one for software projects.\\\"},\\\"projectIds\\\":[\\\"12\\\",\\\"13\\\",\\\"14\\\"]}]}\""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/project?startAt=0&maxResults=50&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"fieldconfigurationscheme",
												"project"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "projectId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/project?startAt=0&maxResults=50&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"fieldconfigurationscheme",
												"project"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "projectId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/project?startAt=0&maxResults=50&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"fieldconfigurationscheme",
												"project"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "projectId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Assign Field Configuration Scheme To Project",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"projectId\": \"<string>\",\n    \"fieldConfigurationSchemeId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfigurationscheme",
										"project"
									]
								},
								"description": "Assigns a field configuration scheme to a project. If the field configuration scheme ID is `null`, the operation assigns the default field configuration scheme.\n\nField configuration schemes can only be assigned to classic projects.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the user does not have the required permissions.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fieldConfigurationSchemeId\": \"10000\",\n    \"projectId\": \"10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"fieldconfigurationscheme",
												"project"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access field configurations.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the project is not a classic project.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fieldConfigurationSchemeId\": \"10000\",\n    \"projectId\": \"10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"fieldconfigurationscheme",
												"project"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"Only classic projects can have field configuration schemes assigned.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fieldConfigurationSchemeId\": \"10000\",\n    \"projectId\": \"10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"fieldconfigurationscheme",
												"project"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fieldConfigurationSchemeId\": \"10000\",\n    \"projectId\": \"10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"fieldconfigurationscheme",
												"project"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if the project is missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"fieldConfigurationSchemeId\": \"10000\",\n    \"projectId\": \"10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"fieldconfigurationscheme",
												"project"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The project was not found.\\\"],\\\"errors\\\":{}}\""
								}
							]
						}
					]
				},
				{
					"name": "Get All Field Configuration Schemes",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme?startAt=0&maxResults=50&id=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"fieldconfigurationscheme"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "id",
									"value": "<long>",
									"description": "The list of field configuration scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of field configuration schemes.\n\nOnly field configuration schemes used in classic projects are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme?startAt=0&maxResults=50&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfigurationscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme?startAt=0&maxResults=50&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfigurationscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme?startAt=0&maxResults=50&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfigurationscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme?startAt=0&maxResults=50&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfigurationscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":10,\\\"startAt\\\":0,\\\"total\\\":3,\\\"isLast\\\":true,\\\"values\\\":[{\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Field Configuration Scheme for Bugs\\\",\\\"description\\\":\\\"This field configuration scheme is for bugs only.\\\"},{\\\"id\\\":\\\"10001\\\",\\\"name\\\":\\\"Field Configuration Scheme for software related projects\\\",\\\"description\\\":\\\"We can use this one for software projects.\\\"},{\\\"id\\\":\\\"10002\\\",\\\"name\\\":\\\"Field Configuration Scheme for Epics\\\",\\\"description\\\":\\\"Use this one for Epic issue type.\\\"}]}\""
						}
					]
				},
				{
					"name": "Get Field Configuration Issue Type Items",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/mapping?startAt=0&maxResults=50&fieldConfigurationSchemeId=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"fieldconfigurationscheme",
								"mapping"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "fieldConfigurationSchemeId",
									"value": "<long>",
									"description": "The list of field configuration scheme IDs. To include multiple field configuration schemes separate IDs with ampersand: `fieldConfigurationSchemeId=10000&fieldConfigurationSchemeId=10001`."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of field configuration issue type items.\n\nOnly items used in classic projects are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/mapping?startAt=0&maxResults=50&fieldConfigurationSchemeId=10020",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfigurationscheme",
										"mapping"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "fieldConfigurationSchemeId",
											"value": "10020"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/mapping?startAt=0&maxResults=50&fieldConfigurationSchemeId=10020",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfigurationscheme",
										"mapping"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "fieldConfigurationSchemeId",
											"value": "10020"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if no field configuration schemes are found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/mapping?startAt=0&maxResults=50&fieldConfigurationSchemeId=10020",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfigurationscheme",
										"mapping"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "fieldConfigurationSchemeId",
											"value": "10020"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/mapping?startAt=0&maxResults=50&fieldConfigurationSchemeId=10020",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfigurationscheme",
										"mapping"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "fieldConfigurationSchemeId",
											"value": "10020"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":5,\\\"isLast\\\":true,\\\"values\\\":[{\\\"fieldConfigurationSchemeId\\\":\\\"10020\\\",\\\"issueTypeId\\\":\\\"10000\\\",\\\"fieldConfigurationId\\\":\\\"10010\\\"},{\\\"fieldConfigurationSchemeId\\\":\\\"10020\\\",\\\"issueTypeId\\\":\\\"10001\\\",\\\"fieldConfigurationId\\\":\\\"10010\\\"},{\\\"fieldConfigurationSchemeId\\\":\\\"10021\\\",\\\"issueTypeId\\\":\\\"10002\\\",\\\"fieldConfigurationId\\\":\\\"10000\\\"},{\\\"fieldConfigurationSchemeId\\\":\\\"10022\\\",\\\"issueTypeId\\\":\\\"default\\\",\\\"fieldConfigurationId\\\":\\\"10011\\\"},{\\\"fieldConfigurationSchemeId\\\":\\\"10023\\\",\\\"issueTypeId\\\":\\\"default\\\",\\\"fieldConfigurationId\\\":\\\"10000\\\"}]}\""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/fieldconfigurationscheme/mapping?startAt=0&maxResults=50&fieldConfigurationSchemeId=10020",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"fieldconfigurationscheme",
										"mapping"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "fieldConfigurationSchemeId",
											"value": "10020"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Filter",
			"item": [
				{
					"name": "Default Share Scope",
					"item": [
						{
							"name": "Get Default Share Scope",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter/defaultShareScope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter",
										"defaultShareScope"
									]
								},
								"description": "Returns the default sharing settings for new filters and dashboards for a user.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/defaultShareScope",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												"defaultShareScope"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/defaultShareScope",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												"defaultShareScope"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"scope\\\":\\\"GLOBAL\\\"}\""
								}
							]
						},
						{
							"name": "Set Default Share Scope",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scope\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter/defaultShareScope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter",
										"defaultShareScope"
									]
								},
								"description": "Sets the default sharing for new filters and dashboards for a user.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"scope\": \"GLOBAL\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/defaultShareScope",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												"defaultShareScope"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"scope\": \"GLOBAL\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/defaultShareScope",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												"defaultShareScope"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"scope\\\":\\\"GLOBAL\\\"}\""
								},
								{
									"name": "Returned if an invalid scope is set.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"scope\": \"GLOBAL\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/defaultShareScope",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												"defaultShareScope"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Id}",
					"item": [
						{
							"name": "Columns",
							"item": [
								{
									"name": "Get Columns",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id/columns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id",
												"columns"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the filter."
												}
											]
										},
										"description": "Returns the columns configured for a filter. The column configuration is used when the filter's results are viewed in *List View* with the *Columns* set to *Filter*.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None, however, column details are only returned for:\n\n *  filters owned by the user.\n *  filters shared with a group that the user is a member of.\n *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.\n *  filters shared with a public project.\n *  filters shared with the public."
									},
									"response": [
										{
											"name": "Returned if the user does not have permission to view the filter.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/columns",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"columns"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if a column configuration is not set for the filter.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/columns",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"columns"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/columns",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"columns"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"[{\\\"label\\\":\\\"Key\\\",\\\"value\\\":\\\"issuekey\\\"},{\\\"label\\\":\\\"Summary\\\",\\\"value\\\":\\\"summary\\\"}]\""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/columns",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"columns"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Columns",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "0",
													"value": "<string>",
													"description": "undefined",
													"type": "text"
												},
												{
													"key": "1",
													"value": "<string>",
													"description": "undefined",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id/columns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id",
												"columns"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the filter."
												}
											]
										},
										"description": "Sets the columns for a filter. Only navigable fields can be set as columns. Use [Get fields](#api-rest-api-3-field-get) to get the list fields in Jira. A navigable field has `navigable` set to `true`.\n\nThe parameters for this resource are expressed as HTML form data. For example, in curl:\n\n`curl -X PUT -d columns=summary -d columns=description https://your-domain.atlassian.net/rest/api/3/filter/10000/columns`\n\n**[Permissions](#permissions) required:** Permission to access Jira, however, columns are only set for:\n\n *  filters owned by the user.\n *  filters shared with a group that the user is a member of.\n *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.\n *  filters shared with a public project.\n *  filters shared with the public."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "0",
															"value": "<string>",
															"description": {
																"content": "undefined",
																"type": "text/plain"
															},
															"type": "text"
														},
														{
															"key": "1",
															"value": "<string>",
															"description": {
																"content": "undefined",
																"type": "text/plain"
															},
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/columns",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"columns"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Returned if:\n\n *  a non-navigable field is set as a column.\n *  the user does not have permission to view the filter.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "0",
															"value": "<string>",
															"description": {
																"content": "undefined",
																"type": "text/plain"
															},
															"type": "text"
														},
														{
															"key": "1",
															"value": "<string>",
															"description": {
																"content": "undefined",
																"type": "text/plain"
															},
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/columns",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"columns"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Reset Columns",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id/columns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id",
												"columns"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the filter."
												}
											]
										},
										"description": "Reset the user's column configuration for the filter to the default.\n\n**[Permissions](#permissions) required:** Permission to access Jira, however, columns are only reset for:\n\n *  filters owned by the user.\n *  filters shared with a group that the user is a member of.\n *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.\n *  filters shared with a public project.\n *  filters shared with the public."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/columns",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"columns"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to view the filter.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/columns",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"columns"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/columns",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"columns"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Favourite",
							"item": [
								{
									"name": "Add Filter As Favorite",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id/favourite?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id",
												"favourite"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>",
													"description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the filter."
												}
											]
										},
										"description": "Add a filter as a favorite for the user.\n\n**[Permissions](#permissions) required:** Permission to access Jira, however, the user can only favorite:\n\n *  filters owned by the user.\n *  filters shared with a group that the user is a member of.\n *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.\n *  filters shared with a public project.\n *  filters shared with the public."
									},
									"response": [
										{
											"name": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to favorite the filter.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/favourite?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"favourite"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/favourite?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"favourite"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/filter/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"All Open Bugs\\\",\\\"description\\\":\\\"Lists all open bugs\\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"jql\\\":\\\"type = Bug and resolution is empty\\\",\\\"viewUrl\\\":\\\"https://your-domain.atlassian.net/issues/?filter=10000\\\",\\\"searchUrl\\\":\\\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\\\",\\\"favourite\\\":true,\\\"favouritedCount\\\":0,\\\"sharePermissions\\\":[],\\\"subscriptions\\\":{\\\"size\\\":0,\\\"items\\\":[],\\\"max-results\\\":0,\\\"start-index\\\":0,\\\"end-index\\\":0}}\""
										}
									]
								},
								{
									"name": "Remove Filter As Favorite",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id/favourite?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id",
												"favourite"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>",
													"description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the filter."
												}
											]
										},
										"description": "Removes a filter as a favorite for the user. Note that this operation only removes filters visible to the user from the user's favorites list. For example, if the user favorites a public filter that is subsequently made private (and is therefore no longer visible on their favorites list) they cannot remove it from their favorites list.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
									},
									"response": [
										{
											"name": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to view the filter.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/favourite?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"favourite"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/favourite?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"favourite"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/filter/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"All Open Bugs\\\",\\\"description\\\":\\\"Lists all open bugs\\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"jql\\\":\\\"type = Bug and resolution is empty\\\",\\\"viewUrl\\\":\\\"https://your-domain.atlassian.net/issues/?filter=10000\\\",\\\"searchUrl\\\":\\\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\\\",\\\"favourite\\\":true,\\\"favouritedCount\\\":0,\\\"sharePermissions\\\":[],\\\"subscriptions\\\":{\\\"size\\\":0,\\\"items\\\":[],\\\"max-results\\\":0,\\\"start-index\\\":0,\\\"end-index\\\":0}}\""
										}
									]
								}
							]
						},
						{
							"name": "Permission",
							"item": [
								{
									"name": "Permission Id}",
									"item": [
										{
											"name": "Get Share Permission",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission/:permissionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"permission",
														":permissionId"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the filter."
														},
														{
															"key": "permissionId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the share permission."
														}
													]
												},
												"description": "Returns a share permission for a filter. A filter can be shared with groups, projects, all logged-in users, or the public. Sharing with all logged-in users or the public is known as a global share permission.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None, however, a share permission is only returned for:\n\n *  filters owned by the user.\n *  filters shared with a group that the user is a member of.\n *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.\n *  filters shared with a public project.\n *  filters shared with the public."
											},
											"response": [
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission/:permissionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"filter",
																":id",
																"permission",
																":permissionId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "permissionId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission/:permissionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"filter",
																":id",
																"permission",
																":permissionId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "permissionId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"id\\\":10000,\\\"type\\\":\\\"global\\\"}\""
												},
												{
													"name": "Returned if:\n\n *  the filter is not found.\n *  the permission is not found.\n *  the user does not have permission to view the filter.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission/:permissionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"filter",
																":id",
																"permission",
																":permissionId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "permissionId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Share Permission",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission/:permissionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"permission",
														":permissionId"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the filter."
														},
														{
															"key": "permissionId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the share permission."
														}
													]
												},
												"description": "Deletes a share permission from a filter.\n\n**[Permissions](#permissions) required:** Permission to access Jira and the user must own the filter."
											},
											"response": [
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission/:permissionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"filter",
																":id",
																"permission",
																":permissionId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "permissionId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission/:permissionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"filter",
																":id",
																"permission",
																":permissionId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "permissionId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if:\n\n *  the filter is not found.\n *  the user does not own the filter.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission/:permissionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"filter",
																":id",
																"permission",
																":permissionId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "permissionId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Share Permissions",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id",
												"permission"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the filter."
												}
											]
										},
										"description": "Returns the share permissions for a filter. A filter can be shared with groups, projects, all logged-in users, or the public. Sharing with all logged-in users or the public is known as a global share permission.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None, however, share permissions are only returned for:\n\n *  filters owned by the user.\n *  filters shared with a group that the user is a member of.\n *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.\n *  filters shared with a public project.\n *  filters shared with the public."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"permission"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to view the filter.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"permission"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"permission"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"[{\\\"id\\\":10000,\\\"type\\\":\\\"global\\\"},{\\\"id\\\":10010,\\\"type\\\":\\\"project\\\",\\\"project\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"name\\\":\\\"Example\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}}},{\\\"id\\\":10010,\\\"type\\\":\\\"project\\\",\\\"project\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY\\\",\\\"id\\\":\\\"10002\\\",\\\"key\\\":\\\"MKY\\\",\\\"name\\\":\\\"Example\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10002\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10002\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10002\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10002\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"},\\\"deleted\\\":true,\\\"retentionTillDate\\\":\\\"2021-02-15T01:45:38.378+0000\\\",\\\"deletedDate\\\":\\\"2020-12-17T01:45:38.378+0000\\\",\\\"deletedBy\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false}},\\\"role\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}},{\\\"id\\\":10010,\\\"type\\\":\\\"group\\\",\\\"group\\\":{\\\"name\\\":\\\"jira-administrators\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\\\"}}]\""
										}
									]
								},
								{
									"name": "Add Share Permission",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": \"<string>\",\n    \"projectId\": \"<string>\",\n    \"groupname\": \"<string>\",\n    \"projectRoleId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id",
												"permission"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the filter."
												}
											]
										},
										"description": "Add a share permissions to a filter. If you add a global share permission (one for all logged-in users or the public) it will overwrite all share permissions for the filter.\n\nBe aware that this operation uses different objects for updating share permissions compared to [Update filter](#api-rest-api-3-filter-id-put).\n\n**[Permissions](#permissions) required:** *Share dashboards and filters* [global permission](https://confluence.atlassian.com/x/x4dKLg) and the user must own the filter."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"group\",\n    \"groupname\": \"jira-administrators\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"permission"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"[{\\\"id\\\":10000,\\\"type\\\":\\\"global\\\"},{\\\"id\\\":10010,\\\"type\\\":\\\"project\\\",\\\"project\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"name\\\":\\\"Example\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}}},{\\\"id\\\":10010,\\\"type\\\":\\\"project\\\",\\\"project\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY\\\",\\\"id\\\":\\\"10002\\\",\\\"key\\\":\\\"MKY\\\",\\\"name\\\":\\\"Example\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10002\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10002\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10002\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10002\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"},\\\"deleted\\\":true,\\\"retentionTillDate\\\":\\\"2021-02-15T01:45:38.378+0000\\\",\\\"deletedDate\\\":\\\"2020-12-17T01:45:38.378+0000\\\",\\\"deletedBy\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false}},\\\"role\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}},{\\\"id\\\":10010,\\\"type\\\":\\\"group\\\",\\\"group\\\":{\\\"name\\\":\\\"jira-administrators\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\\\"}}]\""
										},
										{
											"name": "Returned if:\n\n *  the request object is invalid. For example, it contains an invalid type, the ID does not match the type, or the project or group is not found.\n *  the user does not own the filter.\n *  the user does not have the required permissions.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"group\",\n    \"groupname\": \"jira-administrators\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"permission"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to view the filter.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"group\",\n    \"groupname\": \"jira-administrators\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"permission"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"group\",\n    \"groupname\": \"jira-administrators\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/filter/:id/permission",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"filter",
														":id",
														"permission"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Filter",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter/:id?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter",
										":id"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the filter to return."
										}
									]
								},
								"description": "Returns a filter.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None, however, the filter is only returned where it is:\n\n *  owned by the user.\n *  shared with a group that the user is a member of.\n *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.\n *  shared with a public project.\n *  shared with the public."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/filter/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"All Open Bugs\\\",\\\"description\\\":\\\"Lists all open bugs\\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"jql\\\":\\\"type = Bug and resolution is empty\\\",\\\"viewUrl\\\":\\\"https://your-domain.atlassian.net/issues/?filter=10000\\\",\\\"searchUrl\\\":\\\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\\\",\\\"favourite\\\":true,\\\"favouritedCount\\\":0,\\\"sharePermissions\\\":[],\\\"subscriptions\\\":{\\\"size\\\":0,\\\"items\\\":[],\\\"max-results\\\":0,\\\"start-index\\\":0,\\\"end-index\\\":0}}\""
								},
								{
									"name": "Returned if the filter is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Filter",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"jql\": \"<string>\",\n    \"favourite\": \"<boolean>\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"<string>\",\n            \"project\": {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"favourite\": \"<boolean>\"\n            },\n            \"role\": {\n                \"name\": \"<string>\",\n                \"translatedName\": \"<string>\",\n                \"currentUserRole\": \"<boolean>\"\n            },\n            \"group\": {\n                \"name\": \"<string>\"\n            }\n        },\n        {\n            \"type\": \"<string>\",\n            \"project\": {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"favourite\": \"<boolean>\"\n            },\n            \"role\": {\n                \"name\": \"<string>\",\n                \"translatedName\": \"<string>\",\n                \"currentUserRole\": \"<boolean>\"\n            },\n            \"group\": {\n                \"name\": \"<string>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter/:id?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter",
										":id"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the filter to update."
										}
									]
								},
								"description": "Updates a filter. Use this operation to update a filter's name, description, JQL, or sharing.\n\n**[Permissions](#permissions) required:** Permission to access Jira, however the user must own the filter."
							},
							"response": [
								{
									"name": "Returned if the request object is invalid. For example, the `name` is not unique or the project ID is not specified for a project role share permission.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"jql\": \"type = Bug and resolution is empty\",\n    \"name\": \"All Open Bugs\",\n    \"description\": \"Lists all open bugs\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"jql\": \"type = Bug and resolution is empty\",\n    \"name\": \"All Open Bugs\",\n    \"description\": \"Lists all open bugs\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/filter/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"All Open Bugs\\\",\\\"description\\\":\\\"Lists all open bugs\\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"jql\\\":\\\"type = Bug and resolution is empty\\\",\\\"viewUrl\\\":\\\"https://your-domain.atlassian.net/issues/?filter=10000\\\",\\\"searchUrl\\\":\\\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\\\",\\\"favourite\\\":true,\\\"favouritedCount\\\":0,\\\"sharePermissions\\\":[],\\\"subscriptions\\\":{\\\"size\\\":0,\\\"items\\\":[],\\\"max-results\\\":0,\\\"start-index\\\":0,\\\"end-index\\\":0}}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"jql\": \"type = Bug and resolution is empty\",\n    \"name\": \"All Open Bugs\",\n    \"description\": \"Lists all open bugs\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Filter",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the filter to delete."
										}
									]
								},
								"description": "Delete a filter.\n\n**[Permissions](#permissions) required:** Permission to access Jira, however filters can only be deleted by the creator of the filter or a user with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the filter is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have permission to delete the filter.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/filter/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"filter",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Filters",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/filter?expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"filter"
							],
							"query": [
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`."
								}
							]
						},
						"description": "Returns all filters. Deprecated, use [ Search for filters](#api-rest-api-3-filter-search-get) that supports search and pagination.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None, however, only the following filters are returned:\n\n *  filters owned by the user.\n *  filters shared with a group that the user is a member of.\n *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.\n *  filters shared with a public project.\n *  filters shared with the public."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/filter/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"All Open Bugs\\\",\\\"description\\\":\\\"Lists all open bugs\\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"jql\\\":\\\"type = Bug and resolution is empty\\\",\\\"viewUrl\\\":\\\"https://your-domain.atlassian.net/issues/?filter=10000\\\",\\\"searchUrl\\\":\\\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\\\",\\\"favourite\\\":true,\\\"favouritedCount\\\":0,\\\"sharePermissions\\\":[],\\\"subscriptions\\\":{\\\"size\\\":0,\\\"items\\\":[],\\\"max-results\\\":0,\\\"start-index\\\":0,\\\"end-index\\\":0}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Filter",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"jql\": \"<string>\",\n    \"favourite\": \"<boolean>\",\n    \"sharePermissions\": [\n        {\n            \"type\": \"<string>\",\n            \"project\": {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"favourite\": \"<boolean>\"\n            },\n            \"role\": {\n                \"name\": \"<string>\",\n                \"translatedName\": \"<string>\",\n                \"currentUserRole\": \"<boolean>\"\n            },\n            \"group\": {\n                \"name\": \"<string>\"\n            }\n        },\n        {\n            \"type\": \"<string>\",\n            \"project\": {\n                \"id\": \"<string>\",\n                \"email\": \"<string>\",\n                \"favourite\": \"<boolean>\"\n            },\n            \"role\": {\n                \"name\": \"<string>\",\n                \"translatedName\": \"<string>\",\n                \"currentUserRole\": \"<boolean>\"\n            },\n            \"group\": {\n                \"name\": \"<string>\"\n            }\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/filter?expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"filter"
							],
							"query": [
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`."
								}
							]
						},
						"description": "Creates a filter. The filter is shared according to the [default share scope](#api-rest-api-3-filter-post). The filter is not selected as a favorite.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jql\": \"type = Bug and resolution is empty\",\n    \"name\": \"All Open Bugs\",\n    \"description\": \"Lists all open bugs\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/filter/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"All Open Bugs\\\",\\\"description\\\":\\\"Lists all open bugs\\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"jql\\\":\\\"type = Bug and resolution is empty\\\",\\\"viewUrl\\\":\\\"https://your-domain.atlassian.net/issues/?filter=10000\\\",\\\"searchUrl\\\":\\\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\\\",\\\"favourite\\\":true,\\\"favouritedCount\\\":0,\\\"sharePermissions\\\":[],\\\"subscriptions\\\":{\\\"size\\\":0,\\\"items\\\":[],\\\"max-results\\\":0,\\\"start-index\\\":0,\\\"end-index\\\":0}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jql\": \"type = Bug and resolution is empty\",\n    \"name\": \"All Open Bugs\",\n    \"description\": \"Lists all open bugs\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request object is invalid. For example, the `name` is not unique or the project ID is not specified for a project role share permission.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"jql\": \"type = Bug and resolution is empty\",\n    \"name\": \"All Open Bugs\",\n    \"description\": \"Lists all open bugs\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Favorite Filters",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/filter/favourite?expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"filter",
								"favourite"
							],
							"query": [
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`."
								}
							]
						},
						"description": "Returns the visible favorite filters of the user.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** A favorite filter is only visible to the user where the filter is:\n\n *  owned by the user.\n *  shared with a group that the user is a member of.\n *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.\n *  shared with a public project.\n *  shared with the public.\n\nFor example, if the user favorites a public filter that is subsequently made private that filter is not returned by this operation."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter/favourite?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter",
										"favourite"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/filter/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"All Open Bugs\\\",\\\"description\\\":\\\"Lists all open bugs\\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"jql\\\":\\\"type = Bug and resolution is empty\\\",\\\"viewUrl\\\":\\\"https://your-domain.atlassian.net/issues/?filter=10000\\\",\\\"searchUrl\\\":\\\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\\\",\\\"favourite\\\":true,\\\"favouritedCount\\\":0,\\\"sharePermissions\\\":[],\\\"subscriptions\\\":{\\\"size\\\":0,\\\"items\\\":[],\\\"max-results\\\":0,\\\"start-index\\\":0,\\\"end-index\\\":0}},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/filter/10010\\\",\\\"id\\\":\\\"10010\\\",\\\"name\\\":\\\"My issues\\\",\\\"description\\\":\\\"Issues assigned to me\\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"jql\\\":\\\"assignee = currentUser() and resolution is empty\\\",\\\"viewUrl\\\":\\\"https://your-domain.atlassian.net/issues/?filter=10010\\\",\\\"searchUrl\\\":\\\"https://your-domain.atlassian.net/rest/api/3/search?jql=assignee+in+%28currentUser%28%29%29+and+resolution+is+empty\\\",\\\"favourite\\\":true,\\\"favouritedCount\\\":0,\\\"sharePermissions\\\":[{\\\"id\\\":10000,\\\"type\\\":\\\"global\\\"},{\\\"id\\\":10010,\\\"type\\\":\\\"project\\\",\\\"project\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"name\\\":\\\"Example\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}}}],\\\"subscriptions\\\":{\\\"size\\\":0,\\\"items\\\":[],\\\"max-results\\\":0,\\\"start-index\\\":0,\\\"end-index\\\":0}}]\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter/favourite?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter",
										"favourite"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get My Filters",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/filter/my?expand=<string>&includeFavourites=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"filter",
								"my"
							],
							"query": [
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`."
								},
								{
									"key": "includeFavourites",
									"value": "false",
									"description": "Include the user's favorite filters in the response."
								}
							]
						},
						"description": "Returns the filters owned by the user. If `includeFavourites` is `true`, the user's visible favorite filters are also returned.\n\n**[Permissions](#permissions) required:** Permission to access Jira, however, a favorite filters is only visible to the user where the filter is:\n\n *  owned by the user.\n *  shared with a group that the user is a member of.\n *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.\n *  shared with a public project.\n *  shared with the public.\n\nFor example, if the user favorites a public filter that is subsequently made private that filter is not returned by this operation."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter/my?expand=<string>&includeFavourites=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter",
										"my"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "includeFavourites",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/filter/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"All Open Bugs\\\",\\\"description\\\":\\\"Lists all open bugs\\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"jql\\\":\\\"type = Bug and resolution is empty\\\",\\\"viewUrl\\\":\\\"https://your-domain.atlassian.net/issues/?filter=10000\\\",\\\"searchUrl\\\":\\\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\\\",\\\"favourite\\\":true,\\\"favouritedCount\\\":0,\\\"sharePermissions\\\":[],\\\"subscriptions\\\":{\\\"size\\\":0,\\\"items\\\":[],\\\"max-results\\\":0,\\\"start-index\\\":0,\\\"end-index\\\":0}},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/filter/10010\\\",\\\"id\\\":\\\"10010\\\",\\\"name\\\":\\\"My issues\\\",\\\"description\\\":\\\"Issues assigned to me\\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"jql\\\":\\\"assignee = currentUser() and resolution is empty\\\",\\\"viewUrl\\\":\\\"https://your-domain.atlassian.net/issues/?filter=10010\\\",\\\"searchUrl\\\":\\\"https://your-domain.atlassian.net/rest/api/3/search?jql=assignee+in+%28currentUser%28%29%29+and+resolution+is+empty\\\",\\\"favourite\\\":true,\\\"favouritedCount\\\":0,\\\"sharePermissions\\\":[{\\\"id\\\":10000,\\\"type\\\":\\\"global\\\"},{\\\"id\\\":10010,\\\"type\\\":\\\"project\\\",\\\"project\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"name\\\":\\\"Example\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}}}],\\\"subscriptions\\\":{\\\"size\\\":0,\\\"items\\\":[],\\\"max-results\\\":0,\\\"start-index\\\":0,\\\"end-index\\\":0}}]\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter/my?expand=<string>&includeFavourites=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter",
										"my"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "includeFavourites",
											"value": "false"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Search For Filters",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/filter/search?filterName=<string>&accountId=<string>&owner=<string>&groupname=<string>&projectId=<long>&id=<long>&orderBy=name&startAt=0&maxResults=50&expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"filter",
								"search"
							],
							"query": [
								{
									"key": "filterName",
									"value": "<string>",
									"description": "String used to perform a case-insensitive partial match with `name`."
								},
								{
									"key": "accountId",
									"value": "<string>",
									"description": "User account ID used to return filters with the matching `owner.accountId`. This parameter cannot be used with `owner`."
								},
								{
									"key": "owner",
									"value": "<string>",
									"description": "This parameter is deprecated because of privacy changes. Use `accountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. User name used to return filters with the matching `owner.name`. This parameter cannot be used with `accountId`."
								},
								{
									"key": "groupname",
									"value": "<string>",
									"description": "Group name used to returns filters that are shared with a group that matches `sharePermissions.group.groupname`."
								},
								{
									"key": "projectId",
									"value": "<long>",
									"description": "Project ID used to returns filters that are shared with a project that matches `sharePermissions.project.id`."
								},
								{
									"key": "id",
									"value": "<long>",
									"description": "The list of filter IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`."
								},
								{
									"key": "orderBy",
									"value": "name",
									"description": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by filter description. Note that this sorting works independently of whether the expand to display the description field is in use.\n *  `favourite_count` Sorts by the count of how many users have this filter as a favorite.\n *  `is_favourite` Sorts by whether the filter is marked as a favorite.\n *  `id` Sorts by filter ID.\n *  `name` Sorts by filter name.\n *  `owner` Sorts by the ID of the filter owner."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `description` Returns the description of the filter.\n *  `favourite` Returns an indicator of whether the user has set the filter as a favorite.\n *  `favouritedCount` Returns a count of how many users have set this filter as a favorite.\n *  `jql` Returns the JQL query that the filter uses.\n *  `owner` Returns the owner of the filter.\n *  `searchUrl` Returns a URL to perform the filter's JQL query.\n *  `sharePermissions` Returns the share permissions defined for the filter.\n *  `subscriptions` Returns the users that are subscribed to the filter.\n *  `viewUrl` Returns a URL to view the filter."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of filters. Use this operation to get:\n\n *  specific filters, by defining `id` only.\n *  filters that match all of the specified attributes. For example, all filters for a user with a particular word in their name. When multiple attributes are specified only filters matching all attributes are returned.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None, however, only the following filters that match the query parameters are returned:\n\n *  filters owned by the user.\n *  filters shared with a group that the user is a member of.\n *  filters shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.\n *  filters shared with a public project.\n *  filters shared with the public."
					},
					"response": [
						{
							"name": "Returned if:\n\n *  `owner` and `accountId` are provided.\n *  `expand` includes an invalid value.\n *  `orderBy` is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter/search?filterName=<string>&accountId=<string>&owner=<string>&groupname=<string>&projectId=<long>&id=<long>&orderBy=name&startAt=0&maxResults=50&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter",
										"search"
									],
									"query": [
										{
											"key": "filterName",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "owner",
											"value": "<string>"
										},
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "projectId",
											"value": "<long>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter/search?filterName=<string>&accountId=<string>&owner=<string>&groupname=<string>&projectId=<long>&id=<long>&orderBy=name&startAt=0&maxResults=50&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter",
										"search"
									],
									"query": [
										{
											"key": "filterName",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "owner",
											"value": "<string>"
										},
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "projectId",
											"value": "<long>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/filter/search?filterName=<string>&accountId=<string>&owner=<string>&groupname=<string>&projectId=<long>&id=<long>&orderBy=name&startAt=0&maxResults=50&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"filter",
										"search"
									],
									"query": [
										{
											"key": "filterName",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "owner",
											"value": "<string>"
										},
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "projectId",
											"value": "<long>"
										},
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "orderBy",
											"value": "name"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/filter/search?accountId=&maxResults=50&filterName=&orderBy=name&startAt=0\\\",\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":2,\\\"isLast\\\":true,\\\"values\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/filter/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"All Open Bugs\\\",\\\"description\\\":\\\"Lists all open bugs\\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"jql\\\":\\\"type = Bug and resolution is empty\\\",\\\"viewUrl\\\":\\\"https://your-domain.atlassian.net/issues/?filter=10000\\\",\\\"searchUrl\\\":\\\"https://your-domain.atlassian.net/rest/api/3/search?jql=type%20%3D%20Bug%20and%20resolutino%20is%20empty\\\",\\\"favourite\\\":true,\\\"favouritedCount\\\":0,\\\"sharePermissions\\\":[],\\\"subscriptions\\\":[]},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/filter/10010\\\",\\\"id\\\":\\\"10010\\\",\\\"name\\\":\\\"My issues\\\",\\\"description\\\":\\\"Issues assigned to me\\\",\\\"owner\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"jql\\\":\\\"assignee = currentUser() and resolution is empty\\\",\\\"viewUrl\\\":\\\"https://your-domain.atlassian.net/issues/?filter=10010\\\",\\\"searchUrl\\\":\\\"https://your-domain.atlassian.net/rest/api/3/search?jql=assignee+in+%28currentUser%28%29%29+and+resolution+is+empty\\\",\\\"favourite\\\":true,\\\"favouritedCount\\\":0,\\\"sharePermissions\\\":[{\\\"id\\\":10000,\\\"type\\\":\\\"global\\\"},{\\\"id\\\":10010,\\\"type\\\":\\\"project\\\",\\\"project\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"name\\\":\\\"Example\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}}}],\\\"subscriptions\\\":[{\\\"id\\\":1,\\\"user\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"groups\\\":{\\\"size\\\":3,\\\"items\\\":[]},\\\"applicationRoles\\\":{\\\"size\\\":1,\\\"items\\\":[]}}}]}]}\""
						}
					]
				}
			]
		},
		{
			"name": "Group",
			"item": [
				{
					"name": "User",
					"item": [
						{
							"name": "Add User To Group",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"accountId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group/user?groupname=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group",
										"user"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>",
											"description": "(Required) The name of the group (case sensitive)."
										}
									]
								},
								"description": "Adds a user to a group.\n\n**[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL))."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accountId\": \"5b10ac8d82e05b22cc7d4ef5\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/group/user?groupname=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"group",
												"user"
											],
											"query": [
												{
													"key": "groupname",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"qui sit et\",\n \"self\": \"http://WWIMCkQirAtqsSfPSns.hrm4T.Pu.Q8LjBYp-T2uMrE9qKvgfD0,FaiL6pYw.UOMbHP,NeMbZf\",\n \"users\": {\n  \"size\": -41082842,\n  \"items\": [\n   {\n    \"self\": \"aliqua laboris\",\n    \"name\": \"dolor veniam nostrud\",\n    \"key\": \"elit aliqua deserunt Lorem\",\n    \"accountId\": \"dese\",\n    \"emailAddress\": \"magna\",\n    \"avatarUrls\": {\n     \"16x16\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"24x24\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"32x32\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"48x48\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"displayName\": \"dolor mollit Duis\",\n    \"active\": false,\n    \"timeZone\": \"amet commodo irure officia\",\n    \"accountType\": \"ad eiusmod\"\n   },\n   {\n    \"self\": \"ut in Excepteur\",\n    \"name\": \"Excepteur veniam occaecat\",\n    \"key\": \"a\",\n    \"accountId\": \"\",\n    \"emailAddress\": \"Lorem mollit veniam\",\n    \"avatarUrls\": {\n     \"16x16\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"24x24\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"32x32\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"48x48\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"displayName\": \"anim\",\n    \"active\": true,\n    \"timeZone\": \"ullamco Lorem commodo dolor\",\n    \"accountType\": \"in\"\n   }\n  ],\n  \"max-results\": 51179685,\n  \"start-index\": -16283289,\n  \"end-index\": 87926955\n },\n \"expand\": \"aliquip ipsum in veniam dolo\"\n}"
								},
								{
									"name": "Returned if the calling user does not have the necessary permission.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accountId\": \"5b10ac8d82e05b22cc7d4ef5\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/group/user?groupname=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"group",
												"user"
											],
											"query": [
												{
													"key": "groupname",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the group or user are not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accountId\": \"5b10ac8d82e05b22cc7d4ef5\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/group/user?groupname=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"group",
												"user"
											],
											"query": [
												{
													"key": "groupname",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  `groupname` is not provided.\n *  `accountId` is missing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accountId\": \"5b10ac8d82e05b22cc7d4ef5\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/group/user?groupname=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"group",
												"user"
											],
											"query": [
												{
													"key": "groupname",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing from the request.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accountId\": \"5b10ac8d82e05b22cc7d4ef5\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/group/user?groupname=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"group",
												"user"
											],
											"query": [
												{
													"key": "groupname",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Remove User From Group",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group/user?groupname=<string>&username=<string>&accountId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group",
										"user"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>",
											"description": "(Required) The name of the group."
										},
										{
											"key": "username",
											"value": "<string>",
											"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
										},
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*."
										}
									]
								},
								"description": "Removes a user from a group.\n\n**[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL))."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing from the request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/group/user?groupname=<string>&username=<string>&accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"group",
												"user"
											],
											"query": [
												{
													"key": "groupname",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/group/user?groupname=<string>&username=<string>&accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"group",
												"user"
											],
											"query": [
												{
													"key": "groupname",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  `groupName` is missing.\n *  `accountId` is missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/group/user?groupname=<string>&username=<string>&accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"group",
												"user"
											],
											"query": [
												{
													"key": "groupname",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/group/user?groupname=<string>&username=<string>&accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"group",
												"user"
											],
											"query": [
												{
													"key": "groupname",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the group or user are not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/group/user?groupname=<string>&username=<string>&accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"group",
												"user"
											],
											"query": [
												{
													"key": "groupname",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Group",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/group?groupname=<string>&expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"group"
							],
							"query": [
								{
									"key": "groupname",
									"value": "<string>",
									"description": "(Required) The name of the group."
								},
								{
									"key": "expand",
									"value": "<string>",
									"description": "List of fields to expand."
								}
							]
						},
						"description": "This operation is deprecated, use [`group/member`](#api-rest-api-3-group-member-get).\n\nReturns all users in a group.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the calling user does not have the Administer Jira global permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group?groupname=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group?groupname=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the group is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group?groupname=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group?groupname=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"qui sit et\",\n \"self\": \"http://WWIMCkQirAtqsSfPSns.hrm4T.Pu.Q8LjBYp-T2uMrE9qKvgfD0,FaiL6pYw.UOMbHP,NeMbZf\",\n \"users\": {\n  \"size\": -41082842,\n  \"items\": [\n   {\n    \"self\": \"aliqua laboris\",\n    \"name\": \"dolor veniam nostrud\",\n    \"key\": \"elit aliqua deserunt Lorem\",\n    \"accountId\": \"dese\",\n    \"emailAddress\": \"magna\",\n    \"avatarUrls\": {\n     \"16x16\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"24x24\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"32x32\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"48x48\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"displayName\": \"dolor mollit Duis\",\n    \"active\": false,\n    \"timeZone\": \"amet commodo irure officia\",\n    \"accountType\": \"ad eiusmod\"\n   },\n   {\n    \"self\": \"ut in Excepteur\",\n    \"name\": \"Excepteur veniam occaecat\",\n    \"key\": \"a\",\n    \"accountId\": \"\",\n    \"emailAddress\": \"Lorem mollit veniam\",\n    \"avatarUrls\": {\n     \"16x16\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"24x24\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"32x32\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     \"48x48\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    },\n    \"displayName\": \"anim\",\n    \"active\": true,\n    \"timeZone\": \"ullamco Lorem commodo dolor\",\n    \"accountType\": \"in\"\n   }\n  ],\n  \"max-results\": 51179685,\n  \"start-index\": -16283289,\n  \"end-index\": 87926955\n },\n \"expand\": \"aliquip ipsum in veniam dolo\"\n}"
						},
						{
							"name": "Returned if the group name is not specified.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group?groupname=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Group",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/group",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"group"
							]
						},
						"description": "Creates a group.\n\n**[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL))."
					},
					"response": [
						{
							"name": "Returned if group name is not specified or the group name is in use.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"power-users\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"power-users\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"power-users\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"power-users\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"name\\\":\\\"power-users\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/group?groupname=power-users\\\",\\\"users\\\":{\\\"size\\\":1,\\\"items\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false}],\\\"max-results\\\":50,\\\"start-index\\\":0,\\\"end-index\\\":0},\\\"expand\\\":\\\"users\\\"}\""
						}
					]
				},
				{
					"name": "Remove Group",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/group?groupname=<string>&swapGroup=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"group"
							],
							"query": [
								{
									"key": "groupname",
									"value": "<string>",
									"description": "(Required) The name of the group."
								},
								{
									"key": "swapGroup",
									"value": "<string>",
									"description": "The group to transfer restrictions to. Only comments and worklogs are transferred. If restrictions are not transferred, comments and worklogs are inaccessible after the deletion."
								}
							]
						},
						"description": "Deletes a group.\n\n**[Permissions](#permissions) required:** Site administration (that is, member of the *site-admin* strategic [group](https://confluence.atlassian.com/x/24xjL))."
					},
					"response": [
						{
							"name": "Returned if the group name is not specified.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group?groupname=<string>&swapGroup=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "swapGroup",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group?groupname=<string>&swapGroup=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "swapGroup",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group?groupname=<string>&swapGroup=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "swapGroup",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing from the request.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group?groupname=<string>&swapGroup=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "swapGroup",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the group is not found.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group?groupname=<string>&swapGroup=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "swapGroup",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Bulk Get Groups",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/group/bulk?startAt=0&maxResults=50&groupId=<string>&groupName=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"group",
								"bulk"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "groupId",
									"value": "<string>",
									"description": "The ID of a group. To specify multiple IDs, pass multiple `groupId` parameters. For example, `groupId=5b10a2844c20165700ede21g&groupId=5b10ac8d82e05b22cc7d4ef5`."
								},
								{
									"key": "groupName",
									"value": "<string>",
									"description": "The name of a group. To specify multiple names, pass multiple `groupName` parameters. For example, `groupName=administrators&groupName=jira-software-users`."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of groups.\n\n**[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group/bulk?startAt=0&maxResults=50&groupId=3571b9a7-348f-414a-9087-8e1ea03a7df8&groupName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group",
										"bulk"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "groupId",
											"value": "3571b9a7-348f-414a-9087-8e1ea03a7df8"
										},
										{
											"key": "groupName",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":10,\\\"startAt\\\":0,\\\"total\\\":2,\\\"isLast\\\":true,\\\"values\\\":[{\\\"name\\\":\\\"jdog-developers\\\",\\\"groupId\\\":\\\"276f955c-63d7-42c8-9520-92d01dca0625\\\"},{\\\"name\\\":\\\"juvenal-bot\\\",\\\"groupId\\\":\\\"6e87dc72-4f1f-421f-9382-2fee8b652487\\\"}]}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group/bulk?startAt=0&maxResults=50&groupId=3571b9a7-348f-414a-9087-8e1ea03a7df8&groupName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group",
										"bulk"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "groupId",
											"value": "3571b9a7-348f-414a-9087-8e1ea03a7df8"
										},
										{
											"key": "groupName",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group/bulk?startAt=0&maxResults=50&groupId=3571b9a7-348f-414a-9087-8e1ea03a7df8&groupName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group",
										"bulk"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "groupId",
											"value": "3571b9a7-348f-414a-9087-8e1ea03a7df8"
										},
										{
											"key": "groupName",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group/bulk?startAt=0&maxResults=50&groupId=3571b9a7-348f-414a-9087-8e1ea03a7df8&groupName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group",
										"bulk"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "groupId",
											"value": "3571b9a7-348f-414a-9087-8e1ea03a7df8"
										},
										{
											"key": "groupName",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Browse users and groups permission is required to view groups.\\\"],\\\"errors\\\":{}}\""
						}
					]
				},
				{
					"name": "Get Users From Group",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/group/member?groupname=<string>&includeInactiveUsers=false&startAt=0&maxResults=50",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"group",
								"member"
							],
							"query": [
								{
									"key": "groupname",
									"value": "<string>",
									"description": "(Required) The name of the group."
								},
								{
									"key": "includeInactiveUsers",
									"value": "false",
									"description": "Include inactive users."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of all users in a group.\n\nNote that users are ordered by username, however the username is not returned in the results due to privacy reasons.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the group is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group/member?groupname=<string>&includeInactiveUsers=false&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group",
										"member"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "includeInactiveUsers",
											"value": "false"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the group name is not specified.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group/member?groupname=<string>&includeInactiveUsers=false&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group",
										"member"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "includeInactiveUsers",
											"value": "false"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group/member?groupname=<string>&includeInactiveUsers=false&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group",
										"member"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "includeInactiveUsers",
											"value": "false"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/group/member?groupname=jira-administrators&includeInactiveUsers=false&startAt=2&maxResults=2\\\",\\\"nextPage\\\":\\\"https://your-domain.atlassian.net/rest/api/3/group/member?groupname=jira-administrators&includeInactiveUsers=false&startAt=4&maxResults=2\\\",\\\"maxResults\\\":2,\\\"startAt\\\":3,\\\"total\\\":5,\\\"isLast\\\":false,\\\"values\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{},\\\"displayName\\\":\\\"Mia\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"accountType\\\":\\\"atlassian\\\"},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a0effa615349cb016cd8\\\",\\\"name\\\":\\\"\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a0effa615349cb016cd8\\\",\\\"emailAddress\\\":\\\"will@example.com\\\",\\\"avatarUrls\\\":{},\\\"displayName\\\":\\\"Will\\\",\\\"active\\\":false,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"accountType\\\":\\\"atlassian\\\"}]}\""
						},
						{
							"name": "Returned if the calling user does not have the Administer Jira global permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group/member?groupname=<string>&includeInactiveUsers=false&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group",
										"member"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "includeInactiveUsers",
											"value": "false"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/group/member?groupname=<string>&includeInactiveUsers=false&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"group",
										"member"
									],
									"query": [
										{
											"key": "groupname",
											"value": "<string>"
										},
										{
											"key": "includeInactiveUsers",
											"value": "false"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Issue",
			"item": [
				{
					"name": "Properties",
					"item": [
						{
							"name": "Property Key}",
							"item": [
								{
									"name": "Bulk Set Issue Property",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": {},\n    \"filter\": {\n        \"entityIds\": [\n            \"<long>\"\n        ],\n        \"currentValue\": {},\n        \"hasProperty\": \"<boolean>\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/properties/:propertyKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												"properties",
												":propertyKey"
											],
											"variable": [
												{
													"key": "propertyKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The key of the property. The maximum length is 255 characters."
												}
											]
										},
										"description": "Sets a property value on multiple issues. The issues to be updated can be specified by a filter.\n\nThe filter identifies issues eligible for update using these criteria:\n\n *  `entityIds` Only issues from this list are eligible.\n *  `currentValue` Only issues with the property set to this value are eligible.\n *  `hasProperty`:\n    \n     *  If *true*, only issues with the property are eligible.\n     *  If *false*, only issues without the property are eligible.\n\nIf more than one criteria is specified, they are joined with the logical *AND*: only issues that satisfy all criteria are eligible.\n\nIf an invalid combination of criteria is provided, an error is returned. For example, specifying a `currentValue` and `hasProperty` as *false* would not match any issues (because without the property the property cannot have a value).\n\nThe filter is optional. Without the filter all the issues visible to the user and where the user has the EDIT\\_ISSUES permission for the issue are considered eligible.\n\nThis operation is:\n\n *  transactional, either all eligible issues are updated or, when errors occur, none are updated.\n *  [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for each project containing issues.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  *Edit issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for each issue."
									},
									"response": [
										{
											"name": "Returned if the request is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"owner\": \"admin\",\n    \"weight\": 100\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"owner\": \"admin\",\n    \"weight\": 100\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "See Other",
											"code": 303,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"owner\": \"admin\",\n    \"weight\": 100\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
										}
									]
								},
								{
									"name": "Bulk Delete Issue Property",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entityIds\": [\n        \"<long>\"\n    ],\n    \"currentValue\": {}\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/properties/:propertyKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												"properties",
												":propertyKey"
											],
											"variable": [
												{
													"key": "propertyKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The key of the property."
												}
											]
										},
										"description": "Deletes a property value from multiple issues. The issues to be updated can be specified by filter criteria.\n\nThe criteria the filter used to identify eligible issues are:\n\n *  `entityIds` Only issues from this list are eligible.\n *  `currentValue` Only issues with the property set to this value are eligible.\n\nIf both criteria is specified, they are joined with the logical *AND*: only issues that satisfy both criteria are considered eligible.\n\nIf no filter criteria are specified, all the issues visible to the user and where the user has the EDIT\\_ISSUES permission for the issue are considered eligible.\n\nThis operation is:\n\n *  transactional, either the property is deleted from all eligible issues or, when errors occur, no properties are deleted.\n *  [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [ project permission](https://confluence.atlassian.com/x/yodKLg) for each project containing issues.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  *Edit issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for each issue."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"entityIds\": [\n        10100,\n        100010\n    ],\n    \"currentValue\": \"deprecated value\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
										},
										{
											"name": "Returned if the request is invalid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"entityIds\": [\n        10100,\n        100010\n    ],\n    \"currentValue\": \"deprecated value\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"entityIds\": [\n        10100,\n        100010\n    ],\n    \"currentValue\": \"deprecated value\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "See Other",
											"code": 303,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Bulk Set Issues Properties",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"entitiesIds\": [\n        \"<long>\"\n    ],\n    \"properties\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										"properties"
									]
								},
								"description": "Sets the values of entity properties on issues. It can set up to 10 entity properties on up to 10,000 issues.\n\nThe value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON. The maximum length of single issue property value is 32768 characters. This operation can be accessed anonymously.\n\nThis operation is:\n\n *  transactional, either all properties are updated in all eligible issues or, when errors occur, no properties are updated.\n *  [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
							},
							"response": [
								{
									"name": "Return if the request is invalid or the user does not have the necessary permission.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entitiesIds\": [\n        \"<long>\"\n    ],\n    \"properties\": \"<object>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/properties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												"properties"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
								},
								{
									"name": "Returned if the operation is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entitiesIds\": [\n        \"<long>\"\n    ],\n    \"properties\": \"<object>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/properties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												"properties"
											]
										}
									},
									"status": "See Other",
									"code": 303,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"entitiesIds\": [\n        \"<long>\"\n    ],\n    \"properties\": \"<object>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/properties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												"properties"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
								}
							]
						}
					]
				},
				{
					"name": "Comment",
					"item": [
						{
							"name": "Id}",
							"item": [
								{
									"name": "Get Comment",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"comment",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>",
													"description": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts `renderedBody`, which returns the comment body rendered in HTML."
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID or key of the issue."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the comment."
												}
											]
										},
										"description": "Returns a comment.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the comment.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  If the comment has visibility restrictions, the user belongs to the group or has the role visibility is restricted to."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"comment",
														":id"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"body\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\\\"}]}]},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"created\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"updated\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"role\\\",\\\"value\\\":\\\"Administrators\\\"}}\""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"comment",
														":id"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the issue or comment is not found or the user does not have permission to view the issue or comment.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"comment",
														":id"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update Comment",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"body\": {},\n    \"visibility\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n    },\n    \"properties\": [\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"comment",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>",
													"description": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts `renderedBody`, which returns the comment body rendered in HTML."
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID or key of the issue."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the comment."
												}
											]
										},
										"description": "Updates a comment.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue containing the comment is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  *Edit all comments*[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any comment or *Edit own comments* to update comment created by the user.\n *  If the comment has visibility restrictions, the user belongs to the group or has the role visibility is restricted to."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"visibility\": {\n        \"type\": \"role\",\n        \"value\": \"Administrators\"\n    },\n    \"body\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"comment",
														":id"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"visibility\": {\n        \"type\": \"role\",\n        \"value\": \"Administrators\"\n    },\n    \"body\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"comment",
														":id"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"body\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\\\"}]}]},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"created\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"updated\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"role\\\",\\\"value\\\":\\\"Administrators\\\"}}\""
										},
										{
											"name": "Returned if the user does not have permission to edit the comment or the request is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"visibility\": {\n        \"type\": \"role\",\n        \"value\": \"Administrators\"\n    },\n    \"body\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"comment",
														":id"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the issue or comment is not found or the user does not have permission to view the issue or comment.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"visibility\": {\n        \"type\": \"role\",\n        \"value\": \"Administrators\"\n    },\n    \"body\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"comment",
														":id"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Comment",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"comment",
												":id"
											],
											"variable": [
												{
													"key": "issueIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID or key of the issue."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the comment."
												}
											]
										},
										"description": "Deletes a comment.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue containing the comment is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  *Delete all comments*[ project permission](https://confluence.atlassian.com/x/yodKLg) to delete any comment or *Delete own comments* to delete comment created by the user,\n *  If the comment has visibility restrictions, the user belongs to the group or has the role visibility is restricted to."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"comment",
														":id"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have permission to delete the comment.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"comment",
														":id"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if an anonymous call is made to the operation.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"comment",
														":id"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"comment",
														":id"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the issue or comment is not found or the user does not have permission to view the issue or comment.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"comment",
														":id"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Comments",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment?startAt=0&maxResults=50&orderBy=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"comment"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "50",
											"description": "The maximum number of items to return per page."
										},
										{
											"key": "orderBy",
											"value": "<string>",
											"description": "[Order](#ordering) the results by a field. Accepts *created* to sort comments by their created date."
										},
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts `renderedBody`, which returns the comment body rendered in HTML."
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										}
									]
								},
								"description": "Returns all comments for an issue.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** Comments are included in the response where the user has:\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the comment.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  If the comment has visibility restrictions, belongs to the group or has the role visibility is role visibility is restricted to."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment?startAt=0&maxResults=50&orderBy=<string>&expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"comment"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment?startAt=0&maxResults=50&orderBy=<string>&expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"comment"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"startAt\\\":0,\\\"maxResults\\\":1,\\\"total\\\":1,\\\"comments\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"body\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\\\"}]}]},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"created\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"updated\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"role\\\",\\\"value\\\":\\\"Administrators\\\"}}]}\""
								},
								{
									"name": "Returned if the issue is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment?startAt=0&maxResults=50&orderBy=<string>&expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"comment"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if `orderBy` is set to a value other than *created*.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment?startAt=0&maxResults=50&orderBy=<string>&expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"comment"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add Comment",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": {},\n    \"visibility\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n    },\n    \"properties\": [\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"comment"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts `renderedBody`, which returns the comment body rendered in HTML."
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										}
									]
								},
								"description": "Adds a comment to an issue.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* and *Add comments* [ project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue containing the comment is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
							},
							"response": [
								{
									"name": "Returned if the issue is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"visibility\": {\n        \"type\": \"role\",\n        \"value\": \"Administrators\"\n    },\n    \"body\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"comment"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"visibility\": {\n        \"type\": \"role\",\n        \"value\": \"Administrators\"\n    },\n    \"body\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"comment"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"body\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\\\"}]}]},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"created\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"updated\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"role\\\",\\\"value\\\":\\\"Administrators\\\"}}\""
								},
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"visibility\": {\n        \"type\": \"role\",\n        \"value\": \"Administrators\"\n    },\n    \"body\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"comment"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"visibility\": {\n        \"type\": \"role\",\n        \"value\": \"Administrators\"\n    },\n    \"body\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/comment?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"comment"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Properties",
					"item": [
						{
							"name": "Property Key}",
							"item": [
								{
									"name": "Get Issue Property",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"properties",
												":propertyKey"
											],
											"variable": [
												{
													"key": "issueIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The key or ID of the issue."
												},
												{
													"key": "propertyKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The key of the property."
												}
											]
										},
										"description": "Returns the key and value of an issue's property.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"key\\\":\\\"issue.support\\\",\\\"value\\\":{\\\"system.conversation.id\\\":\\\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\\\",\\\"system.support.time\\\":\\\"1m\\\"}}\""
										},
										{
											"name": "Returned if the issue or property is not found or the user does not have permission to see the issue.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Issue Property",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"properties",
												":propertyKey"
											],
											"variable": [
												{
													"key": "issueIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID or key of the issue."
												},
												{
													"key": "propertyKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The key of the issue property. The maximum length is 255 characters."
												}
											]
										},
										"description": "Sets the value of an issue's property. Use this resource to store custom data against an issue.\n\nThe value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
									},
									"response": [
										{
											"name": "Returned if the request is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the issue is not found or the user does not have permission to view the issue.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the issue property is updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Returned if the user does not have permission to edit the issue.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the issue property is created.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								},
								{
									"name": "Delete Issue Property",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"properties",
												":propertyKey"
											],
											"variable": [
												{
													"key": "issueIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The key or ID of the issue."
												},
												{
													"key": "propertyKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The key of the property."
												}
											]
										},
										"description": "Deletes an issue's property.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the issue or property is not found, or the user does not have permission to edit the issue.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Issue Property Keys",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"properties"
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The key or ID of the issue."
										}
									]
								},
								"description": "Returns the URLs and keys of an issue's properties.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** Property details are only returned where the user has:\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"properties"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"keys\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\\\",\\\"key\\\":\\\"issue.support\\\"}]}\""
								},
								{
									"name": "Returned if the issue is not found or the user does not have permissions to view the issue.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/properties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"properties"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Transitions",
					"item": [
						{
							"name": "Get Transitions",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/transitions?expand=<string>&transitionId=<string>&skipRemoteOnlyCondition=false&includeUnavailableTransitions=false&sortByOpsBarAndStatus=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"transitions"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use [expand](#expansion) to include additional information about transitions in the response. This parameter accepts `transitions.fields`, which returns information about the fields in the transition screen for each transition. Fields hidden from the screen are not returned. Use this information to populate the `fields` and `update` fields in [Transition issue](#api-rest-api-3-issue-issueIdOrKey-transitions-post)."
										},
										{
											"key": "transitionId",
											"value": "<string>",
											"description": "The ID of the transition."
										},
										{
											"key": "skipRemoteOnlyCondition",
											"value": "false",
											"description": "Whether transitions with the condition *Hide From User Condition* are included in the response."
										},
										{
											"key": "includeUnavailableTransitions",
											"value": "false",
											"description": "Whether details of transitions that fail a condition are included in the response"
										},
										{
											"key": "sortByOpsBarAndStatus",
											"value": "false",
											"description": "Whether the transitions are sorted by ops-bar sequence value first then category order (Todo, In Progress, Done) or only by ops-bar sequence value."
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										}
									]
								},
								"description": "Returns either all transitions or a transition that can be performed by the user on an issue, based on the issue's status.\n\nNote, if a request is made for a transition that does not exist or cannot be performed on the issue, given its status, the response will return any empty transitions list.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required: A list or transition is returned only when the user has:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n\nHowever, if the user does not have the *Transition issues* [ project permission](https://confluence.atlassian.com/x/yodKLg) the response will not list any transitions."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/transitions?expand=<string>&transitionId=<string>&skipRemoteOnlyCondition=false&includeUnavailableTransitions=false&sortByOpsBarAndStatus=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"transitions"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												},
												{
													"key": "transitionId",
													"value": "<string>"
												},
												{
													"key": "skipRemoteOnlyCondition",
													"value": "false"
												},
												{
													"key": "includeUnavailableTransitions",
													"value": "false"
												},
												{
													"key": "sortByOpsBarAndStatus",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/transitions?expand=<string>&transitionId=<string>&skipRemoteOnlyCondition=false&includeUnavailableTransitions=false&sortByOpsBarAndStatus=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"transitions"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												},
												{
													"key": "transitionId",
													"value": "<string>"
												},
												{
													"key": "skipRemoteOnlyCondition",
													"value": "false"
												},
												{
													"key": "includeUnavailableTransitions",
													"value": "false"
												},
												{
													"key": "sortByOpsBarAndStatus",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"transitions\\\":[{\\\"id\\\":\\\"2\\\",\\\"name\\\":\\\"Close Issue\\\",\\\"to\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/status/10000\\\",\\\"description\\\":\\\"The issue is currently being worked on.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/progress.gif\\\",\\\"name\\\":\\\"In Progress\\\",\\\"id\\\":\\\"10000\\\",\\\"statusCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/statuscategory/1\\\",\\\"id\\\":1,\\\"key\\\":\\\"in-flight\\\",\\\"colorName\\\":\\\"yellow\\\",\\\"name\\\":\\\"In Progress\\\"}},\\\"hasScreen\\\":false,\\\"isGlobal\\\":false,\\\"isInitial\\\":false,\\\"isAvailable\\\":true,\\\"isConditional\\\":false,\\\"fields\\\":{\\\"summary\\\":{\\\"required\\\":false,\\\"schema\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":\\\"option\\\",\\\"custom\\\":\\\"com.atlassian.jira.plugin.system.customfieldtypes:multiselect\\\",\\\"customId\\\":10001},\\\"name\\\":\\\"My Multi Select\\\",\\\"key\\\":\\\"field_key\\\",\\\"hasDefaultValue\\\":false,\\\"operations\\\":[\\\"set\\\",\\\"add\\\"],\\\"allowedValues\\\":[\\\"red\\\",\\\"blue\\\"],\\\"defaultValue\\\":\\\"red\\\"}}},{\\\"id\\\":\\\"711\\\",\\\"name\\\":\\\"QA Review\\\",\\\"to\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/status/5\\\",\\\"description\\\":\\\"The issue is closed.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/closed.gif\\\",\\\"name\\\":\\\"Closed\\\",\\\"id\\\":\\\"5\\\",\\\"statusCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/statuscategory/9\\\",\\\"id\\\":9,\\\"key\\\":\\\"completed\\\",\\\"colorName\\\":\\\"green\\\"}},\\\"hasScreen\\\":true,\\\"fields\\\":{\\\"summary\\\":{\\\"required\\\":false,\\\"schema\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":\\\"option\\\",\\\"custom\\\":\\\"com.atlassian.jira.plugin.system.customfieldtypes:multiselect\\\",\\\"customId\\\":10001},\\\"name\\\":\\\"My Multi Select\\\",\\\"key\\\":\\\"field_key\\\",\\\"hasDefaultValue\\\":false,\\\"operations\\\":[\\\"set\\\",\\\"add\\\"],\\\"allowedValues\\\":[\\\"red\\\",\\\"blue\\\"],\\\"defaultValue\\\":\\\"red\\\"},\\\"colour\\\":{\\\"required\\\":false,\\\"schema\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":\\\"option\\\",\\\"custom\\\":\\\"com.atlassian.jira.plugin.system.customfieldtypes:multiselect\\\",\\\"customId\\\":10001},\\\"name\\\":\\\"My Multi Select\\\",\\\"key\\\":\\\"field_key\\\",\\\"hasDefaultValue\\\":false,\\\"operations\\\":[\\\"set\\\",\\\"add\\\"],\\\"allowedValues\\\":[\\\"red\\\",\\\"blue\\\"],\\\"defaultValue\\\":\\\"red\\\"}}}]}\""
								},
								{
									"name": "Returned if the issue is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/transitions?expand=<string>&transitionId=<string>&skipRemoteOnlyCondition=false&includeUnavailableTransitions=false&sortByOpsBarAndStatus=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"transitions"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												},
												{
													"key": "transitionId",
													"value": "<string>"
												},
												{
													"key": "skipRemoteOnlyCondition",
													"value": "false"
												},
												{
													"key": "includeUnavailableTransitions",
													"value": "false"
												},
												{
													"key": "sortByOpsBarAndStatus",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Transition Issue",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"transition\": {\n        \"id\": \"<string>\",\n        \"looped\": \"<boolean>\"\n    },\n    \"fields\": \"<object>\",\n    \"update\": \"<object>\",\n    \"historyMetadata\": {\n        \"type\": \"<string>\",\n        \"description\": \"<string>\",\n        \"descriptionKey\": \"<string>\",\n        \"activityDescription\": \"<string>\",\n        \"activityDescriptionKey\": \"<string>\",\n        \"emailDescription\": \"<string>\",\n        \"emailDescriptionKey\": \"<string>\",\n        \"actor\": {\n            \"id\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"displayNameKey\": \"<string>\",\n            \"type\": \"<string>\",\n            \"avatarUrl\": \"<string>\",\n            \"url\": \"<string>\"\n        },\n        \"generator\": {\n            \"id\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"displayNameKey\": \"<string>\",\n            \"type\": \"<string>\",\n            \"avatarUrl\": \"<string>\",\n            \"url\": \"<string>\"\n        },\n        \"cause\": {\n            \"id\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"displayNameKey\": \"<string>\",\n            \"type\": \"<string>\",\n            \"avatarUrl\": \"<string>\",\n            \"url\": \"<string>\"\n        },\n        \"extraData\": \"<object>\"\n    },\n    \"properties\": [\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/transitions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"transitions"
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										}
									]
								},
								"description": "Performs an issue transition and, if the transition has a screen, updates the fields from the transition screen.\n\nsortByCategory To update the fields on the transition screen, specify the fields in the `fields` or `update` parameters in the request body. Get details about the fields using [ Get transitions](#api-rest-api-3-issue-issueIdOrKey-transitions-get) with the `transitions.fields` expand.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* and *Transition issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"historyMetadata\": {\n        \"actor\": {\n            \"avatarUrl\": \"http://mysystem/avatar/tony.jpg\",\n            \"displayName\": \"Tony\",\n            \"id\": \"tony\",\n            \"type\": \"mysystem-user\",\n            \"url\": \"http://mysystem/users/tony\"\n        },\n        \"extraData\": {\n            \"Iteration\": \"10a\",\n            \"Step\": \"4\"\n        },\n        \"description\": \"From the order testing process\",\n        \"generator\": {\n            \"id\": \"mysystem-1\",\n            \"type\": \"mysystem-application\"\n        },\n        \"cause\": {\n            \"id\": \"myevent\",\n            \"type\": \"mysystem-event\"\n        },\n        \"activityDescription\": \"Complete order processing\",\n        \"type\": \"myplugin:type\"\n    },\n    \"update\": {\n        \"comment\": [\n            {\n                \"add\": {\n                    \"body\": {\n                        \"type\": \"doc\",\n                        \"version\": 1,\n                        \"content\": [\n                            {\n                                \"type\": \"paragraph\",\n                                \"content\": [\n                                    {\n                                        \"text\": \"Bug has been fixed\",\n                                        \"type\": \"text\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                }\n            }\n        ]\n    },\n    \"fields\": {\n        \"assignee\": {\n            \"name\": \"bob\"\n        },\n        \"resolution\": {\n            \"name\": \"Fixed\"\n        }\n    },\n    \"transition\": {\n        \"id\": \"5\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/transitions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"transitions"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if:\n\n *  no transition is specified.\n *  the user does not have permission to transition the issue.\n *  a field that isn't included on the transition screen is defined in `fields` or `update`.\n *  a field is specified in both `fields` and `update",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"historyMetadata\": {\n        \"actor\": {\n            \"avatarUrl\": \"http://mysystem/avatar/tony.jpg\",\n            \"displayName\": \"Tony\",\n            \"id\": \"tony\",\n            \"type\": \"mysystem-user\",\n            \"url\": \"http://mysystem/users/tony\"\n        },\n        \"extraData\": {\n            \"Iteration\": \"10a\",\n            \"Step\": \"4\"\n        },\n        \"description\": \"From the order testing process\",\n        \"generator\": {\n            \"id\": \"mysystem-1\",\n            \"type\": \"mysystem-application\"\n        },\n        \"cause\": {\n            \"id\": \"myevent\",\n            \"type\": \"mysystem-event\"\n        },\n        \"activityDescription\": \"Complete order processing\",\n        \"type\": \"myplugin:type\"\n    },\n    \"update\": {\n        \"comment\": [\n            {\n                \"add\": {\n                    \"body\": {\n                        \"type\": \"doc\",\n                        \"version\": 1,\n                        \"content\": [\n                            {\n                                \"type\": \"paragraph\",\n                                \"content\": [\n                                    {\n                                        \"text\": \"Bug has been fixed\",\n                                        \"type\": \"text\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                }\n            }\n        ]\n    },\n    \"fields\": {\n        \"assignee\": {\n            \"name\": \"bob\"\n        },\n        \"resolution\": {\n            \"name\": \"Fixed\"\n        }\n    },\n    \"transition\": {\n        \"id\": \"5\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/transitions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"transitions"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"historyMetadata\": {\n        \"actor\": {\n            \"avatarUrl\": \"http://mysystem/avatar/tony.jpg\",\n            \"displayName\": \"Tony\",\n            \"id\": \"tony\",\n            \"type\": \"mysystem-user\",\n            \"url\": \"http://mysystem/users/tony\"\n        },\n        \"extraData\": {\n            \"Iteration\": \"10a\",\n            \"Step\": \"4\"\n        },\n        \"description\": \"From the order testing process\",\n        \"generator\": {\n            \"id\": \"mysystem-1\",\n            \"type\": \"mysystem-application\"\n        },\n        \"cause\": {\n            \"id\": \"myevent\",\n            \"type\": \"mysystem-event\"\n        },\n        \"activityDescription\": \"Complete order processing\",\n        \"type\": \"myplugin:type\"\n    },\n    \"update\": {\n        \"comment\": [\n            {\n                \"add\": {\n                    \"body\": {\n                        \"type\": \"doc\",\n                        \"version\": 1,\n                        \"content\": [\n                            {\n                                \"type\": \"paragraph\",\n                                \"content\": [\n                                    {\n                                        \"text\": \"Bug has been fixed\",\n                                        \"type\": \"text\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                }\n            }\n        ]\n    },\n    \"fields\": {\n        \"assignee\": {\n            \"name\": \"bob\"\n        },\n        \"resolution\": {\n            \"name\": \"Fixed\"\n        }\n    },\n    \"transition\": {\n        \"id\": \"5\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/transitions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"transitions"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the issue is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"historyMetadata\": {\n        \"actor\": {\n            \"avatarUrl\": \"http://mysystem/avatar/tony.jpg\",\n            \"displayName\": \"Tony\",\n            \"id\": \"tony\",\n            \"type\": \"mysystem-user\",\n            \"url\": \"http://mysystem/users/tony\"\n        },\n        \"extraData\": {\n            \"Iteration\": \"10a\",\n            \"Step\": \"4\"\n        },\n        \"description\": \"From the order testing process\",\n        \"generator\": {\n            \"id\": \"mysystem-1\",\n            \"type\": \"mysystem-application\"\n        },\n        \"cause\": {\n            \"id\": \"myevent\",\n            \"type\": \"mysystem-event\"\n        },\n        \"activityDescription\": \"Complete order processing\",\n        \"type\": \"myplugin:type\"\n    },\n    \"update\": {\n        \"comment\": [\n            {\n                \"add\": {\n                    \"body\": {\n                        \"type\": \"doc\",\n                        \"version\": 1,\n                        \"content\": [\n                            {\n                                \"type\": \"paragraph\",\n                                \"content\": [\n                                    {\n                                        \"text\": \"Bug has been fixed\",\n                                        \"type\": \"text\"\n                                    }\n                                ]\n                            }\n                        ]\n                    }\n                }\n            }\n        ]\n    },\n    \"fields\": {\n        \"assignee\": {\n            \"name\": \"bob\"\n        },\n        \"resolution\": {\n            \"name\": \"Fixed\"\n        }\n    },\n    \"transition\": {\n        \"id\": \"5\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/transitions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"transitions"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Votes",
					"item": [
						{
							"name": "Get Votes",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/votes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"votes"
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										}
									]
								},
								"description": "Returns details about the votes on an issue.\n\nThis operation requires the **Allow users to vote on issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is ini\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n\nNote that users with the necessary permissions for this operation but without the *View voters and watchers* project permissions are not returned details in the `voters` field."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"votes"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"votes"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/issue/MKY-1/votes\\\",\\\"votes\\\":24,\\\"hasVoted\\\":true,\\\"voters\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false}]}\""
								},
								{
									"name": "Returned if:\n\n *  voting is disabled.\n *  the user does not have permission to view the issue.\n *  the issue is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"votes"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add Vote",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/votes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"votes"
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										}
									]
								},
								"description": "Adds the user's vote to an issue. This is the equivalent of the user clicking *Vote* on an issue in Jira.\n\nThis operation requires the **Allow users to vote on issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"votes"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"votes"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  voting is disabled.\n *  the issue is not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"votes"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Vote",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/votes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"votes"
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										}
									]
								},
								"description": "Deletes a user's vote from an issue. This is the equivalent of the user clicking *Unvote* on an issue in Jira.\n\nThis operation requires the **Allow users to vote on issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"votes"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  voting is disabled.\n *  the user has not voted on the issue.\n *  the issue is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"votes"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/votes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"votes"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Watchers",
					"item": [
						{
							"name": "Get Issue Watchers",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"watchers"
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										}
									]
								},
								"description": "Returns the watchers for an issue.\n\nThis operation requires the **Allow users to watch issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is ini\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  To see details of users on the watchlist other than themselves, *View voters and watchers* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in."
							},
							"response": [
								{
									"name": "Returned if the issue is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"watchers"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"watchers"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers\\\",\\\"isWatching\\\":false,\\\"watchCount\\\":1,\\\"watchers\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false}]}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"watchers"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add Watcher",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\""
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"watchers"
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										}
									]
								},
								"description": "Adds a user as a watcher of an issue by passing the account ID of the user. For example, `\"5b10ac8d82e05b22cc7d4ef5\"`. If no user is specified the calling user is added.\n\nThis operation requires the **Allow users to watch issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  To add users other than themselves to the watchlist, *Manage watcher list* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in."
							},
							"response": [
								{
									"name": "Returned if the user does not have the permission to manage the watcher list.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"watchers"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the issue or the user is not found or the user does not have permission to view the issue.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"watchers"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"watchers"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"watchers"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"<string>\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"watchers"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Watcher",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers?username=<string>&accountId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"watchers"
									],
									"query": [
										{
											"key": "username",
											"value": "<string>",
											"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
										},
										{
											"key": "accountId",
											"value": "<string>",
											"description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required."
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										}
									]
								},
								"description": "Deletes a user as a watcher of an issue.\n\nThis operation requires the **Allow users to watch issues** option to be *ON*. This option is set in General configuration for Jira. See [Configuring Jira application options](https://confluence.atlassian.com/x/uYXKM) for details.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  To remove users other than themselves from the watchlist, *Manage watcher list* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers?username=<string>&accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"watchers"
											],
											"query": [
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the issue or the user is not found or the user does not have permission to view the issue.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers?username=<string>&accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"watchers"
											],
											"query": [
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers?username=<string>&accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"watchers"
											],
											"query": [
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the permission to manage the watcher list.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers?username=<string>&accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"watchers"
											],
											"query": [
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if `accountId` is not supplied.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/watchers?username=<string>&accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"watchers"
											],
											"query": [
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Worklog",
					"item": [
						{
							"name": "Id}",
							"item": [
								{
									"name": "Get Worklog",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?expand=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"worklog",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "",
													"description": "Use [expand](#expansion) to include additional information about work logs in the response. This parameter accepts\n\n`properties`, which returns worklog properties."
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID or key of the issue."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the worklog."
												}
											]
										},
										"description": "Returns a worklog.\n\nTime tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?expand=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":id"
													],
													"query": [
														{
															"key": "expand",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if:\n\n *  the issue is not found or the user does not have permission to view it.\n *  the worklog is not found or the user does not have permission to view it.\n *  time tracking is disabled.\n\n.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?expand=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":id"
													],
													"query": [
														{
															"key": "expand",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?expand=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":id"
													],
													"query": [
														{
															"key": "expand",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"comment\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"I did some work here.\\\"}]}]},\\\"updated\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"group\\\",\\\"value\\\":\\\"jira-developers\\\"},\\\"started\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"timeSpent\\\":\\\"3h 20m\\\",\\\"timeSpentSeconds\\\":12000,\\\"id\\\":\\\"100028\\\",\\\"issueId\\\":\\\"10002\\\"}\""
										}
									]
								},
								{
									"name": "Update Worklog",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"comment\": {},\n    \"visibility\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n    },\n    \"started\": \"<dateTime>\",\n    \"timeSpent\": \"<string>\",\n    \"timeSpentSeconds\": \"<long>\",\n    \"properties\": [\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&expand=&overrideEditableFlag=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"worklog",
												":id"
											],
											"query": [
												{
													"key": "notifyUsers",
													"value": "true",
													"description": "Whether users watching the issue are notified by email."
												},
												{
													"key": "adjustEstimate",
													"value": "auto",
													"description": "Defines how to update the issue's time estimate, the options are:\n\n *  `new` Sets the estimate to a specific value, defined in `newEstimate`.\n *  `leave` Leaves the estimate unchanged.\n *  `auto` Updates the estimate by the difference between the original and updated value of `timeSpent` or `timeSpentSeconds`."
												},
												{
													"key": "newEstimate",
													"value": "<string>",
													"description": "The value to set as the issue's remaining time estimate, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when `adjustEstimate` is `new`."
												},
												{
													"key": "expand",
													"value": "",
													"description": "Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts `properties`, which returns worklog properties."
												},
												{
													"key": "overrideEditableFlag",
													"value": "false",
													"description": "Whether the worklog should be added to the issue even if the issue is not editable. For example, because the issue is closed. Only connect app users with admin permissions can use this flag."
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID or key the issue."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the worklog."
												}
											]
										},
										"description": "Updates a worklog.\n\nTime tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  *Edit all worklogs*[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any worklog or *Edit own worklogs* to update worklogs created by the user.\n *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to."
									},
									"response": [
										{
											"name": "Returned if:\n\n *  `adjustEstimate` is set to `new` but `newEstimate` is not provided or is invalid.\n *  the user does not have permission to update the worklog.\n *  the request JSON is malformed.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"timeSpentSeconds\": 12000,\n    \"visibility\": {\n        \"type\": \"group\",\n        \"value\": \"jira-developers\"\n    },\n    \"comment\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"I did some work here.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"started\": \"2020-12-17T01:45:40.269+0000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&expand=&overrideEditableFlag=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":id"
													],
													"query": [
														{
															"key": "notifyUsers",
															"value": "true"
														},
														{
															"key": "adjustEstimate",
															"value": "auto"
														},
														{
															"key": "newEstimate",
															"value": "<string>"
														},
														{
															"key": "expand",
															"value": ""
														},
														{
															"key": "overrideEditableFlag",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"timeSpentSeconds\": 12000,\n    \"visibility\": {\n        \"type\": \"group\",\n        \"value\": \"jira-developers\"\n    },\n    \"comment\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"I did some work here.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"started\": \"2020-12-17T01:45:40.269+0000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&expand=&overrideEditableFlag=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":id"
													],
													"query": [
														{
															"key": "notifyUsers",
															"value": "true"
														},
														{
															"key": "adjustEstimate",
															"value": "auto"
														},
														{
															"key": "newEstimate",
															"value": "<string>"
														},
														{
															"key": "expand",
															"value": ""
														},
														{
															"key": "overrideEditableFlag",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if:\n\n *  the issue is not found or user does not have permission to view the issue.\n *  the worklog is not found or the user does not have permission to view it.\n *  time tracking is disabled.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"timeSpentSeconds\": 12000,\n    \"visibility\": {\n        \"type\": \"group\",\n        \"value\": \"jira-developers\"\n    },\n    \"comment\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"I did some work here.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"started\": \"2020-12-17T01:45:40.269+0000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&expand=&overrideEditableFlag=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":id"
													],
													"query": [
														{
															"key": "notifyUsers",
															"value": "true"
														},
														{
															"key": "adjustEstimate",
															"value": "auto"
														},
														{
															"key": "newEstimate",
															"value": "<string>"
														},
														{
															"key": "expand",
															"value": ""
														},
														{
															"key": "overrideEditableFlag",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"timeSpentSeconds\": 12000,\n    \"visibility\": {\n        \"type\": \"group\",\n        \"value\": \"jira-developers\"\n    },\n    \"comment\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"I did some work here.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"started\": \"2020-12-17T01:45:40.269+0000\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&expand=&overrideEditableFlag=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":id"
													],
													"query": [
														{
															"key": "notifyUsers",
															"value": "true"
														},
														{
															"key": "adjustEstimate",
															"value": "auto"
														},
														{
															"key": "newEstimate",
															"value": "<string>"
														},
														{
															"key": "expand",
															"value": ""
														},
														{
															"key": "overrideEditableFlag",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"comment\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"I did some work here.\\\"}]}]},\\\"updated\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"group\\\",\\\"value\\\":\\\"jira-developers\\\"},\\\"started\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"timeSpent\\\":\\\"3h 20m\\\",\\\"timeSpentSeconds\\\":12000,\\\"id\\\":\\\"100028\\\",\\\"issueId\\\":\\\"10002\\\"}\""
										}
									]
								},
								{
									"name": "Delete Worklog",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&increaseBy=<string>&overrideEditableFlag=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"worklog",
												":id"
											],
											"query": [
												{
													"key": "notifyUsers",
													"value": "true",
													"description": "Whether users watching the issue are notified by email."
												},
												{
													"key": "adjustEstimate",
													"value": "auto",
													"description": "Defines how to update the issue's time estimate, the options are:\n\n *  `new` Sets the estimate to a specific value, defined in `newEstimate`.\n *  `leave` Leaves the estimate unchanged.\n *  `manual` Increases the estimate by amount specified in `increaseBy`.\n *  `auto` Reduces the estimate by the value of `timeSpent` in the worklog."
												},
												{
													"key": "newEstimate",
													"value": "<string>",
													"description": "The value to set as the issue's remaining time estimate, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when `adjustEstimate` is `new`."
												},
												{
													"key": "increaseBy",
													"value": "<string>",
													"description": "The amount to increase the issue's remaining estimate by, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when `adjustEstimate` is `manual`."
												},
												{
													"key": "overrideEditableFlag",
													"value": "false",
													"description": "Whether the work log entry should be added to the issue even if the issue is not editable, because jira.issue.editable set to false or missing. For example, the issue is closed. Only connect app users with admin permissions can use this flag."
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID or key of the issue."
												},
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the worklog."
												}
											]
										},
										"description": "Deletes a worklog from an issue.\n\nTime tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  *Delete all worklogs*[ project permission](https://confluence.atlassian.com/x/yodKLg) to delete any worklog or *Delete own worklogs* to delete worklogs created by the user,\n *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to."
									},
									"response": [
										{
											"name": "Returned if:\n\n *  the issue is not found or user does not have permission to view the issue.\n *  the worklog is not found or the user does not have permission to view it.\n *  time tracking is disabled.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&increaseBy=<string>&overrideEditableFlag=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":id"
													],
													"query": [
														{
															"key": "notifyUsers",
															"value": "true"
														},
														{
															"key": "adjustEstimate",
															"value": "auto"
														},
														{
															"key": "newEstimate",
															"value": "<string>"
														},
														{
															"key": "increaseBy",
															"value": "<string>"
														},
														{
															"key": "overrideEditableFlag",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if:\n\n *  `adjustEstimate` is set to `new` but `newEstimate` is not provided or is invalid.\n *  `adjustEstimate` is set to `manual` but `reduceBy` is not provided or is invalid.\n *  the user does not have permission to delete the worklog.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&increaseBy=<string>&overrideEditableFlag=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":id"
													],
													"query": [
														{
															"key": "notifyUsers",
															"value": "true"
														},
														{
															"key": "adjustEstimate",
															"value": "auto"
														},
														{
															"key": "newEstimate",
															"value": "<string>"
														},
														{
															"key": "increaseBy",
															"value": "<string>"
														},
														{
															"key": "overrideEditableFlag",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&increaseBy=<string>&overrideEditableFlag=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":id"
													],
													"query": [
														{
															"key": "notifyUsers",
															"value": "true"
														},
														{
															"key": "adjustEstimate",
															"value": "auto"
														},
														{
															"key": "newEstimate",
															"value": "<string>"
														},
														{
															"key": "increaseBy",
															"value": "<string>"
														},
														{
															"key": "overrideEditableFlag",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:id?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&increaseBy=<string>&overrideEditableFlag=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":id"
													],
													"query": [
														{
															"key": "notifyUsers",
															"value": "true"
														},
														{
															"key": "adjustEstimate",
															"value": "auto"
														},
														{
															"key": "newEstimate",
															"value": "<string>"
														},
														{
															"key": "increaseBy",
															"value": "<string>"
														},
														{
															"key": "overrideEditableFlag",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Worklog Id}/properties",
							"item": [
								{
									"name": "Property Key}",
									"item": [
										{
											"name": "Get Worklog Property",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":worklogId",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID or key of the issue."
														},
														{
															"key": "worklogId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the worklog."
														},
														{
															"key": "propertyKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The key of the property."
														}
													]
												},
												"description": "Returns the value of a worklog property.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to."
											},
											"response": [
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"key\\\":\\\"issue.support\\\",\\\"value\\\":{\\\"system.conversation.id\\\":\\\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\\\",\\\"system.support.time\\\":\\\"1m\\\"}}\""
												},
												{
													"name": "Returned if:\n\n *  the issue, worklog, or property is not found.\n *  the user does not have permission to view the issue or worklog.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the worklog ID is invalid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set Worklog Property",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":worklogId",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID or key of the issue."
														},
														{
															"key": "worklogId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the worklog."
														},
														{
															"key": "propertyKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The key of the issue property. The maximum length is 255 characters."
														}
													]
												},
												"description": "Sets the value of a worklog property. Use this operation to store custom data against the worklog.\n\nThe value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  *Edit all worklogs*[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any worklog or *Edit own worklogs* to update worklogs created by the user.\n *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to."
											},
											"response": [
												{
													"name": "Returned if the worklog property is updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Returned if:\n\n *  the issue or worklog is not found.\n *  the user does not have permission to view the issue or worklog.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the worklog property is created.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the user does not have permission to edit the worklog.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the worklog ID is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Worklog Property",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":worklogId",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "issueIdOrKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID or key of the issue."
														},
														{
															"key": "worklogId",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the worklog."
														},
														{
															"key": "propertyKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The key of the property."
														}
													]
												},
												"description": "Deletes a worklog property.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to."
											},
											"response": [
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the worklog property is removed.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the worklog key or id is invalid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the user does not have permission to edit the worklog.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if:\n\n *  the issue, worklog, or property is not found.\n *  the user does not have permission to view the issue or worklog.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"issue",
																":issueIdOrKey",
																"worklog",
																":worklogId",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "issueIdOrKey"
																},
																{
																	"key": "worklogId"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Worklog Property Keys",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"worklog",
												":worklogId",
												"properties"
											],
											"variable": [
												{
													"key": "issueIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID or key of the issue."
												},
												{
													"key": "worklogId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the worklog."
												}
											]
										},
										"description": "Returns the keys of all properties for a worklog.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to."
									},
									"response": [
										{
											"name": "Returned if the worklog ID is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":worklogId",
														"properties"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "worklogId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":worklogId",
														"properties"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "worklogId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"keys\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\\\",\\\"key\\\":\\\"issue.support\\\"}]}\""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":worklogId",
														"properties"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "worklogId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if:\n\n *  the issue or worklog is not found.\n *  the user does not have permission to view the issue or worklog.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issue",
														":issueIdOrKey",
														"worklog",
														":worklogId",
														"properties"
													],
													"variable": [
														{
															"key": "issueIdOrKey"
														},
														{
															"key": "worklogId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Issue Worklogs",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog?startAt=0&maxResults=1048576&startedAfter=<long>&expand=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"worklog"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "1048576",
											"description": "The maximum number of items to return per page."
										},
										{
											"key": "startedAfter",
											"value": "<long>",
											"description": "The worklog start date and time, as a UNIX timestamp in milliseconds, after which worklogs are returned."
										},
										{
											"key": "expand",
											"value": "",
											"description": "Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts`properties`, which returns worklog properties."
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										}
									]
								},
								"description": "Returns worklogs for an issue, starting from the oldest worklog or from the worklog started on or after a date and time.\n\nTime tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** Workloads are only returned where the user has:\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog?startAt=0&maxResults=1048576&startedAfter=<long>&expand=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"worklog"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "1048576"
												},
												{
													"key": "startedAfter",
													"value": "<long>"
												},
												{
													"key": "expand",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog?startAt=0&maxResults=1048576&startedAfter=<long>&expand=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"worklog"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "1048576"
												},
												{
													"key": "startedAfter",
													"value": "<long>"
												},
												{
													"key": "expand",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"startAt\\\":0,\\\"maxResults\\\":1,\\\"total\\\":1,\\\"worklogs\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"comment\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"I did some work here.\\\"}]}]},\\\"updated\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"group\\\",\\\"value\\\":\\\"jira-developers\\\"},\\\"started\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"timeSpent\\\":\\\"3h 20m\\\",\\\"timeSpentSeconds\\\":12000,\\\"id\\\":\\\"100028\\\",\\\"issueId\\\":\\\"10002\\\"}]}\""
								},
								{
									"name": "Returned if:\n\n *  the issue is not found or the user does not have permission to view the issue.\n *  `startAt` or `maxResults` has non-numeric values.\n *  time tracking is disabled.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog?startAt=0&maxResults=1048576&startedAfter=<long>&expand=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"worklog"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "1048576"
												},
												{
													"key": "startedAfter",
													"value": "<long>"
												},
												{
													"key": "expand",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Add Worklog",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"comment\": {},\n    \"visibility\": {\n        \"type\": \"<string>\",\n        \"value\": \"<string>\"\n    },\n    \"started\": \"<dateTime>\",\n    \"timeSpent\": \"<string>\",\n    \"timeSpentSeconds\": \"<long>\",\n    \"properties\": [\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&reduceBy=<string>&expand=&overrideEditableFlag=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"worklog"
									],
									"query": [
										{
											"key": "notifyUsers",
											"value": "true",
											"description": "Whether users watching the issue are notified by email."
										},
										{
											"key": "adjustEstimate",
											"value": "auto",
											"description": "Defines how to update the issue's time estimate, the options are:\n\n *  `new` Sets the estimate to a specific value, defined in `newEstimate`.\n *  `leave` Leaves the estimate unchanged.\n *  `manual` Reduces the estimate by amount specified in `reduceBy`.\n *  `auto` Reduces the estimate by the value of `timeSpent` in the worklog."
										},
										{
											"key": "newEstimate",
											"value": "<string>",
											"description": "The value to set as the issue's remaining time estimate, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when `adjustEstimate` is `new`."
										},
										{
											"key": "reduceBy",
											"value": "<string>",
											"description": "The amount to reduce the issue's remaining estimate by, as days (\\#d), hours (\\#h), or minutes (\\#m). For example, *2d*. Required when `adjustEstimate` is `manual`."
										},
										{
											"key": "expand",
											"value": "",
											"description": "Use [expand](#expansion) to include additional information about work logs in the response. This parameter accepts `properties`, which returns worklog properties."
										},
										{
											"key": "overrideEditableFlag",
											"value": "false",
											"description": "Whether the worklog entry should be added to the issue even if the issue is not editable, because jira.issue.editable set to false or missing. For example, the issue is closed. Only connect app users with admin scope permission can use this flag."
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key the issue."
										}
									]
								},
								"description": "Adds a worklog to an issue.\n\nTime tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* and *Work on issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"timeSpentSeconds\": 12000,\n    \"visibility\": {\n        \"type\": \"group\",\n        \"value\": \"jira-developers\"\n    },\n    \"comment\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"I did some work here.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"started\": \"2020-12-17T01:45:40.269+0000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&reduceBy=<string>&expand=&overrideEditableFlag=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"worklog"
											],
											"query": [
												{
													"key": "notifyUsers",
													"value": "true"
												},
												{
													"key": "adjustEstimate",
													"value": "auto"
												},
												{
													"key": "newEstimate",
													"value": "<string>"
												},
												{
													"key": "reduceBy",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": ""
												},
												{
													"key": "overrideEditableFlag",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the issue is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"timeSpentSeconds\": 12000,\n    \"visibility\": {\n        \"type\": \"group\",\n        \"value\": \"jira-developers\"\n    },\n    \"comment\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"I did some work here.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"started\": \"2020-12-17T01:45:40.269+0000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&reduceBy=<string>&expand=&overrideEditableFlag=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"worklog"
											],
											"query": [
												{
													"key": "notifyUsers",
													"value": "true"
												},
												{
													"key": "adjustEstimate",
													"value": "auto"
												},
												{
													"key": "newEstimate",
													"value": "<string>"
												},
												{
													"key": "reduceBy",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": ""
												},
												{
													"key": "overrideEditableFlag",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  `adjustEstimate` is set to `new` but `newEstimate` is not provided or is invalid.\n *  `adjustEstimate` is set to `manual` but `reduceBy` is not provided or is invalid.\n *  the user does not have permission to add the worklog.\n *  the req",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"timeSpentSeconds\": 12000,\n    \"visibility\": {\n        \"type\": \"group\",\n        \"value\": \"jira-developers\"\n    },\n    \"comment\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"I did some work here.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"started\": \"2020-12-17T01:45:40.269+0000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&reduceBy=<string>&expand=&overrideEditableFlag=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"worklog"
											],
											"query": [
												{
													"key": "notifyUsers",
													"value": "true"
												},
												{
													"key": "adjustEstimate",
													"value": "auto"
												},
												{
													"key": "newEstimate",
													"value": "<string>"
												},
												{
													"key": "reduceBy",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": ""
												},
												{
													"key": "overrideEditableFlag",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"timeSpentSeconds\": 12000,\n    \"visibility\": {\n        \"type\": \"group\",\n        \"value\": \"jira-developers\"\n    },\n    \"comment\": {\n        \"type\": \"doc\",\n        \"version\": 1,\n        \"content\": [\n            {\n                \"type\": \"paragraph\",\n                \"content\": [\n                    {\n                        \"text\": \"I did some work here.\",\n                        \"type\": \"text\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"started\": \"2020-12-17T01:45:40.269+0000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/worklog?notifyUsers=true&adjustEstimate=auto&newEstimate=<string>&reduceBy=<string>&expand=&overrideEditableFlag=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"worklog"
											],
											"query": [
												{
													"key": "notifyUsers",
													"value": "true"
												},
												{
													"key": "adjustEstimate",
													"value": "auto"
												},
												{
													"key": "newEstimate",
													"value": "<string>"
												},
												{
													"key": "reduceBy",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": ""
												},
												{
													"key": "overrideEditableFlag",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"self\": \"http://gCY.fkfGmZL.bC5M\",\n \"author\": {\n  \"self\": \"laboris ut deserunt\",\n  \"name\": \"Excepteur dolore consectetur l\",\n  \"key\": \"voluptate sed\",\n  \"accountId\": \"ea \",\n  \"emailAddress\": \"esse exercitation sint aute magna\",\n  \"avatarUrls\": {\n   \"16x16\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"24x24\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"32x32\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"48x48\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"displayName\": \"dolor laboris sint\",\n  \"active\": false,\n  \"timeZone\": \"ad\",\n  \"accountType\": \"irure voluptate veniam\"\n },\n \"updateAuthor\": {\n  \"self\": \"labore dese\",\n  \"name\": \"sunt proident mollit\",\n  \"key\": \"Ut nulla commodo eu ani\",\n  \"accountId\": \"par\",\n  \"emailAddress\": \"elit\",\n  \"avatarUrls\": {\n   \"16x16\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"24x24\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"32x32\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   },\n   \"48x48\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n   }\n  },\n  \"displayName\": \"reprehenderit sit et nostrud\",\n  \"active\": true,\n  \"timeZone\": \"id incididunt reprehenderit\",\n  \"accountType\": \"dolor\"\n },\n \"comment\": {},\n \"created\": \"2012-12-03T01:15:55.700Z\",\n \"updated\": \"1960-11-06T14:29:52.666Z\",\n \"visibility\": {\n  \"type\": \"<string>\",\n  \"value\": \"<string>\"\n },\n \"started\": \"<dateTime>\",\n \"timeSpent\": \"<string>\",\n \"timeSpentSeconds\": \"<long>\",\n \"id\": \"commodo proident aliqua in\",\n \"issueId\": \"qui consequat dolor sunt laboris\",\n \"properties\": [\n  {\n   \"key\": \"<string>\",\n   \"value\": {}\n  },\n  {\n   \"key\": \"<string>\",\n   \"value\": {}\n  }\n ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Change Logs",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/changelog?startAt=0&maxResults=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								":issueIdOrKey",
								"changelog"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "100",
									"description": "The maximum number of items to return per page."
								}
							],
							"variable": [
								{
									"key": "issueIdOrKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID or key of the issue."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of all changelogs for an issue sorted by date, starting from the oldest.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if the issue is not found or the user does not have permission to view it.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/changelog?startAt=0&maxResults=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"changelog"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/changelog?startAt=0&maxResults=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"changelog"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/TT-1/changelog?startAt=2&maxResults=2\\\",\\\"nextPage\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/TT-1/changelog?&startAt=4&maxResults=2\\\",\\\"maxResults\\\":2,\\\"startAt\\\":2,\\\"total\\\":5,\\\"isLast\\\":false,\\\"values\\\":[{\\\"id\\\":\\\"10001\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\"},\\\"created\\\":\\\"1970-01-18T06:27:50.429+0000\\\",\\\"items\\\":[{\\\"field\\\":\\\"fields\\\",\\\"fieldtype\\\":\\\"jira\\\",\\\"fieldId\\\":\\\"fieldId\\\",\\\"from\\\":null,\\\"fromString\\\":\\\"\\\",\\\"to\\\":null,\\\"toString\\\":\\\"label-1\\\"}]},{\\\"id\\\":\\\"10002\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\"},\\\"created\\\":\\\"1970-01-18T06:27:51.429+0000\\\",\\\"items\\\":[{\\\"field\\\":\\\"fields\\\",\\\"fieldtype\\\":\\\"jira\\\",\\\"fieldId\\\":\\\"fieldId\\\",\\\"from\\\":null,\\\"fromString\\\":\\\"label-1\\\",\\\"to\\\":null,\\\"toString\\\":\\\"label-1 label-2\\\"}]}]}\""
						}
					]
				},
				{
					"name": "Create Issue",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transition\": {\n        \"id\": \"<string>\",\n        \"looped\": \"<boolean>\"\n    },\n    \"fields\": \"<object>\",\n    \"update\": \"<object>\",\n    \"historyMetadata\": {\n        \"type\": \"<string>\",\n        \"description\": \"<string>\",\n        \"descriptionKey\": \"<string>\",\n        \"activityDescription\": \"<string>\",\n        \"activityDescriptionKey\": \"<string>\",\n        \"emailDescription\": \"<string>\",\n        \"emailDescriptionKey\": \"<string>\",\n        \"actor\": {\n            \"id\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"displayNameKey\": \"<string>\",\n            \"type\": \"<string>\",\n            \"avatarUrl\": \"<string>\",\n            \"url\": \"<string>\"\n        },\n        \"generator\": {\n            \"id\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"displayNameKey\": \"<string>\",\n            \"type\": \"<string>\",\n            \"avatarUrl\": \"<string>\",\n            \"url\": \"<string>\"\n        },\n        \"cause\": {\n            \"id\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"displayNameKey\": \"<string>\",\n            \"type\": \"<string>\",\n            \"avatarUrl\": \"<string>\",\n            \"url\": \"<string>\"\n        },\n        \"extraData\": \"<object>\"\n    },\n    \"properties\": [\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue?updateHistory=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue"
							],
							"query": [
								{
									"key": "updateHistory",
									"value": "false",
									"description": "Whether the project in which the issue is created is added to the user's **Recently viewed** project list, as shown under **Projects** in Jira."
								}
							]
						},
						"description": "Creates an issue or, where the option to create subtasks is enabled in Jira, a subtask. A transition may be applied, to move the issue or subtask to a workflow step other than the default start step, and issue properties set.\n\nThe content of the issue or subtask is defined using `update` and `fields`. The fields that can be set in the issue or subtask are determined using the [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get). These are the same fields that appear on the issue's create screen. Note that the `description`, `environment`, and any `textarea` type custom fields (multi-line text fields) take Atlassian Document Format content. Single line custom fields (`textfield`) accept a string and don't handle Atlassian Document Format content.\n\nCreating a subtask differs from creating an issue as follows:\n\n *  `issueType` must be set to a subtask issue type (use [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get) to find subtask issue types).\n *  `parent` must contain the ID or key of the parent issue.\n\nIn a next-gen project any issue may be made a child providing that the parent and child are members of the same project. In a classic project the parent field is only valid for subtasks.\n\n**[Permissions](#permissions) required:** *Browse projects* and *Create issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project in which the issue or subtask is created."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"update\": {},\n    \"fields\": {\n        \"summary\": \"Main order flow broken\",\n        \"parent\": {\n            \"key\": \"PROJ-123\"\n        },\n        \"issuetype\": {\n            \"id\": \"10000\"\n        },\n        \"components\": [\n            {\n                \"id\": \"10000\"\n            }\n        ],\n        \"customfield_20000\": \"06/Jul/19 3:25 PM\",\n        \"customfield_40000\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Occurs on all orders\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"customfield_70000\": [\n            \"jira-administrators\",\n            \"jira-software-users\"\n        ],\n        \"project\": {\n            \"id\": \"10000\"\n        },\n        \"description\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Order entry fails when selecting supplier.\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"reporter\": {\n            \"id\": \"5b10a2844c20165700ede21g\"\n        },\n        \"fixVersions\": [\n            {\n                \"id\": \"10001\"\n            }\n        ],\n        \"customfield_10000\": \"09/Jun/19\",\n        \"priority\": {\n            \"id\": \"20000\"\n        },\n        \"labels\": [\n            \"bugfix\",\n            \"blitz_test\"\n        ],\n        \"timetracking\": {\n            \"remainingEstimate\": \"5\",\n            \"originalEstimate\": \"10\"\n        },\n        \"customfield_30000\": [\n            \"10000\",\n            \"10002\"\n        ],\n        \"customfield_80000\": {\n            \"value\": \"red\"\n        },\n        \"security\": {\n            \"id\": \"10000\"\n        },\n        \"environment\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"UAT\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"versions\": [\n            {\n                \"id\": \"10000\"\n            }\n        ],\n        \"duedate\": \"2019-05-11\",\n        \"customfield_60000\": \"jira-software-users\",\n        \"customfield_50000\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Could impact day-to-day work.\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"assignee\": {\n            \"id\": \"5b109f2e9729b51b54dc274d\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue?updateHistory=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue"
									],
									"query": [
										{
											"key": "updateHistory",
											"value": "false"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"ED-24\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10000\\\",\\\"transition\\\":{\\\"status\\\":200,\\\"errorCollection\\\":{\\\"errorMessages\\\":[],\\\"errors\\\":{}}}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"update\": {},\n    \"fields\": {\n        \"summary\": \"Main order flow broken\",\n        \"parent\": {\n            \"key\": \"PROJ-123\"\n        },\n        \"issuetype\": {\n            \"id\": \"10000\"\n        },\n        \"components\": [\n            {\n                \"id\": \"10000\"\n            }\n        ],\n        \"customfield_20000\": \"06/Jul/19 3:25 PM\",\n        \"customfield_40000\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Occurs on all orders\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"customfield_70000\": [\n            \"jira-administrators\",\n            \"jira-software-users\"\n        ],\n        \"project\": {\n            \"id\": \"10000\"\n        },\n        \"description\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Order entry fails when selecting supplier.\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"reporter\": {\n            \"id\": \"5b10a2844c20165700ede21g\"\n        },\n        \"fixVersions\": [\n            {\n                \"id\": \"10001\"\n            }\n        ],\n        \"customfield_10000\": \"09/Jun/19\",\n        \"priority\": {\n            \"id\": \"20000\"\n        },\n        \"labels\": [\n            \"bugfix\",\n            \"blitz_test\"\n        ],\n        \"timetracking\": {\n            \"remainingEstimate\": \"5\",\n            \"originalEstimate\": \"10\"\n        },\n        \"customfield_30000\": [\n            \"10000\",\n            \"10002\"\n        ],\n        \"customfield_80000\": {\n            \"value\": \"red\"\n        },\n        \"security\": {\n            \"id\": \"10000\"\n        },\n        \"environment\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"UAT\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"versions\": [\n            {\n                \"id\": \"10000\"\n            }\n        ],\n        \"duedate\": \"2019-05-11\",\n        \"customfield_60000\": \"jira-software-users\",\n        \"customfield_50000\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Could impact day-to-day work.\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"assignee\": {\n            \"id\": \"5b109f2e9729b51b54dc274d\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue?updateHistory=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue"
									],
									"query": [
										{
											"key": "updateHistory",
											"value": "false"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"update\": {},\n    \"fields\": {\n        \"summary\": \"Main order flow broken\",\n        \"parent\": {\n            \"key\": \"PROJ-123\"\n        },\n        \"issuetype\": {\n            \"id\": \"10000\"\n        },\n        \"components\": [\n            {\n                \"id\": \"10000\"\n            }\n        ],\n        \"customfield_20000\": \"06/Jul/19 3:25 PM\",\n        \"customfield_40000\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Occurs on all orders\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"customfield_70000\": [\n            \"jira-administrators\",\n            \"jira-software-users\"\n        ],\n        \"project\": {\n            \"id\": \"10000\"\n        },\n        \"description\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Order entry fails when selecting supplier.\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"reporter\": {\n            \"id\": \"5b10a2844c20165700ede21g\"\n        },\n        \"fixVersions\": [\n            {\n                \"id\": \"10001\"\n            }\n        ],\n        \"customfield_10000\": \"09/Jun/19\",\n        \"priority\": {\n            \"id\": \"20000\"\n        },\n        \"labels\": [\n            \"bugfix\",\n            \"blitz_test\"\n        ],\n        \"timetracking\": {\n            \"remainingEstimate\": \"5\",\n            \"originalEstimate\": \"10\"\n        },\n        \"customfield_30000\": [\n            \"10000\",\n            \"10002\"\n        ],\n        \"customfield_80000\": {\n            \"value\": \"red\"\n        },\n        \"security\": {\n            \"id\": \"10000\"\n        },\n        \"environment\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"UAT\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"versions\": [\n            {\n                \"id\": \"10000\"\n            }\n        ],\n        \"duedate\": \"2019-05-11\",\n        \"customfield_60000\": \"jira-software-users\",\n        \"customfield_50000\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Could impact day-to-day work.\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"assignee\": {\n            \"id\": \"5b109f2e9729b51b54dc274d\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue?updateHistory=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue"
									],
									"query": [
										{
											"key": "updateHistory",
											"value": "false"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the request:\n\n *  is missing required fields.\n *  contains invalid field values.\n *  contains fields that cannot be set for the issue type.\n *  is by a user who does not have the necessary permission.\n *  is to create a subtype in a project di",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"update\": {},\n    \"fields\": {\n        \"summary\": \"Main order flow broken\",\n        \"parent\": {\n            \"key\": \"PROJ-123\"\n        },\n        \"issuetype\": {\n            \"id\": \"10000\"\n        },\n        \"components\": [\n            {\n                \"id\": \"10000\"\n            }\n        ],\n        \"customfield_20000\": \"06/Jul/19 3:25 PM\",\n        \"customfield_40000\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Occurs on all orders\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"customfield_70000\": [\n            \"jira-administrators\",\n            \"jira-software-users\"\n        ],\n        \"project\": {\n            \"id\": \"10000\"\n        },\n        \"description\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Order entry fails when selecting supplier.\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"reporter\": {\n            \"id\": \"5b10a2844c20165700ede21g\"\n        },\n        \"fixVersions\": [\n            {\n                \"id\": \"10001\"\n            }\n        ],\n        \"customfield_10000\": \"09/Jun/19\",\n        \"priority\": {\n            \"id\": \"20000\"\n        },\n        \"labels\": [\n            \"bugfix\",\n            \"blitz_test\"\n        ],\n        \"timetracking\": {\n            \"remainingEstimate\": \"5\",\n            \"originalEstimate\": \"10\"\n        },\n        \"customfield_30000\": [\n            \"10000\",\n            \"10002\"\n        ],\n        \"customfield_80000\": {\n            \"value\": \"red\"\n        },\n        \"security\": {\n            \"id\": \"10000\"\n        },\n        \"environment\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"UAT\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"versions\": [\n            {\n                \"id\": \"10000\"\n            }\n        ],\n        \"duedate\": \"2019-05-11\",\n        \"customfield_60000\": \"jira-software-users\",\n        \"customfield_50000\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Could impact day-to-day work.\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        },\n        \"assignee\": {\n            \"id\": \"5b109f2e9729b51b54dc274d\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue?updateHistory=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue"
									],
									"query": [
										{
											"key": "updateHistory",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Field 'priority' is required\\\"],\\\"errors\\\":{}}\""
						}
					]
				},
				{
					"name": "Bulk Create Issue",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"issueUpdates\": [\n        {\n            \"transition\": {\n                \"id\": \"<string>\",\n                \"looped\": \"<boolean>\"\n            },\n            \"fields\": \"<object>\",\n            \"update\": \"<object>\",\n            \"historyMetadata\": {\n                \"type\": \"<string>\",\n                \"description\": \"<string>\",\n                \"descriptionKey\": \"<string>\",\n                \"activityDescription\": \"<string>\",\n                \"activityDescriptionKey\": \"<string>\",\n                \"emailDescription\": \"<string>\",\n                \"emailDescriptionKey\": \"<string>\",\n                \"actor\": {\n                    \"id\": \"<string>\",\n                    \"displayName\": \"<string>\",\n                    \"displayNameKey\": \"<string>\",\n                    \"type\": \"<string>\",\n                    \"avatarUrl\": \"<string>\",\n                    \"url\": \"<string>\"\n                },\n                \"generator\": {\n                    \"id\": \"<string>\",\n                    \"displayName\": \"<string>\",\n                    \"displayNameKey\": \"<string>\",\n                    \"type\": \"<string>\",\n                    \"avatarUrl\": \"<string>\",\n                    \"url\": \"<string>\"\n                },\n                \"cause\": {\n                    \"id\": \"<string>\",\n                    \"displayName\": \"<string>\",\n                    \"displayNameKey\": \"<string>\",\n                    \"type\": \"<string>\",\n                    \"avatarUrl\": \"<string>\",\n                    \"url\": \"<string>\"\n                },\n                \"extraData\": \"<object>\"\n            },\n            \"properties\": [\n                {\n                    \"key\": \"<string>\",\n                    \"value\": {}\n                },\n                {\n                    \"key\": \"<string>\",\n                    \"value\": {}\n                }\n            ]\n        },\n        {\n            \"transition\": {\n                \"id\": \"<string>\",\n                \"looped\": \"<boolean>\"\n            },\n            \"fields\": \"<object>\",\n            \"update\": \"<object>\",\n            \"historyMetadata\": {\n                \"type\": \"<string>\",\n                \"description\": \"<string>\",\n                \"descriptionKey\": \"<string>\",\n                \"activityDescription\": \"<string>\",\n                \"activityDescriptionKey\": \"<string>\",\n                \"emailDescription\": \"<string>\",\n                \"emailDescriptionKey\": \"<string>\",\n                \"actor\": {\n                    \"id\": \"<string>\",\n                    \"displayName\": \"<string>\",\n                    \"displayNameKey\": \"<string>\",\n                    \"type\": \"<string>\",\n                    \"avatarUrl\": \"<string>\",\n                    \"url\": \"<string>\"\n                },\n                \"generator\": {\n                    \"id\": \"<string>\",\n                    \"displayName\": \"<string>\",\n                    \"displayNameKey\": \"<string>\",\n                    \"type\": \"<string>\",\n                    \"avatarUrl\": \"<string>\",\n                    \"url\": \"<string>\"\n                },\n                \"cause\": {\n                    \"id\": \"<string>\",\n                    \"displayName\": \"<string>\",\n                    \"displayNameKey\": \"<string>\",\n                    \"type\": \"<string>\",\n                    \"avatarUrl\": \"<string>\",\n                    \"url\": \"<string>\"\n                },\n                \"extraData\": \"<object>\"\n            },\n            \"properties\": [\n                {\n                    \"key\": \"<string>\",\n                    \"value\": {}\n                },\n                {\n                    \"key\": \"<string>\",\n                    \"value\": {}\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/bulk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								"bulk"
							]
						},
						"description": "Creates issues and, where the option to create subtasks is enabled in Jira, subtasks. Transitions may be applied, to move the issues or subtasks to a workflow step other than the default start step, and issue properties set.\n\nThe content of each issue or subtask is defined using `update` and `fields`. The fields that can be set in the issue or subtask are determined using the [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get). These are the same fields that appear on the issues' create screens. Note that the `description`, `environment`, and any `textarea` type custom fields (multi-line text fields) take Atlassian Document Format content. Single line custom fields (`textfield`) accept a string and don't handle Atlassian Document Format content.\n\nCreating a subtask differs from creating an issue as follows:\n\n *  `issueType` must be set to a subtask issue type (use [ Get create issue metadata](#api-rest-api-3-issue-createmeta-get) to find subtask issue types).\n *  `parent` the must contain the ID or key of the parent issue.\n\n**[Permissions](#permissions) required:** *Browse projects* and *Create issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project in which each issue or subtask is created."
					},
					"response": [
						{
							"name": "Returned if any of the issue or subtask creation requests were successful. A request may be unsuccessful when it:\n\n *  is missing required fields.\n *  contains invalid field values.\n *  contains fields that cannot be set for the issue type.\n *  is by a us",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueUpdates\": [\n        {\n            \"update\": {\n                \"worklog\": [\n                    {\n                        \"add\": {\n                            \"timeSpent\": \"60m\",\n                            \"started\": \"2019-07-05T11:05:00.000+0000\"\n                        }\n                    }\n                ]\n            },\n            \"fields\": {\n                \"summary\": \"Main order flow broken\",\n                \"issuetype\": {\n                    \"id\": \"10000\"\n                },\n                \"components\": [\n                    {\n                        \"id\": \"10000\"\n                    }\n                ],\n                \"customfield_20000\": \"06/Jul/19 3:25 PM\",\n                \"customfield_40000\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Occurs on all orders\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"customfield_70000\": [\n                    \"jira-administrators\",\n                    \"jira-software-users\"\n                ],\n                \"project\": {\n                    \"id\": \"10000\"\n                },\n                \"description\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Order entry fails when selecting supplier.\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"reporter\": {\n                    \"id\": \"5b10a2844c20165700ede21g\"\n                },\n                \"fixVersions\": [\n                    {\n                        \"id\": \"10001\"\n                    }\n                ],\n                \"customfield_10000\": \"09/Jun/19\",\n                \"priority\": {\n                    \"id\": \"20000\"\n                },\n                \"labels\": [\n                    \"bugfix\",\n                    \"blitz_test\"\n                ],\n                \"timetracking\": {\n                    \"remainingEstimate\": \"5\",\n                    \"originalEstimate\": \"10\"\n                },\n                \"customfield_30000\": [\n                    \"10000\",\n                    \"10002\"\n                ],\n                \"customfield_80000\": {\n                    \"value\": \"red\"\n                },\n                \"security\": {\n                    \"id\": \"10000\"\n                },\n                \"environment\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"UAT\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"versions\": [\n                    {\n                        \"id\": \"10000\"\n                    }\n                ],\n                \"duedate\": \"2011-03-11\",\n                \"customfield_60000\": \"jira-software-users\",\n                \"customfield_50000\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Could impact day-to-day work.\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"assignee\": {\n                    \"id\": \"5b109f2e9729b51b54dc274d\"\n                }\n            }\n        },\n        {\n            \"update\": {},\n            \"fields\": {\n                \"summary\": \"Order stuck in pending\",\n                \"issuetype\": {\n                    \"id\": \"10000\"\n                },\n                \"components\": [\n                    {\n                        \"id\": \"10000\"\n                    }\n                ],\n                \"customfield_20000\": \"06/Jul/19 3:25 PM\",\n                \"customfield_40000\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Occurs on all orders\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"customfield_70000\": [\n                    \"jira-administrators\",\n                    \"jira-software-users\"\n                ],\n                \"project\": {\n                    \"id\": \"1000\"\n                },\n                \"description\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Order remains pending after approved.\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"reporter\": {\n                    \"id\": \"5b10a2844c20165700ede21g\"\n                },\n                \"fixVersions\": [\n                    {\n                        \"id\": \"10001\"\n                    }\n                ],\n                \"customfield_10000\": \"09/Jun/19\",\n                \"priority\": {\n                    \"id\": \"20000\"\n                },\n                \"labels\": [\n                    \"new_release\"\n                ],\n                \"timetracking\": {\n                    \"remainingEstimate\": \"5\",\n                    \"originalEstimate\": \"15\"\n                },\n                \"customfield_30000\": [\n                    \"10000\",\n                    \"10002\"\n                ],\n                \"customfield_80000\": {\n                    \"value\": \"red\"\n                },\n                \"security\": {\n                    \"id\": \"10000\"\n                },\n                \"environment\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"UAT\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"versions\": [\n                    {\n                        \"id\": \"10000\"\n                    }\n                ],\n                \"duedate\": \"2019-04-16\",\n                \"customfield_60000\": \"jira-software-users\",\n                \"customfield_50000\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Could impact day-to-day work.\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"assignee\": {\n                    \"id\": \"5b109f2e9729b51b54dc274d\"\n                }\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										"bulk"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"issues\\\":[{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"ED-24\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10000\\\",\\\"transition\\\":{\\\"status\\\":200,\\\"errorCollection\\\":{\\\"errorMessages\\\":[],\\\"errors\\\":{}}}},{\\\"id\\\":\\\"10001\\\",\\\"key\\\":\\\"ED-25\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10001\\\"}],\\\"errors\\\":[]}\""
						},
						{
							"name": "Returned if all requests are invalid. Requests may be unsuccessful when they:\n\n *  are missing required fields.\n *  contain invalid field values.\n *  contain fields that cannot be set for the issue type.\n *  are by a user who does not have the necessary p",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueUpdates\": [\n        {\n            \"update\": {\n                \"worklog\": [\n                    {\n                        \"add\": {\n                            \"timeSpent\": \"60m\",\n                            \"started\": \"2019-07-05T11:05:00.000+0000\"\n                        }\n                    }\n                ]\n            },\n            \"fields\": {\n                \"summary\": \"Main order flow broken\",\n                \"issuetype\": {\n                    \"id\": \"10000\"\n                },\n                \"components\": [\n                    {\n                        \"id\": \"10000\"\n                    }\n                ],\n                \"customfield_20000\": \"06/Jul/19 3:25 PM\",\n                \"customfield_40000\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Occurs on all orders\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"customfield_70000\": [\n                    \"jira-administrators\",\n                    \"jira-software-users\"\n                ],\n                \"project\": {\n                    \"id\": \"10000\"\n                },\n                \"description\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Order entry fails when selecting supplier.\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"reporter\": {\n                    \"id\": \"5b10a2844c20165700ede21g\"\n                },\n                \"fixVersions\": [\n                    {\n                        \"id\": \"10001\"\n                    }\n                ],\n                \"customfield_10000\": \"09/Jun/19\",\n                \"priority\": {\n                    \"id\": \"20000\"\n                },\n                \"labels\": [\n                    \"bugfix\",\n                    \"blitz_test\"\n                ],\n                \"timetracking\": {\n                    \"remainingEstimate\": \"5\",\n                    \"originalEstimate\": \"10\"\n                },\n                \"customfield_30000\": [\n                    \"10000\",\n                    \"10002\"\n                ],\n                \"customfield_80000\": {\n                    \"value\": \"red\"\n                },\n                \"security\": {\n                    \"id\": \"10000\"\n                },\n                \"environment\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"UAT\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"versions\": [\n                    {\n                        \"id\": \"10000\"\n                    }\n                ],\n                \"duedate\": \"2011-03-11\",\n                \"customfield_60000\": \"jira-software-users\",\n                \"customfield_50000\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Could impact day-to-day work.\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"assignee\": {\n                    \"id\": \"5b109f2e9729b51b54dc274d\"\n                }\n            }\n        },\n        {\n            \"update\": {},\n            \"fields\": {\n                \"summary\": \"Order stuck in pending\",\n                \"issuetype\": {\n                    \"id\": \"10000\"\n                },\n                \"components\": [\n                    {\n                        \"id\": \"10000\"\n                    }\n                ],\n                \"customfield_20000\": \"06/Jul/19 3:25 PM\",\n                \"customfield_40000\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Occurs on all orders\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"customfield_70000\": [\n                    \"jira-administrators\",\n                    \"jira-software-users\"\n                ],\n                \"project\": {\n                    \"id\": \"1000\"\n                },\n                \"description\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Order remains pending after approved.\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"reporter\": {\n                    \"id\": \"5b10a2844c20165700ede21g\"\n                },\n                \"fixVersions\": [\n                    {\n                        \"id\": \"10001\"\n                    }\n                ],\n                \"customfield_10000\": \"09/Jun/19\",\n                \"priority\": {\n                    \"id\": \"20000\"\n                },\n                \"labels\": [\n                    \"new_release\"\n                ],\n                \"timetracking\": {\n                    \"remainingEstimate\": \"5\",\n                    \"originalEstimate\": \"15\"\n                },\n                \"customfield_30000\": [\n                    \"10000\",\n                    \"10002\"\n                ],\n                \"customfield_80000\": {\n                    \"value\": \"red\"\n                },\n                \"security\": {\n                    \"id\": \"10000\"\n                },\n                \"environment\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"UAT\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"versions\": [\n                    {\n                        \"id\": \"10000\"\n                    }\n                ],\n                \"duedate\": \"2019-04-16\",\n                \"customfield_60000\": \"jira-software-users\",\n                \"customfield_50000\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Could impact day-to-day work.\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"assignee\": {\n                    \"id\": \"5b109f2e9729b51b54dc274d\"\n                }\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										"bulk"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"issues\\\":[],\\\"errors\\\":[{\\\"status\\\":400,\\\"elementErrors\\\":{\\\"errorMessages\\\":[],\\\"errors\\\":{\\\"issuetype\\\":\\\"The issue type selected is invalid.\\\",\\\"project\\\":\\\"Sub-tasks must be created in the same project as the parent.\\\"}},\\\"failedElementNumber\\\":0},{\\\"status\\\":400,\\\"elementErrors\\\":{\\\"errorMessages\\\":[],\\\"errors\\\":{\\\"issuetype\\\":\\\"The issue type selected is invalid.\\\",\\\"project\\\":\\\"Sub-tasks must be created in the same project as the parent.\\\"}},\\\"failedElementNumber\\\":1}]}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueUpdates\": [\n        {\n            \"update\": {\n                \"worklog\": [\n                    {\n                        \"add\": {\n                            \"timeSpent\": \"60m\",\n                            \"started\": \"2019-07-05T11:05:00.000+0000\"\n                        }\n                    }\n                ]\n            },\n            \"fields\": {\n                \"summary\": \"Main order flow broken\",\n                \"issuetype\": {\n                    \"id\": \"10000\"\n                },\n                \"components\": [\n                    {\n                        \"id\": \"10000\"\n                    }\n                ],\n                \"customfield_20000\": \"06/Jul/19 3:25 PM\",\n                \"customfield_40000\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Occurs on all orders\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"customfield_70000\": [\n                    \"jira-administrators\",\n                    \"jira-software-users\"\n                ],\n                \"project\": {\n                    \"id\": \"10000\"\n                },\n                \"description\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Order entry fails when selecting supplier.\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"reporter\": {\n                    \"id\": \"5b10a2844c20165700ede21g\"\n                },\n                \"fixVersions\": [\n                    {\n                        \"id\": \"10001\"\n                    }\n                ],\n                \"customfield_10000\": \"09/Jun/19\",\n                \"priority\": {\n                    \"id\": \"20000\"\n                },\n                \"labels\": [\n                    \"bugfix\",\n                    \"blitz_test\"\n                ],\n                \"timetracking\": {\n                    \"remainingEstimate\": \"5\",\n                    \"originalEstimate\": \"10\"\n                },\n                \"customfield_30000\": [\n                    \"10000\",\n                    \"10002\"\n                ],\n                \"customfield_80000\": {\n                    \"value\": \"red\"\n                },\n                \"security\": {\n                    \"id\": \"10000\"\n                },\n                \"environment\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"UAT\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"versions\": [\n                    {\n                        \"id\": \"10000\"\n                    }\n                ],\n                \"duedate\": \"2011-03-11\",\n                \"customfield_60000\": \"jira-software-users\",\n                \"customfield_50000\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Could impact day-to-day work.\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"assignee\": {\n                    \"id\": \"5b109f2e9729b51b54dc274d\"\n                }\n            }\n        },\n        {\n            \"update\": {},\n            \"fields\": {\n                \"summary\": \"Order stuck in pending\",\n                \"issuetype\": {\n                    \"id\": \"10000\"\n                },\n                \"components\": [\n                    {\n                        \"id\": \"10000\"\n                    }\n                ],\n                \"customfield_20000\": \"06/Jul/19 3:25 PM\",\n                \"customfield_40000\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Occurs on all orders\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"customfield_70000\": [\n                    \"jira-administrators\",\n                    \"jira-software-users\"\n                ],\n                \"project\": {\n                    \"id\": \"1000\"\n                },\n                \"description\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Order remains pending after approved.\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"reporter\": {\n                    \"id\": \"5b10a2844c20165700ede21g\"\n                },\n                \"fixVersions\": [\n                    {\n                        \"id\": \"10001\"\n                    }\n                ],\n                \"customfield_10000\": \"09/Jun/19\",\n                \"priority\": {\n                    \"id\": \"20000\"\n                },\n                \"labels\": [\n                    \"new_release\"\n                ],\n                \"timetracking\": {\n                    \"remainingEstimate\": \"5\",\n                    \"originalEstimate\": \"15\"\n                },\n                \"customfield_30000\": [\n                    \"10000\",\n                    \"10002\"\n                ],\n                \"customfield_80000\": {\n                    \"value\": \"red\"\n                },\n                \"security\": {\n                    \"id\": \"10000\"\n                },\n                \"environment\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"UAT\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"versions\": [\n                    {\n                        \"id\": \"10000\"\n                    }\n                ],\n                \"duedate\": \"2019-04-16\",\n                \"customfield_60000\": \"jira-software-users\",\n                \"customfield_50000\": {\n                    \"type\": \"doc\",\n                    \"version\": 1,\n                    \"content\": [\n                        {\n                            \"type\": \"paragraph\",\n                            \"content\": [\n                                {\n                                    \"text\": \"Could impact day-to-day work.\",\n                                    \"type\": \"text\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                \"assignee\": {\n                    \"id\": \"5b109f2e9729b51b54dc274d\"\n                }\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/bulk",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										"bulk"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Create Issue Metadata",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/createmeta?projectIds=<string>&projectKeys=<string>&issuetypeIds=<string>&issuetypeNames=<string>&expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								"createmeta"
							],
							"query": [
								{
									"key": "projectIds",
									"value": "<string>",
									"description": "List of project IDs. This parameter accepts a comma-separated list. Multiple project IDs can also be provided using an ampersand-separated list. For example, `projectIds=10000,10001&projectIds=10020,10021`. This parameter may be provided with `projectKeys`."
								},
								{
									"key": "projectKeys",
									"value": "<string>",
									"description": "List of project keys. This parameter accepts a comma-separated list. Multiple project keys can also be provided using an ampersand-separated list. For example, `projectKeys=proj1,proj2&projectKeys=proj3`. This parameter may be provided with `projectIds`."
								},
								{
									"key": "issuetypeIds",
									"value": "<string>",
									"description": "List of issue type IDs. This parameter accepts a comma-separated list. Multiple issue type IDs can also be provided using an ampersand-separated list. For example, `issuetypeIds=10000,10001&issuetypeIds=10020,10021`. This parameter may be provided with `issuetypeNames`."
								},
								{
									"key": "issuetypeNames",
									"value": "<string>",
									"description": "List of issue type names. This parameter accepts a comma-separated list. Multiple issue type names can also be provided using an ampersand-separated list. For example, `issuetypeNames=name1,name2&issuetypeNames=name3`. This parameter may be provided with `issuetypeIds`."
								},
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information about issue metadata in the response. This parameter accepts `projects.issuetypes.fields`, which returns information about the fields in the issue creation screen for each issue type. Fields hidden from the screen are not returned. Use the information to populate the `fields` and `update` fields in [Create issue](#api-rest-api-3-issue-post) and [Create issues](#api-rest-api-3-issue-bulk-post)."
								}
							]
						},
						"description": "Returns details of projects, issue types within projects, and, when requested, the create screen fields for each issue type for the user. Use the information to populate the requests in [ Create issue](#api-rest-api-3-issue-post) and [Create issues](#api-rest-api-3-issue-bulk-post).\n\nThe request can be restricted to specific projects or issue types using the query parameters. The response will contain information for the valid projects, issue types, or project and issue type combinations requested. Note that invalid project, issue type, or project and issue type combinations do not generate errors.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Create issues* [project permission](https://confluence.atlassian.com/x/yodKLg) in the requested projects."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/createmeta?projectIds=<string>&projectIds=<string>&projectKeys=<string>&projectKeys=<string>&issuetypeIds=<string>&issuetypeIds=<string>&issuetypeNames=<string>&issuetypeNames=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										"createmeta"
									],
									"query": [
										{
											"key": "projectIds",
											"value": "<string>"
										},
										{
											"key": "projectIds",
											"value": "<string>"
										},
										{
											"key": "projectKeys",
											"value": "<string>"
										},
										{
											"key": "projectKeys",
											"value": "<string>"
										},
										{
											"key": "issuetypeIds",
											"value": "<string>"
										},
										{
											"key": "issuetypeIds",
											"value": "<string>"
										},
										{
											"key": "issuetypeNames",
											"value": "<string>"
										},
										{
											"key": "issuetypeNames",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"projects\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/ED\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"ED\\\",\\\"name\\\":\\\"Edison Project\\\",\\\"avatarUrls\\\":{\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000&avatarId=10011\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000&avatarId=10011\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000&avatarId=10011\\\",\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?pid=10000&avatarId=10011\\\"},\\\"issuetypes\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/1\\\",\\\"id\\\":\\\"1\\\",\\\"description\\\":\\\"An error in the code\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/issuetypes/bug.png\\\",\\\"name\\\":\\\"Bug\\\",\\\"subtask\\\":false,\\\"fields\\\":{\\\"issuetype\\\":{\\\"required\\\":true,\\\"name\\\":\\\"Issue Type\\\",\\\"key\\\":\\\"issuetype\\\",\\\"hasDefaultValue\\\":false,\\\"operations\\\":[\\\"set\\\"]}}}]}]}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/createmeta?projectIds=<string>&projectIds=<string>&projectKeys=<string>&projectKeys=<string>&issuetypeIds=<string>&issuetypeIds=<string>&issuetypeNames=<string>&issuetypeNames=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										"createmeta"
									],
									"query": [
										{
											"key": "projectIds",
											"value": "<string>"
										},
										{
											"key": "projectIds",
											"value": "<string>"
										},
										{
											"key": "projectKeys",
											"value": "<string>"
										},
										{
											"key": "projectKeys",
											"value": "<string>"
										},
										{
											"key": "issuetypeIds",
											"value": "<string>"
										},
										{
											"key": "issuetypeIds",
											"value": "<string>"
										},
										{
											"key": "issuetypeNames",
											"value": "<string>"
										},
										{
											"key": "issuetypeNames",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Issue Picker Suggestions",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/picker?query=<string>&currentJQL=<string>&currentIssueKey=<string>&currentProjectId=<string>&showSubTasks=<boolean>&showSubTaskParent=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								"picker"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>",
									"description": "A string to match against text fields in the issue such as title, description, or comments."
								},
								{
									"key": "currentJQL",
									"value": "<string>",
									"description": "A JQL query defining a list of issues to search for the query term. Note that `username` and `userkey` cannot be used as search terms for this parameter, due to privacy reasons. Use `accountId` instead."
								},
								{
									"key": "currentIssueKey",
									"value": "<string>",
									"description": "The key of an issue to exclude from search results. For example, the issue the user is viewing when they perform this query."
								},
								{
									"key": "currentProjectId",
									"value": "<string>",
									"description": "The ID of a project that suggested issues must belong to."
								},
								{
									"key": "showSubTasks",
									"value": "<boolean>",
									"description": "Indicate whether to include subtasks in the suggestions list."
								},
								{
									"key": "showSubTaskParent",
									"value": "<boolean>",
									"description": "When `currentIssueKey` is a subtask, whether to include the parent issue in the suggestions if it matches the query."
								}
							]
						},
						"description": "Returns lists of issues matching a query string. Use this resource to provide auto-completion suggestions when the user is looking for an issue using a word or string.\n\nThis operation returns two lists:\n\n *  `History Search` which includes issues from the user's history of created, edited, or viewed issues that contain the string in the `query` parameter.\n *  `Current Search` which includes issues that match the JQL expression in `currentJQL` and contain the string in the `query` parameter.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/picker?query=query&currentJQL=<string>&currentIssueKey=<string>&currentProjectId=<string>&showSubTasks=<boolean>&showSubTaskParent=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										"picker"
									],
									"query": [
										{
											"key": "query",
											"value": "query"
										},
										{
											"key": "currentJQL",
											"value": "<string>"
										},
										{
											"key": "currentIssueKey",
											"value": "<string>"
										},
										{
											"key": "currentProjectId",
											"value": "<string>"
										},
										{
											"key": "showSubTasks",
											"value": "<boolean>"
										},
										{
											"key": "showSubTaskParent",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sections\": [\n  {\n   \"label\": \"culpa eiusmod Ut aute ullamco\",\n   \"sub\": \"consecte\",\n   \"id\": \"aliqua sed\",\n   \"msg\": \"ea deserunt cillum in proident\",\n   \"issues\": [\n    {\n     \"id\": 81942590,\n     \"key\": \"irure anim\",\n     \"keyHtml\": \"dolor ut ad\",\n     \"img\": \"eiusmod consequat esse id ut\",\n     \"summary\": \"dolor sunt in deserunt eiusmod\",\n     \"summaryText\": \"sunt pariatur nostrud\"\n    },\n    {\n     \"id\": 50966605,\n     \"key\": \"sit\",\n     \"keyHtml\": \"adipisicing aute\",\n     \"img\": \"fugiat minim ex\",\n     \"summary\": \"est mollit tempor sint\",\n     \"summaryText\": \"enim officia\"\n    }\n   ]\n  },\n  {\n   \"label\": \"in elit minim est amet\",\n   \"sub\": \"aliqua consequat ex ipsum\",\n   \"id\": \"amet cillum tempor ipsum\",\n   \"msg\": \"Excepteur laborum\",\n   \"issues\": [\n    {\n     \"id\": -86776450,\n     \"key\": \"et adipisicing qui mollit dolore\",\n     \"keyHtml\": \"minim proident Ut\",\n     \"img\": \"ad occaecat amet\",\n     \"summary\": \"Duis eu co\",\n     \"summaryText\": \"ipsum reprehenderit ut\"\n    },\n    {\n     \"id\": 68276940,\n     \"key\": \"irure Duis\",\n     \"keyHtml\": \"esse incididunt in\",\n     \"img\": \"Lorem laborum ut aute elit\",\n     \"summary\": \"do\",\n     \"summaryText\": \"laborum sit sed consequat n\"\n    }\n   ]\n  }\n ]\n}"
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/picker?query=query&currentJQL=<string>&currentIssueKey=<string>&currentProjectId=<string>&showSubTasks=<boolean>&showSubTaskParent=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										"picker"
									],
									"query": [
										{
											"key": "query",
											"value": "query"
										},
										{
											"key": "currentJQL",
											"value": "<string>"
										},
										{
											"key": "currentIssueKey",
											"value": "<string>"
										},
										{
											"key": "currentProjectId",
											"value": "<string>"
										},
										{
											"key": "showSubTasks",
											"value": "<boolean>"
										},
										{
											"key": "showSubTaskParent",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Issue",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?fields=*all&fieldsByKeys=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								":issueIdOrKey"
							],
							"query": [
								{
									"key": "fields",
									"value": "*all",
									"description": "A list of fields to return for the issue. This parameter accepts a comma-separated list. Use it to retrieve a subset of fields. Allowed values:\n\n *  `*all` Returns all fields.\n *  `*navigable` Returns navigable fields.\n *  Any issue field, prefixed with a minus to exclude.\n\nExamples:\n\n *  `summary,comment` Returns only the summary and comments fields.\n *  `-description` Returns all (default) fields except description.\n *  `*navigable,-comment` Returns all navigable fields except comment.\n\nThis parameter may be specified multiple times. For example, `fields=field1,field2& fields=field3`.\n\nNote: All fields are returned by default. This differs from [Search for issues using JQL (GET)](#api-rest-api-3-search-get) and [Search for issues using JQL (POST)](#api-rest-api-3-search-post) where the default is all navigable fields."
								},
								{
									"key": "fieldsByKeys",
									"value": "false",
									"description": "Whether fields in `fields` are referenced by keys rather than IDs. This parameter is useful where fields have been added by a connect app and a field's key may differ from its ID."
								},
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information about the issues in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `renderedFields` Returns field values rendered in HTML format.\n *  `names` Returns the display name of each field.\n *  `schema` Returns the schema describing a field type.\n *  `transitions` Returns all possible transitions for the issue.\n *  `editmeta` Returns information about how each field can be edited.\n *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.\n *  `versionedRepresentations` Returns a JSON array for each version of a field's value, with the highest number representing the most recent version. Note: When included in the request, the `fields` parameter is ignored.",
									"disabled": true
								},
								{
									"key": "properties",
									"value": "null",
									"description": "A list of issue properties to return for the issue. This parameter accepts a comma-separated list. Allowed values:\n\n *  `*all` Returns all issue properties.\n *  Any issue property key, prefixed with a minus to exclude.\n\nExamples:\n\n *  `*all` Returns all properties.\n *  `*all,-prop1` Returns all properties except `prop1`.\n *  `prop1,prop2` Returns `prop1` and `prop2` properties.\n\nThis parameter may be specified multiple times. For example, `properties=prop1,prop2& properties=prop3`.",
									"disabled": true
								},
								{
									"key": "updateHistory",
									"value": "false",
									"description": "Whether the project in which the issue is created is added to the user's **Recently viewed** project list, as shown under **Projects** in Jira. This also populates the [JQL issues search](#api-rest-api-3-search-get) `lastViewed` field.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "issueIdOrKey",
									"value": "{{jira_issue_key}}",
									"type": "string",
									"description": "(Required) The ID or key of the issue."
								}
							]
						},
						"description": "Returns the details for an issue.\n\nThe issue is identified by its ID or key, however, if the identifier doesn't match an issue, a case-insensitive search and check for moved issues is performed. If a matching issue is found its details are returned, a 302 or other redirect is **not** returned. The issue key returned in the response is the key of the issue found.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?fields=*all&fields=*all&fieldsByKeys=false&expand=<string>&properties=null&properties=null&updateHistory=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey"
									],
									"query": [
										{
											"key": "fields",
											"value": "*all"
										},
										{
											"key": "fields",
											"value": "*all"
										},
										{
											"key": "fieldsByKeys",
											"value": "false"
										},
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "properties",
											"value": "null"
										},
										{
											"key": "properties",
											"value": "null"
										},
										{
											"key": "updateHistory",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?fields=*all&fields=*all&fieldsByKeys=false&expand=<string>&properties=null&properties=null&updateHistory=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey"
									],
									"query": [
										{
											"key": "fields",
											"value": "*all"
										},
										{
											"key": "fields",
											"value": "*all"
										},
										{
											"key": "fieldsByKeys",
											"value": "false"
										},
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "properties",
											"value": "null"
										},
										{
											"key": "properties",
											"value": "null"
										},
										{
											"key": "updateHistory",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"expand\\\":\\\"\\\",\\\"id\\\":\\\"10002\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10002\\\",\\\"key\\\":\\\"ED-1\\\",\\\"fields\\\":{\\\"watcher\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers\\\",\\\"isWatching\\\":false,\\\"watchCount\\\":1,\\\"watchers\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false}]},\\\"attachment\\\":[{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/attachments/10000\\\",\\\"filename\\\":\\\"picture.jpg\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"created\\\":\\\"2020-12-17T01:45:40.239+0000\\\",\\\"size\\\":23123,\\\"mimeType\\\":\\\"image/jpeg\\\",\\\"content\\\":\\\"https://your-domain.atlassian.net/jira/secure/attachments/10000/picture.jpg\\\",\\\"thumbnail\\\":\\\"https://your-domain.atlassian.net/jira/secure/thumbnail/10000/picture.jpg\\\"}],\\\"sub-tasks\\\":[{\\\"id\\\":\\\"10000\\\",\\\"type\\\":{\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"\\\",\\\"inward\\\":\\\"Parent\\\",\\\"outward\\\":\\\"Sub-task\\\"},\\\"outwardIssue\\\":{\\\"id\\\":\\\"10003\\\",\\\"key\\\":\\\"ED-2\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/ED-2\\\",\\\"fields\\\":{\\\"status\\\":{\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/statuses/open.png\\\",\\\"name\\\":\\\"Open\\\"}}}}],\\\"description\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"Main order flow broken\\\"}]}]},\\\"project\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"name\\\":\\\"Example\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}},\\\"comment\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"body\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\\\"}]}]},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"created\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"updated\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"role\\\",\\\"value\\\":\\\"Administrators\\\"}}],\\\"issuelinks\\\":[{\\\"id\\\":\\\"10001\\\",\\\"type\\\":{\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Dependent\\\",\\\"inward\\\":\\\"depends on\\\",\\\"outward\\\":\\\"is depended by\\\"},\\\"outwardIssue\\\":{\\\"id\\\":\\\"10004L\\\",\\\"key\\\":\\\"PR-2\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/PR-2\\\",\\\"fields\\\":{\\\"status\\\":{\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/statuses/open.png\\\",\\\"name\\\":\\\"Open\\\"}}}},{\\\"id\\\":\\\"10002\\\",\\\"type\\\":{\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Dependent\\\",\\\"inward\\\":\\\"depends on\\\",\\\"outward\\\":\\\"is depended by\\\"},\\\"inwardIssue\\\":{\\\"id\\\":\\\"10004\\\",\\\"key\\\":\\\"PR-3\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/PR-3\\\",\\\"fields\\\":{\\\"status\\\":{\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/statuses/open.png\\\",\\\"name\\\":\\\"Open\\\"}}}}],\\\"worklog\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"comment\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"I did some work here.\\\"}]}]},\\\"updated\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"group\\\",\\\"value\\\":\\\"jira-developers\\\"},\\\"started\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"timeSpent\\\":\\\"3h 20m\\\",\\\"timeSpentSeconds\\\":12000,\\\"id\\\":\\\"100028\\\",\\\"issueId\\\":\\\"10002\\\"}],\\\"updated\\\":1,\\\"timetracking\\\":{\\\"originalEstimate\\\":\\\"10m\\\",\\\"remainingEstimate\\\":\\\"3m\\\",\\\"timeSpent\\\":\\\"6m\\\",\\\"originalEstimateSeconds\\\":600,\\\"remainingEstimateSeconds\\\":200,\\\"timeSpentSeconds\\\":400}}}\""
						},
						{
							"name": "Returned if the issue is not found or the user does not have permission to view it.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?fields=*all&fields=*all&fieldsByKeys=false&expand=<string>&properties=null&properties=null&updateHistory=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey"
									],
									"query": [
										{
											"key": "fields",
											"value": "*all"
										},
										{
											"key": "fields",
											"value": "*all"
										},
										{
											"key": "fieldsByKeys",
											"value": "false"
										},
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "properties",
											"value": "null"
										},
										{
											"key": "properties",
											"value": "null"
										},
										{
											"key": "updateHistory",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Edit Issue",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transition\": {\n        \"id\": \"<string>\",\n        \"looped\": \"<boolean>\"\n    },\n    \"fields\": \"<object>\",\n    \"update\": \"<object>\",\n    \"historyMetadata\": {\n        \"type\": \"<string>\",\n        \"description\": \"<string>\",\n        \"descriptionKey\": \"<string>\",\n        \"activityDescription\": \"<string>\",\n        \"activityDescriptionKey\": \"<string>\",\n        \"emailDescription\": \"<string>\",\n        \"emailDescriptionKey\": \"<string>\",\n        \"actor\": {\n            \"id\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"displayNameKey\": \"<string>\",\n            \"type\": \"<string>\",\n            \"avatarUrl\": \"<string>\",\n            \"url\": \"<string>\"\n        },\n        \"generator\": {\n            \"id\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"displayNameKey\": \"<string>\",\n            \"type\": \"<string>\",\n            \"avatarUrl\": \"<string>\",\n            \"url\": \"<string>\"\n        },\n        \"cause\": {\n            \"id\": \"<string>\",\n            \"displayName\": \"<string>\",\n            \"displayNameKey\": \"<string>\",\n            \"type\": \"<string>\",\n            \"avatarUrl\": \"<string>\",\n            \"url\": \"<string>\"\n        },\n        \"extraData\": \"<object>\"\n    },\n    \"properties\": [\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        },\n        {\n            \"key\": \"<string>\",\n            \"value\": {}\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?notifyUsers=true&overrideScreenSecurity=false&overrideEditableFlag=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								":issueIdOrKey"
							],
							"query": [
								{
									"key": "notifyUsers",
									"value": "true",
									"description": "Whether a notification email about the issue update is sent to all watchers. To disable the notification, administer Jira or administer project permissions are required. If the user doesn't have the necessary permission the request is ignored."
								},
								{
									"key": "overrideScreenSecurity",
									"value": "false",
									"description": "Whether screen security should be overridden to enable hidden fields to be edited. Available to Connect app users with admin permissions."
								},
								{
									"key": "overrideEditableFlag",
									"value": "false",
									"description": "Whether screen security should be overridden to enable uneditable fields to be edited. Available to Connect app users with admin permissions."
								}
							],
							"variable": [
								{
									"key": "issueIdOrKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID or key of the issue."
								}
							]
						},
						"description": "Edits an issue. A transition may be applied and issue properties updated as part of the edit.\n\nThe edits to the issue's fields are defined using `update` and `fields`. The fields that can be edited are determined using [ Get edit issue metadata](#api-rest-api-3-issue-issueIdOrKey-editmeta-get).\n\nThe parent field may be set by key or ID. For standard issue types, the parent may be removed by setting `update.parent.set.none` to *true*. Note that the `description`, `environment`, and any `textarea` type custom fields (multi-line text fields) take Atlassian Document Format content. Single line custom fields (`textfield`) accept a string and don't handle Atlassian Document Format content.\n\nConnect app users with admin permissions (from user permissions and app scopes) can override the screen security configuration using `overrideScreenSecurity` and `overrideEditableFlag`.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* and *Edit issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if the user uses `overrideScreenSecurity` or `overrideEditableFlag` but doesn't have the necessary permission.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"historyMetadata\": {\n        \"actor\": {\n            \"avatarUrl\": \"http://mysystem/avatar/tony.jpg\",\n            \"displayName\": \"Tony\",\n            \"id\": \"tony\",\n            \"type\": \"mysystem-user\",\n            \"url\": \"http://mysystem/users/tony\"\n        },\n        \"extraData\": {\n            \"Iteration\": \"10a\",\n            \"Step\": \"4\"\n        },\n        \"description\": \"From the order testing process\",\n        \"generator\": {\n            \"id\": \"mysystem-1\",\n            \"type\": \"mysystem-application\"\n        },\n        \"cause\": {\n            \"id\": \"myevent\",\n            \"type\": \"mysystem-event\"\n        },\n        \"activityDescription\": \"Complete order processing\",\n        \"type\": \"myplugin:type\"\n    },\n    \"update\": {\n        \"summary\": [\n            {\n                \"set\": \"Bug in business logic\"\n            }\n        ],\n        \"components\": [\n            {\n                \"set\": \"\"\n            }\n        ],\n        \"timetracking\": [\n            {\n                \"edit\": {\n                    \"remainingEstimate\": \"4d\",\n                    \"originalEstimate\": \"1w 1d\"\n                }\n            }\n        ],\n        \"labels\": [\n            {\n                \"add\": \"triaged\"\n            },\n            {\n                \"remove\": \"blocker\"\n            }\n        ]\n    },\n    \"fields\": {\n        \"summary\": \"Completed orders still displaying in pending\",\n        \"customfield_10010\": 1,\n        \"customfield_10000\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Investigation underway\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"properties\": [\n        {\n            \"value\": \"Order number 10784\",\n            \"key\": \"key1\"\n        },\n        {\n            \"value\": \"Order number 10923\",\n            \"key\": \"key2\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?notifyUsers=true&overrideScreenSecurity=false&overrideEditableFlag=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey"
									],
									"query": [
										{
											"key": "notifyUsers",
											"value": "true"
										},
										{
											"key": "overrideScreenSecurity",
											"value": "false"
										},
										{
											"key": "overrideEditableFlag",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue is not found or the user does not have permission to view it.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"historyMetadata\": {\n        \"actor\": {\n            \"avatarUrl\": \"http://mysystem/avatar/tony.jpg\",\n            \"displayName\": \"Tony\",\n            \"id\": \"tony\",\n            \"type\": \"mysystem-user\",\n            \"url\": \"http://mysystem/users/tony\"\n        },\n        \"extraData\": {\n            \"Iteration\": \"10a\",\n            \"Step\": \"4\"\n        },\n        \"description\": \"From the order testing process\",\n        \"generator\": {\n            \"id\": \"mysystem-1\",\n            \"type\": \"mysystem-application\"\n        },\n        \"cause\": {\n            \"id\": \"myevent\",\n            \"type\": \"mysystem-event\"\n        },\n        \"activityDescription\": \"Complete order processing\",\n        \"type\": \"myplugin:type\"\n    },\n    \"update\": {\n        \"summary\": [\n            {\n                \"set\": \"Bug in business logic\"\n            }\n        ],\n        \"components\": [\n            {\n                \"set\": \"\"\n            }\n        ],\n        \"timetracking\": [\n            {\n                \"edit\": {\n                    \"remainingEstimate\": \"4d\",\n                    \"originalEstimate\": \"1w 1d\"\n                }\n            }\n        ],\n        \"labels\": [\n            {\n                \"add\": \"triaged\"\n            },\n            {\n                \"remove\": \"blocker\"\n            }\n        ]\n    },\n    \"fields\": {\n        \"summary\": \"Completed orders still displaying in pending\",\n        \"customfield_10010\": 1,\n        \"customfield_10000\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Investigation underway\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"properties\": [\n        {\n            \"value\": \"Order number 10784\",\n            \"key\": \"key1\"\n        },\n        {\n            \"value\": \"Order number 10923\",\n            \"key\": \"key2\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?notifyUsers=true&overrideScreenSecurity=false&overrideEditableFlag=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey"
									],
									"query": [
										{
											"key": "notifyUsers",
											"value": "true"
										},
										{
											"key": "overrideScreenSecurity",
											"value": "false"
										},
										{
											"key": "overrideEditableFlag",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"historyMetadata\": {\n        \"actor\": {\n            \"avatarUrl\": \"http://mysystem/avatar/tony.jpg\",\n            \"displayName\": \"Tony\",\n            \"id\": \"tony\",\n            \"type\": \"mysystem-user\",\n            \"url\": \"http://mysystem/users/tony\"\n        },\n        \"extraData\": {\n            \"Iteration\": \"10a\",\n            \"Step\": \"4\"\n        },\n        \"description\": \"From the order testing process\",\n        \"generator\": {\n            \"id\": \"mysystem-1\",\n            \"type\": \"mysystem-application\"\n        },\n        \"cause\": {\n            \"id\": \"myevent\",\n            \"type\": \"mysystem-event\"\n        },\n        \"activityDescription\": \"Complete order processing\",\n        \"type\": \"myplugin:type\"\n    },\n    \"update\": {\n        \"summary\": [\n            {\n                \"set\": \"Bug in business logic\"\n            }\n        ],\n        \"components\": [\n            {\n                \"set\": \"\"\n            }\n        ],\n        \"timetracking\": [\n            {\n                \"edit\": {\n                    \"remainingEstimate\": \"4d\",\n                    \"originalEstimate\": \"1w 1d\"\n                }\n            }\n        ],\n        \"labels\": [\n            {\n                \"add\": \"triaged\"\n            },\n            {\n                \"remove\": \"blocker\"\n            }\n        ]\n    },\n    \"fields\": {\n        \"summary\": \"Completed orders still displaying in pending\",\n        \"customfield_10010\": 1,\n        \"customfield_10000\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Investigation underway\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"properties\": [\n        {\n            \"value\": \"Order number 10784\",\n            \"key\": \"key1\"\n        },\n        {\n            \"value\": \"Order number 10923\",\n            \"key\": \"key2\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?notifyUsers=true&overrideScreenSecurity=false&overrideEditableFlag=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey"
									],
									"query": [
										{
											"key": "notifyUsers",
											"value": "true"
										},
										{
											"key": "overrideScreenSecurity",
											"value": "false"
										},
										{
											"key": "overrideEditableFlag",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if:\n\n *  the request body is missing.\n *  the user does not have the necessary permission to edit one or more fields.\n *  the request includes one or more fields that are not found or are not associated with the issue's edit screen.\n *  the reque",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"historyMetadata\": {\n        \"actor\": {\n            \"avatarUrl\": \"http://mysystem/avatar/tony.jpg\",\n            \"displayName\": \"Tony\",\n            \"id\": \"tony\",\n            \"type\": \"mysystem-user\",\n            \"url\": \"http://mysystem/users/tony\"\n        },\n        \"extraData\": {\n            \"Iteration\": \"10a\",\n            \"Step\": \"4\"\n        },\n        \"description\": \"From the order testing process\",\n        \"generator\": {\n            \"id\": \"mysystem-1\",\n            \"type\": \"mysystem-application\"\n        },\n        \"cause\": {\n            \"id\": \"myevent\",\n            \"type\": \"mysystem-event\"\n        },\n        \"activityDescription\": \"Complete order processing\",\n        \"type\": \"myplugin:type\"\n    },\n    \"update\": {\n        \"summary\": [\n            {\n                \"set\": \"Bug in business logic\"\n            }\n        ],\n        \"components\": [\n            {\n                \"set\": \"\"\n            }\n        ],\n        \"timetracking\": [\n            {\n                \"edit\": {\n                    \"remainingEstimate\": \"4d\",\n                    \"originalEstimate\": \"1w 1d\"\n                }\n            }\n        ],\n        \"labels\": [\n            {\n                \"add\": \"triaged\"\n            },\n            {\n                \"remove\": \"blocker\"\n            }\n        ]\n    },\n    \"fields\": {\n        \"summary\": \"Completed orders still displaying in pending\",\n        \"customfield_10010\": 1,\n        \"customfield_10000\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Investigation underway\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"properties\": [\n        {\n            \"value\": \"Order number 10784\",\n            \"key\": \"key1\"\n        },\n        {\n            \"value\": \"Order number 10923\",\n            \"key\": \"key2\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?notifyUsers=true&overrideScreenSecurity=false&overrideEditableFlag=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey"
									],
									"query": [
										{
											"key": "notifyUsers",
											"value": "true"
										},
										{
											"key": "overrideScreenSecurity",
											"value": "false"
										},
										{
											"key": "overrideEditableFlag",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"historyMetadata\": {\n        \"actor\": {\n            \"avatarUrl\": \"http://mysystem/avatar/tony.jpg\",\n            \"displayName\": \"Tony\",\n            \"id\": \"tony\",\n            \"type\": \"mysystem-user\",\n            \"url\": \"http://mysystem/users/tony\"\n        },\n        \"extraData\": {\n            \"Iteration\": \"10a\",\n            \"Step\": \"4\"\n        },\n        \"description\": \"From the order testing process\",\n        \"generator\": {\n            \"id\": \"mysystem-1\",\n            \"type\": \"mysystem-application\"\n        },\n        \"cause\": {\n            \"id\": \"myevent\",\n            \"type\": \"mysystem-event\"\n        },\n        \"activityDescription\": \"Complete order processing\",\n        \"type\": \"myplugin:type\"\n    },\n    \"update\": {\n        \"summary\": [\n            {\n                \"set\": \"Bug in business logic\"\n            }\n        ],\n        \"components\": [\n            {\n                \"set\": \"\"\n            }\n        ],\n        \"timetracking\": [\n            {\n                \"edit\": {\n                    \"remainingEstimate\": \"4d\",\n                    \"originalEstimate\": \"1w 1d\"\n                }\n            }\n        ],\n        \"labels\": [\n            {\n                \"add\": \"triaged\"\n            },\n            {\n                \"remove\": \"blocker\"\n            }\n        ]\n    },\n    \"fields\": {\n        \"summary\": \"Completed orders still displaying in pending\",\n        \"customfield_10010\": 1,\n        \"customfield_10000\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Investigation underway\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"properties\": [\n        {\n            \"value\": \"Order number 10784\",\n            \"key\": \"key1\"\n        },\n        {\n            \"value\": \"Order number 10923\",\n            \"key\": \"key2\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?notifyUsers=true&overrideScreenSecurity=false&overrideEditableFlag=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey"
									],
									"query": [
										{
											"key": "notifyUsers",
											"value": "true"
										},
										{
											"key": "overrideScreenSecurity",
											"value": "false"
										},
										{
											"key": "overrideEditableFlag",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Issue",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?deleteSubtasks=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								":issueIdOrKey"
							],
							"query": [
								{
									"key": "deleteSubtasks",
									"value": "false",
									"description": "Whether the issue's subtasks are deleted when the issue is deleted."
								}
							],
							"variable": [
								{
									"key": "issueIdOrKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID or key of the issue."
								}
							]
						},
						"description": "Deletes an issue.\n\nAn issue cannot be deleted if it has one or more subtasks. To delete an issue with subtasks, set `deleteSubtasks`. This causes the issue's subtasks to be deleted with the issue.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* and *Delete issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if the issue has subtasks and `deleteSubtasks` is not set to *true*.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?deleteSubtasks=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey"
									],
									"query": [
										{
											"key": "deleteSubtasks",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?deleteSubtasks=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey"
									],
									"query": [
										{
											"key": "deleteSubtasks",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?deleteSubtasks=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey"
									],
									"query": [
										{
											"key": "deleteSubtasks",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue is not found or the user does not have permission to view the issue.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?deleteSubtasks=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey"
									],
									"query": [
										{
											"key": "deleteSubtasks",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have permission to delete the issue.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey?deleteSubtasks=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey"
									],
									"query": [
										{
											"key": "deleteSubtasks",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Assign Issue",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"<string>\",\n    \"accountId\": \"<string>\",\n    \"name\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/assignee",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								":issueIdOrKey",
								"assignee"
							],
							"variable": [
								{
									"key": "issueIdOrKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID or key of the issue to be assigned."
								}
							]
						},
						"description": "Assigns an issue to a user. Use this operation when the calling user does not have the *Edit Issues* permission but has the *Assign issue* permission for the project that the issue is in.\n\nIf `name` or `accountId` is set to:\n\n *  `\"-1\"`, the issue is assigned to the default assignee for the project.\n *  `null`, the issue is set to unassigned.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse Projects* and *Assign Issues* [ project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountId\": \"5b10ac8d82e05b22cc7d4ef5\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/assignee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"assignee"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountId\": \"5b10ac8d82e05b22cc7d4ef5\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/assignee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"assignee"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if:\n\n *  the user is not found.\n *  `name`, `key`, or `accountId` is missing.\n *  more than one of `name`, `key`, and `accountId` are provided.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountId\": \"5b10ac8d82e05b22cc7d4ef5\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/assignee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"assignee"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue is not found.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountId\": \"5b10ac8d82e05b22cc7d4ef5\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/assignee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"assignee"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add Attachment",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "0",
									"value": "<",
									"description": "undefined",
									"type": "text"
								},
								{
									"key": "1",
									"value": "b",
									"description": "undefined",
									"type": "text"
								},
								{
									"key": "2",
									"value": "i",
									"description": "undefined",
									"type": "text"
								},
								{
									"key": "3",
									"value": "n",
									"description": "undefined",
									"type": "text"
								},
								{
									"key": "4",
									"value": "a",
									"description": "undefined",
									"type": "text"
								},
								{
									"key": "5",
									"value": "r",
									"description": "undefined",
									"type": "text"
								},
								{
									"key": "6",
									"value": "y",
									"description": "undefined",
									"type": "text"
								},
								{
									"key": "7",
									"value": ">",
									"description": "undefined",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								":issueIdOrKey",
								"attachments"
							],
							"variable": [
								{
									"key": "issueIdOrKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID or key of the issue that attachments are added to."
								}
							]
						},
						"description": "Adds one or more attachments to an issue. Attachments are posted as multipart/form-data ([RFC 1867](https://www.ietf.org/rfc/rfc1867.txt)).\n\nNote that:\n\n *  The request must have a `X-Atlassian-Token: no-check` header, if not it is blocked. See [Special headers](#special-request-headers) for more information.\n *  The name of the multipart/form-data parameter that contains the attachments must be `file`.\n\nThe following example uploads a file called *myfile.txt* to the issue *TEST-123*:\n\n`curl -D- -u admin:admin -X POST -H \"X-Atlassian-Token: no-check\" -F \"file=@myfile.txt\" https://your-domain.atlassian.net/rest/api/3/issue/TEST-123/attachments`\n\nTip: Use a client library. Many client libraries have classes for handling multipart POST operations. For example, in Java, the Apache HTTP Components library provides a [MultiPartEntity](http://hc.apache.org/httpcomponents-client-ga/httpmime/apidocs/org/apache/http/entity/mime/MultipartEntity.html) class for multipart POST operations.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** \n\n *  *Browse Projects* and *Create attachments* [ project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "0",
											"value": "<",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "1",
											"value": "b",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "2",
											"value": "i",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "3",
											"value": "n",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "4",
											"value": "a",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "5",
											"value": "r",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "6",
											"value": "y",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "7",
											"value": ">",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"attachments"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/attachments/10000\\\",\\\"id\\\":\\\"10001\\\",\\\"filename\\\":\\\"picture.jpg\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\"},\\\"created\\\":\\\"2020-12-17T01:45:44.477+0000\\\",\\\"size\\\":23123,\\\"mimeType\\\":\\\"image/jpeg\\\",\\\"content\\\":\\\"https://your-domain.atlassian.net/secure/attachments/10000/picture.jpg\\\",\\\"thumbnail\\\":\\\"https://your-domain.atlassian.net/secure/thumbnail/10000/picture.jpg\\\"},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/attachments/10001\\\",\\\"filename\\\":\\\"dbeuglog.txt\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\"},\\\"created\\\":\\\"2020-12-17T01:45:44.477+0000\\\",\\\"size\\\":2460,\\\"mimeType\\\":\\\"text/plain\\\",\\\"content\\\":\\\"https://your-domain.atlassian.net/secure/attachments/10001/dbeuglog.txt\\\"}]\""
						},
						{
							"name": "Returned if any of the following is true:\n\n *  the issue is not found.\n *  the user does not have permission to view the issue.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "0",
											"value": "<",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "1",
											"value": "b",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "2",
											"value": "i",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "3",
											"value": "n",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "4",
											"value": "a",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "5",
											"value": "r",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "6",
											"value": "y",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "7",
											"value": ">",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"attachments"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The attachments exceed the maximum attachment size for issues. See [Configuring file attachments](https://confluence.atlassian.com/x/wIXKM) for details.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "0",
											"value": "<",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "1",
											"value": "b",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "2",
											"value": "i",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "3",
											"value": "n",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "4",
											"value": "a",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "5",
											"value": "r",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "6",
											"value": "y",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "7",
											"value": ">",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"attachments"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Request Entity Too Large",
							"code": 413,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "0",
											"value": "<",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "1",
											"value": "b",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "2",
											"value": "i",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "3",
											"value": "n",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "4",
											"value": "a",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "5",
											"value": "r",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "6",
											"value": "y",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "7",
											"value": ">",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"attachments"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Edit Issue Metadata",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/editmeta?overrideScreenSecurity=false&overrideEditableFlag=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								":issueIdOrKey",
								"editmeta"
							],
							"query": [
								{
									"key": "overrideScreenSecurity",
									"value": "false",
									"description": "Whether hidden fields should be returned. Available to connect app users with admin permissions."
								},
								{
									"key": "overrideEditableFlag",
									"value": "false",
									"description": "Whether non-editable fields should be returned. Available to connect app users with admin permissions."
								}
							],
							"variable": [
								{
									"key": "issueIdOrKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID or key of the issue."
								}
							]
						},
						"description": "Returns the edit screen fields for an issue that are visible to and editable by the user. Use the information to populate the requests in [Edit issue](#api-rest-api-3-issue-issueIdOrKey-put).\n\nConnect app users with admin permissions (from user permissions and app scopes) can return additional details using:\n\n *  `overrideScreenSecurity` Returns hidden fields.\n *  `overrideEditableFlag` Returns uneditable fields. For example, where an issue has a workflow status of closed none of its fields are editable.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n\nNote: For any fields to be editable the user must have the *Edit issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the issue."
					},
					"response": [
						{
							"name": "Returned if the issue is not found or the user does not have permission to view it.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/editmeta?overrideScreenSecurity=false&overrideEditableFlag=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"editmeta"
									],
									"query": [
										{
											"key": "overrideScreenSecurity",
											"value": "false"
										},
										{
											"key": "overrideEditableFlag",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/editmeta?overrideScreenSecurity=false&overrideEditableFlag=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"editmeta"
									],
									"query": [
										{
											"key": "overrideScreenSecurity",
											"value": "false"
										},
										{
											"key": "overrideEditableFlag",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"fields\\\":{\\\"summary\\\":{\\\"required\\\":false,\\\"schema\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":\\\"option\\\",\\\"custom\\\":\\\"com.atlassian.jira.plugin.system.customfieldtypes:multiselect\\\",\\\"customId\\\":10001},\\\"name\\\":\\\"My Multi Select\\\",\\\"key\\\":\\\"field_key\\\",\\\"hasDefaultValue\\\":false,\\\"operations\\\":[\\\"set\\\",\\\"add\\\"],\\\"allowedValues\\\":[\\\"red\\\",\\\"blue\\\"],\\\"defaultValue\\\":\\\"red\\\"}}}\""
						},
						{
							"name": "Returned if the user uses an override parameter but doesn't have permission to do so.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/editmeta?overrideScreenSecurity=false&overrideEditableFlag=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"editmeta"
									],
									"query": [
										{
											"key": "overrideScreenSecurity",
											"value": "false"
										},
										{
											"key": "overrideEditableFlag",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/editmeta?overrideScreenSecurity=false&overrideEditableFlag=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"editmeta"
									],
									"query": [
										{
											"key": "overrideScreenSecurity",
											"value": "false"
										},
										{
											"key": "overrideEditableFlag",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Send Notification For Issue",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"subject\": \"<string>\",\n    \"textBody\": \"<string>\",\n    \"htmlBody\": \"<string>\",\n    \"to\": {\n        \"reporter\": \"<boolean>\",\n        \"assignee\": \"<boolean>\",\n        \"watchers\": \"<boolean>\",\n        \"voters\": \"<boolean>\",\n        \"users\": [\n            {\n                \"self\": \"dolor dolore\",\n                \"name\": \"quis officia et ullamco\",\n                \"key\": \"pariatur\",\n                \"accountId\": \"s\",\n                \"emailAddress\": \"commodo reprehenderit dolore nisi officia\",\n                \"avatarUrls\": {\n                    \"16x16\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"24x24\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"32x32\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"48x48\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"displayName\": \"veniam dolor id Excepteur\",\n                \"active\": false,\n                \"timeZone\": \"dolor cillum amet\",\n                \"accountType\": \"sint ut\"\n            },\n            {\n                \"self\": \"nostrud cillum labore\",\n                \"name\": \"minim dolor Duis\",\n                \"key\": \"ad aliquip deserunt Excepteur cupidatat\",\n                \"accountId\": \"qu\",\n                \"emailAddress\": \"ipsum nisi\",\n                \"avatarUrls\": {\n                    \"16x16\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"24x24\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"32x32\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    },\n                    \"48x48\": {\n                        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                    }\n                },\n                \"displayName\": \"nostrud dolore\",\n                \"active\": true,\n                \"timeZone\": \"proident\",\n                \"accountType\": \"veniam occaecat ex aliqua\"\n            }\n        ],\n        \"groups\": [\n            {\n                \"name\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\"\n            }\n        ]\n    },\n    \"restrict\": {\n        \"groups\": [\n            {\n                \"name\": \"<string>\"\n            },\n            {\n                \"name\": \"<string>\"\n            }\n        ],\n        \"permissions\": [\n            {\n                \"id\": \"<string>\",\n                \"key\": \"<string>\"\n            },\n            {\n                \"id\": \"<string>\",\n                \"key\": \"<string>\"\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/notify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								":issueIdOrKey",
								"notify"
							],
							"variable": [
								{
									"key": "issueIdOrKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) ID or key of the issue that the notification is sent for."
								}
							]
						},
						"description": "Creates an email notification for an issue and adds it to the mail queue.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if the email is queued for sending.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"htmlBody\": \"The <strong>latest</strong> test results for this ticket are now available.\",\n    \"subject\": \"Latest test results\",\n    \"textBody\": \"The latest test results for this ticket are now available.\",\n    \"to\": {\n        \"voters\": true,\n        \"watchers\": true,\n        \"groups\": [\n            {\n                \"name\": \"notification-group\"\n            }\n        ],\n        \"reporter\": false,\n        \"assignee\": false,\n        \"users\": [\n            {\n                \"accountId\": \"5b10a2844c20165700ede21g\",\n                \"active\": false\n            }\n        ]\n    },\n    \"restrict\": {\n        \"permissions\": [\n            {\n                \"key\": \"BROWSE\"\n            }\n        ],\n        \"groups\": [\n            {\n                \"name\": \"notification-group\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/notify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"notify"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if:\n\n *  outgoing emails are disabled.\n *  no SMTP server is configured.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"htmlBody\": \"The <strong>latest</strong> test results for this ticket are now available.\",\n    \"subject\": \"Latest test results\",\n    \"textBody\": \"The latest test results for this ticket are now available.\",\n    \"to\": {\n        \"voters\": true,\n        \"watchers\": true,\n        \"groups\": [\n            {\n                \"name\": \"notification-group\"\n            }\n        ],\n        \"reporter\": false,\n        \"assignee\": false,\n        \"users\": [\n            {\n                \"accountId\": \"5b10a2844c20165700ede21g\",\n                \"active\": false\n            }\n        ]\n    },\n    \"restrict\": {\n        \"permissions\": [\n            {\n                \"key\": \"BROWSE\"\n            }\n        ],\n        \"groups\": [\n            {\n                \"name\": \"notification-group\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/notify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"notify"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue is not found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"htmlBody\": \"The <strong>latest</strong> test results for this ticket are now available.\",\n    \"subject\": \"Latest test results\",\n    \"textBody\": \"The latest test results for this ticket are now available.\",\n    \"to\": {\n        \"voters\": true,\n        \"watchers\": true,\n        \"groups\": [\n            {\n                \"name\": \"notification-group\"\n            }\n        ],\n        \"reporter\": false,\n        \"assignee\": false,\n        \"users\": [\n            {\n                \"accountId\": \"5b10a2844c20165700ede21g\",\n                \"active\": false\n            }\n        ]\n    },\n    \"restrict\": {\n        \"permissions\": [\n            {\n                \"key\": \"BROWSE\"\n            }\n        ],\n        \"groups\": [\n            {\n                \"name\": \"notification-group\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/notify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"notify"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  the recipient is the same as the calling user.\n *  the recipient is invalid. For example, the recipient is set to the assignee, but the issue is unassigned.\n *  the request is invalid. For example, required fields are missing or have inv",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"htmlBody\": \"The <strong>latest</strong> test results for this ticket are now available.\",\n    \"subject\": \"Latest test results\",\n    \"textBody\": \"The latest test results for this ticket are now available.\",\n    \"to\": {\n        \"voters\": true,\n        \"watchers\": true,\n        \"groups\": [\n            {\n                \"name\": \"notification-group\"\n            }\n        ],\n        \"reporter\": false,\n        \"assignee\": false,\n        \"users\": [\n            {\n                \"accountId\": \"5b10a2844c20165700ede21g\",\n                \"active\": false\n            }\n        ]\n    },\n    \"restrict\": {\n        \"permissions\": [\n            {\n                \"key\": \"BROWSE\"\n            }\n        ],\n        \"groups\": [\n            {\n                \"name\": \"notification-group\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/notify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"notify"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Remote Link",
			"item": [
				{
					"name": "Link Id}",
					"item": [
						{
							"name": "Get Remote Issue Link By Id",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink",
										":linkId"
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										},
										{
											"key": "linkId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the remote issue link."
										}
									]
								},
								"description": "Returns a remote issue link for an issue.\n\nThis operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if issue linking is disabled.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10000\\\",\\\"globalId\\\":\\\"system=http://www.mycompany.com/support&id=1\\\",\\\"application\\\":{\\\"type\\\":\\\"com.acme.tracker\\\",\\\"name\\\":\\\"My Acme Tracker\\\"},\\\"relationship\\\":\\\"causes\\\",\\\"object\\\":{\\\"url\\\":\\\"http://www.mycompany.com/support?id=1\\\",\\\"title\\\":\\\"TSTSUP-111\\\",\\\"summary\\\":\\\"Customer support issue\\\",\\\"icon\\\":{\\\"url16x16\\\":\\\"http://www.mycompany.com/support/ticket.png\\\",\\\"title\\\":\\\"Support Ticket\\\"},\\\"status\\\":{\\\"resolved\\\":true,\\\"icon\\\":{\\\"url16x16\\\":\\\"http://www.mycompany.com/support/resolved.png\\\",\\\"title\\\":\\\"Case Closed\\\",\\\"link\\\":\\\"http://www.mycompany.com/support?id=1&details=closed\\\"}}}}\""
								},
								{
									"name": "Returned if the link ID is invalid or the remote issue link does not belong to the issue.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Remote Issue Link By Id",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"object\": {\n        \"title\": \"<string>\",\n        \"url\": \"<string>\",\n        \"summary\": \"<string>\",\n        \"icon\": {\n            \"url16x16\": \"<string>\",\n            \"title\": \"<string>\",\n            \"link\": \"<string>\"\n        },\n        \"status\": {\n            \"resolved\": \"<boolean>\",\n            \"icon\": {\n                \"url16x16\": \"<string>\",\n                \"title\": \"<string>\",\n                \"link\": \"<string>\"\n            }\n        }\n    },\n    \"globalId\": \"<string>\",\n    \"application\": {\n        \"type\": \"<string>\",\n        \"name\": \"<string>\"\n    },\n    \"relationship\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink",
										":linkId"
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										},
										{
											"key": "linkId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the remote issue link."
										}
									]
								},
								"description": "Updates a remote issue link for an issue.\n\nNote: Fields without values in the request are set to null.\n\nThis operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
							},
							"response": [
								{
									"name": "Returned if:\n\n *  the link ID is invalid.\n *  the remote issue link does not belong to the issue.\n *  the request body is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"application\": {\n        \"name\": \"My Acme Tracker\",\n        \"type\": \"com.acme.tracker\"\n    },\n    \"globalId\": \"system=http://www.mycompany.com/support&id=1\",\n    \"relationship\": \"causes\",\n    \"object\": {\n        \"summary\": \"Customer support issue\",\n        \"icon\": {\n            \"url16x16\": \"http://www.mycompany.com/support/ticket.png\",\n            \"title\": \"Support Ticket\"\n        },\n        \"title\": \"TSTSUP-111\",\n        \"url\": \"http://www.mycompany.com/support?id=1\",\n        \"status\": {\n            \"icon\": {\n                \"url16x16\": \"http://www.mycompany.com/support/resolved.png\",\n                \"link\": \"http://www.mycompany.com/support?id=1&details=closed\",\n                \"title\": \"Case Closed\"\n            },\n            \"resolved\": true\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[],\\\"errors\\\":{\\\"title\\\":\\\"'title' is required.\\\"}}\""
								},
								{
									"name": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"application\": {\n        \"name\": \"My Acme Tracker\",\n        \"type\": \"com.acme.tracker\"\n    },\n    \"globalId\": \"system=http://www.mycompany.com/support&id=1\",\n    \"relationship\": \"causes\",\n    \"object\": {\n        \"summary\": \"Customer support issue\",\n        \"icon\": {\n            \"url16x16\": \"http://www.mycompany.com/support/ticket.png\",\n            \"title\": \"Support Ticket\"\n        },\n        \"title\": \"TSTSUP-111\",\n        \"url\": \"http://www.mycompany.com/support?id=1\",\n        \"status\": {\n            \"icon\": {\n                \"url16x16\": \"http://www.mycompany.com/support/resolved.png\",\n                \"link\": \"http://www.mycompany.com/support?id=1&details=closed\",\n                \"title\": \"Case Closed\"\n            },\n            \"resolved\": true\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"application\": {\n        \"name\": \"My Acme Tracker\",\n        \"type\": \"com.acme.tracker\"\n    },\n    \"globalId\": \"system=http://www.mycompany.com/support&id=1\",\n    \"relationship\": \"causes\",\n    \"object\": {\n        \"summary\": \"Customer support issue\",\n        \"icon\": {\n            \"url16x16\": \"http://www.mycompany.com/support/ticket.png\",\n            \"title\": \"Support Ticket\"\n        },\n        \"title\": \"TSTSUP-111\",\n        \"url\": \"http://www.mycompany.com/support?id=1\",\n        \"status\": {\n            \"icon\": {\n                \"url16x16\": \"http://www.mycompany.com/support/resolved.png\",\n                \"link\": \"http://www.mycompany.com/support?id=1&details=closed\",\n                \"title\": \"Case Closed\"\n            },\n            \"resolved\": true\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"application\": {\n        \"name\": \"My Acme Tracker\",\n        \"type\": \"com.acme.tracker\"\n    },\n    \"globalId\": \"system=http://www.mycompany.com/support&id=1\",\n    \"relationship\": \"causes\",\n    \"object\": {\n        \"summary\": \"Customer support issue\",\n        \"icon\": {\n            \"url16x16\": \"http://www.mycompany.com/support/ticket.png\",\n            \"title\": \"Support Ticket\"\n        },\n        \"title\": \"TSTSUP-111\",\n        \"url\": \"http://www.mycompany.com/support?id=1\",\n        \"status\": {\n            \"icon\": {\n                \"url16x16\": \"http://www.mycompany.com/support/resolved.png\",\n                \"link\": \"http://www.mycompany.com/support?id=1&details=closed\",\n                \"title\": \"Case Closed\"\n            },\n            \"resolved\": true\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if the user does not have permission to link issues.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"application\": {\n        \"name\": \"My Acme Tracker\",\n        \"type\": \"com.acme.tracker\"\n    },\n    \"globalId\": \"system=http://www.mycompany.com/support&id=1\",\n    \"relationship\": \"causes\",\n    \"object\": {\n        \"summary\": \"Customer support issue\",\n        \"icon\": {\n            \"url16x16\": \"http://www.mycompany.com/support/ticket.png\",\n            \"title\": \"Support Ticket\"\n        },\n        \"title\": \"TSTSUP-111\",\n        \"url\": \"http://www.mycompany.com/support?id=1\",\n        \"status\": {\n            \"icon\": {\n                \"url16x16\": \"http://www.mycompany.com/support/resolved.png\",\n                \"link\": \"http://www.mycompany.com/support?id=1&details=closed\",\n                \"title\": \"Case Closed\"\n            },\n            \"resolved\": true\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Remote Issue Link By Id",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink",
										":linkId"
									],
									"variable": [
										{
											"key": "issueIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or key of the issue."
										},
										{
											"key": "linkId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of a remote issue link."
										}
									]
								},
								"description": "Deletes a remote issue link from an issue.\n\nThis operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects*, *Edit issues*, and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
							},
							"response": [
								{
									"name": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the link ID is invalid or the remote issue link does not belong to the issue.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have permission to link issues.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issue",
												":issueIdOrKey",
												"remotelink",
												":linkId"
											],
											"variable": [
												{
													"key": "issueIdOrKey"
												},
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Remote Issue Links",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink?globalId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								":issueIdOrKey",
								"remotelink"
							],
							"query": [
								{
									"key": "globalId",
									"value": "<string>",
									"description": "The global ID of the remote issue link."
								}
							],
							"variable": [
								{
									"key": "issueIdOrKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID or key of the issue."
								}
							]
						},
						"description": "Returns the remote issue links for an issue. When a remote issue link global ID is provided the record with that global ID is returned, otherwise all remote issue links are returned. Where a global ID includes reserved URL characters these must be escaped in the request. For example, pass `system=http://www.mycompany.com/support&id=1` as `system%3Dhttp%3A%2F%2Fwww.mycompany.com%2Fsupport%26id%3D1`.\n\nThis operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if issue linking is disabled.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink?globalId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"query": [
										{
											"key": "globalId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink?globalId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"query": [
										{
											"key": "globalId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink?globalId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"query": [
										{
											"key": "globalId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink?globalId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"query": [
										{
											"key": "globalId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10000\\\",\\\"globalId\\\":\\\"system=http://www.mycompany.com/support&id=1\\\",\\\"application\\\":{\\\"type\\\":\\\"com.acme.tracker\\\",\\\"name\\\":\\\"My Acme Tracker\\\"},\\\"relationship\\\":\\\"causes\\\",\\\"object\\\":{\\\"url\\\":\\\"http://www.mycompany.com/support?id=1\\\",\\\"title\\\":\\\"TSTSUP-111\\\",\\\"summary\\\":\\\"Customer support issue\\\",\\\"icon\\\":{\\\"url16x16\\\":\\\"http://www.mycompany.com/support/ticket.png\\\",\\\"title\\\":\\\"Support Ticket\\\"},\\\"status\\\":{\\\"resolved\\\":true,\\\"icon\\\":{\\\"url16x16\\\":\\\"http://www.mycompany.com/support/resolved.png\\\",\\\"title\\\":\\\"Case Closed\\\",\\\"link\\\":\\\"http://www.mycompany.com/support?id=1&details=closed\\\"}}}},{\\\"id\\\":10001,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10001\\\",\\\"globalId\\\":\\\"system=http://www.anothercompany.com/tester&id=1234\\\",\\\"application\\\":{\\\"type\\\":\\\"com.acme.tester\\\",\\\"name\\\":\\\"My Acme Tester\\\"},\\\"relationship\\\":\\\"is tested by\\\",\\\"object\\\":{\\\"url\\\":\\\"http://www.anothercompany.com/tester/testcase/1234\\\",\\\"title\\\":\\\"Test Case #1234\\\",\\\"summary\\\":\\\"Test that the submit button saves the item\\\",\\\"icon\\\":{\\\"url16x16\\\":\\\"http://www.anothercompany.com/tester/images/testcase.gif\\\",\\\"title\\\":\\\"Test Case\\\"},\\\"status\\\":{\\\"resolved\\\":false,\\\"icon\\\":{\\\"url16x16\\\":\\\"http://www.anothercompany.com/tester/images/person/mia.gif\\\",\\\"title\\\":\\\"Tested by Mia Krystof\\\",\\\"link\\\":\\\"http://www.anothercompany.com/tester/person?accountId=5b10a2844c20165700ede21g\\\"}}}}]\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink?globalId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"query": [
										{
											"key": "globalId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Or Update Remote Issue Link",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"object\": {\n        \"title\": \"<string>\",\n        \"url\": \"<string>\",\n        \"summary\": \"<string>\",\n        \"icon\": {\n            \"url16x16\": \"<string>\",\n            \"title\": \"<string>\",\n            \"link\": \"<string>\"\n        },\n        \"status\": {\n            \"resolved\": \"<boolean>\",\n            \"icon\": {\n                \"url16x16\": \"<string>\",\n                \"title\": \"<string>\",\n                \"link\": \"<string>\"\n            }\n        }\n    },\n    \"globalId\": \"<string>\",\n    \"application\": {\n        \"type\": \"<string>\",\n        \"name\": \"<string>\"\n    },\n    \"relationship\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								":issueIdOrKey",
								"remotelink"
							],
							"variable": [
								{
									"key": "issueIdOrKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID or key of the issue."
								}
							]
						},
						"description": "Creates or updates a remote issue link for an issue.\n\nIf a `globalId` is provided and a remote issue link with that global ID is found it is updated. Any fields without values in the request are set to null. Otherwise, the remote issue link is created.\n\nThis operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if the issue is not found or the user does not have permission to view the issue.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"application\": {\n        \"name\": \"My Acme Tracker\",\n        \"type\": \"com.acme.tracker\"\n    },\n    \"globalId\": \"system=http://www.mycompany.com/support&id=1\",\n    \"relationship\": \"causes\",\n    \"object\": {\n        \"summary\": \"Customer support issue\",\n        \"icon\": {\n            \"url16x16\": \"http://www.mycompany.com/support/ticket.png\",\n            \"title\": \"Support Ticket\"\n        },\n        \"title\": \"TSTSUP-111\",\n        \"url\": \"http://www.mycompany.com/support?id=1\",\n        \"status\": {\n            \"icon\": {\n                \"url16x16\": \"http://www.mycompany.com/support/resolved.png\",\n                \"link\": \"http://www.mycompany.com/support?id=1&details=closed\",\n                \"title\": \"Case Closed\"\n            },\n            \"resolved\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"application\": {\n        \"name\": \"My Acme Tracker\",\n        \"type\": \"com.acme.tracker\"\n    },\n    \"globalId\": \"system=http://www.mycompany.com/support&id=1\",\n    \"relationship\": \"causes\",\n    \"object\": {\n        \"summary\": \"Customer support issue\",\n        \"icon\": {\n            \"url16x16\": \"http://www.mycompany.com/support/ticket.png\",\n            \"title\": \"Support Ticket\"\n        },\n        \"title\": \"TSTSUP-111\",\n        \"url\": \"http://www.mycompany.com/support?id=1\",\n        \"status\": {\n            \"icon\": {\n                \"url16x16\": \"http://www.mycompany.com/support/resolved.png\",\n                \"link\": \"http://www.mycompany.com/support?id=1&details=closed\",\n                \"title\": \"Case Closed\"\n            },\n            \"resolved\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[],\\\"errors\\\":{\\\"title\\\":\\\"'title' is required.\\\"}}\""
						},
						{
							"name": "Returned if the remote issue link is updated.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"application\": {\n        \"name\": \"My Acme Tracker\",\n        \"type\": \"com.acme.tracker\"\n    },\n    \"globalId\": \"system=http://www.mycompany.com/support&id=1\",\n    \"relationship\": \"causes\",\n    \"object\": {\n        \"summary\": \"Customer support issue\",\n        \"icon\": {\n            \"url16x16\": \"http://www.mycompany.com/support/ticket.png\",\n            \"title\": \"Support Ticket\"\n        },\n        \"title\": \"TSTSUP-111\",\n        \"url\": \"http://www.mycompany.com/support?id=1\",\n        \"status\": {\n            \"icon\": {\n                \"url16x16\": \"http://www.mycompany.com/support/resolved.png\",\n                \"link\": \"http://www.mycompany.com/support?id=1&details=closed\",\n                \"title\": \"Case Closed\"\n            },\n            \"resolved\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10000\\\"}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"application\": {\n        \"name\": \"My Acme Tracker\",\n        \"type\": \"com.acme.tracker\"\n    },\n    \"globalId\": \"system=http://www.mycompany.com/support&id=1\",\n    \"relationship\": \"causes\",\n    \"object\": {\n        \"summary\": \"Customer support issue\",\n        \"icon\": {\n            \"url16x16\": \"http://www.mycompany.com/support/ticket.png\",\n            \"title\": \"Support Ticket\"\n        },\n        \"title\": \"TSTSUP-111\",\n        \"url\": \"http://www.mycompany.com/support?id=1\",\n        \"status\": {\n            \"icon\": {\n                \"url16x16\": \"http://www.mycompany.com/support/resolved.png\",\n                \"link\": \"http://www.mycompany.com/support?id=1&details=closed\",\n                \"title\": \"Case Closed\"\n            },\n            \"resolved\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have permission to link issues.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"application\": {\n        \"name\": \"My Acme Tracker\",\n        \"type\": \"com.acme.tracker\"\n    },\n    \"globalId\": \"system=http://www.mycompany.com/support&id=1\",\n    \"relationship\": \"causes\",\n    \"object\": {\n        \"summary\": \"Customer support issue\",\n        \"icon\": {\n            \"url16x16\": \"http://www.mycompany.com/support/ticket.png\",\n            \"title\": \"Support Ticket\"\n        },\n        \"title\": \"TSTSUP-111\",\n        \"url\": \"http://www.mycompany.com/support?id=1\",\n        \"status\": {\n            \"icon\": {\n                \"url16x16\": \"http://www.mycompany.com/support/resolved.png\",\n                \"link\": \"http://www.mycompany.com/support?id=1&details=closed\",\n                \"title\": \"Case Closed\"\n            },\n            \"resolved\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the remote issue link is created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"application\": {\n        \"name\": \"My Acme Tracker\",\n        \"type\": \"com.acme.tracker\"\n    },\n    \"globalId\": \"system=http://www.mycompany.com/support&id=1\",\n    \"relationship\": \"causes\",\n    \"object\": {\n        \"summary\": \"Customer support issue\",\n        \"icon\": {\n            \"url16x16\": \"http://www.mycompany.com/support/ticket.png\",\n            \"title\": \"Support Ticket\"\n        },\n        \"title\": \"TSTSUP-111\",\n        \"url\": \"http://www.mycompany.com/support?id=1\",\n        \"status\": {\n            \"icon\": {\n                \"url16x16\": \"http://www.mycompany.com/support/resolved.png\",\n                \"link\": \"http://www.mycompany.com/support?id=1&details=closed\",\n                \"title\": \"Case Closed\"\n            },\n            \"resolved\": true\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/issue/MKY-1/remotelink/10000\\\"}\""
						}
					]
				},
				{
					"name": "Delete Remote Issue Link By Global Id",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink?globalId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issue",
								":issueIdOrKey",
								"remotelink"
							],
							"query": [
								{
									"key": "globalId",
									"value": "<string>",
									"description": "(Required) The global ID of a remote issue link."
								}
							],
							"variable": [
								{
									"key": "issueIdOrKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID or key of the issue."
								}
							]
						},
						"description": "Deletes the remote issue link from the issue using the link's global ID. Where the global ID includes reserved URL characters these must be escaped in the request. For example, pass `system=http://www.mycompany.com/support&id=1` as `system%3Dhttp%3A%2F%2Fwww.mycompany.com%2Fsupport%26id%3D1`.\n\nThis operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse projects* and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is implemented, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink?globalId=system=http://www.mycompany.com/support&id=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"query": [
										{
											"key": "globalId",
											"value": "system=http://www.mycompany.com/support"
										},
										{
											"key": "id",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if a global ID isn't provided.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink?globalId=system=http://www.mycompany.com/support&id=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"query": [
										{
											"key": "globalId",
											"value": "system=http://www.mycompany.com/support"
										},
										{
											"key": "id",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have permission to link issues.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink?globalId=system=http://www.mycompany.com/support&id=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"query": [
										{
											"key": "globalId",
											"value": "system=http://www.mycompany.com/support"
										},
										{
											"key": "id",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink?globalId=system=http://www.mycompany.com/support&id=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"query": [
										{
											"key": "globalId",
											"value": "system=http://www.mycompany.com/support"
										},
										{
											"key": "id",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issue/:issueIdOrKey/remotelink?globalId=system=http://www.mycompany.com/support&id=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issue",
										":issueIdOrKey",
										"remotelink"
									],
									"query": [
										{
											"key": "globalId",
											"value": "system=http://www.mycompany.com/support"
										},
										{
											"key": "id",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "issueIdOrKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Issue Link",
			"item": [
				{
					"name": "Link Id}",
					"item": [
						{
							"name": "Get Issue Link",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLink/:linkId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLink",
										":linkId"
									],
									"variable": [
										{
											"key": "linkId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the issue link."
										}
									]
								},
								"description": "Returns an issue link.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse project* [project permission](https://confluence.atlassian.com/x/yodKLg) for all the projects containing the linked issues.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, permission to view both of the issues."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLink",
												":linkId"
											],
											"variable": [
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link is not found.\n *  the user doesn't have the required permissions.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLink",
												":linkId"
											],
											"variable": [
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLink",
												":linkId"
											],
											"variable": [
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"id\\\":\\\"10001\\\",\\\"type\\\":{\\\"id\\\":\\\"1000\\\",\\\"name\\\":\\\"Duplicate\\\",\\\"inward\\\":\\\"Duplicated by\\\",\\\"outward\\\":\\\"Duplicates\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000\\\"},\\\"inwardIssue\\\":{\\\"id\\\":\\\"10004\\\",\\\"key\\\":\\\"PR-3\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/PR-3\\\",\\\"fields\\\":{\\\"status\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/status/5\\\",\\\"description\\\":\\\"The issue is closed.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/closed.gif\\\",\\\"name\\\":\\\"Closed\\\",\\\"id\\\":\\\"5\\\",\\\"statusCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/statuscategory/9\\\",\\\"id\\\":9,\\\"key\\\":\\\"completed\\\",\\\"colorName\\\":\\\"green\\\"}},\\\"priority\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/priority/5\\\",\\\"statusColor\\\":\\\"#cfcfcf\\\",\\\"description\\\":\\\"Very little impact.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/priorities/trivial.png\\\",\\\"name\\\":\\\"Trivial\\\",\\\"id\\\":\\\"2\\\"},\\\"issuetype\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/1\\\",\\\"id\\\":\\\"1\\\",\\\"description\\\":\\\"A problem with the software.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Bug\\\",\\\"subtask\\\":false,\\\"avatarId\\\":10002,\\\"entityId\\\":\\\"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2\\\",\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}}},\\\"outwardIssue\\\":{\\\"id\\\":\\\"10004L\\\",\\\"key\\\":\\\"PR-2\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/PR-2\\\",\\\"fields\\\":{\\\"status\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/status/10000\\\",\\\"description\\\":\\\"The issue is currently being worked on.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/progress.gif\\\",\\\"name\\\":\\\"In Progress\\\",\\\"id\\\":\\\"10000\\\",\\\"statusCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/statuscategory/1\\\",\\\"id\\\":1,\\\"key\\\":\\\"in-flight\\\",\\\"colorName\\\":\\\"yellow\\\",\\\"name\\\":\\\"In Progress\\\"}},\\\"priority\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/priority/3\\\",\\\"statusColor\\\":\\\"#009900\\\",\\\"description\\\":\\\"Major loss of function.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/priorities/major.png\\\",\\\"name\\\":\\\"Major\\\",\\\"id\\\":\\\"1\\\"},\\\"issuetype\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/3\\\",\\\"id\\\":\\\"3\\\",\\\"description\\\":\\\"A task that needs to be done.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Task\\\",\\\"subtask\\\":false,\\\"avatarId\\\":1}}}}\""
								},
								{
									"name": "Returned if the issue link ID is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLink",
												":linkId"
											],
											"variable": [
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Issue Link",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLink/:linkId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLink",
										":linkId"
									],
									"variable": [
										{
											"key": "linkId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the issue link."
										}
									]
								},
								"description": "Deletes an issue link.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  Browse project [project permission](https://confluence.atlassian.com/x/yodKLg) for all the projects containing the issues in the link.\n *  *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for at least one of the projects containing issues in the link.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, permission to view both of the issues."
							},
							"response": [
								{
									"name": "Returned if the issue link ID is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLink",
												":linkId"
											],
											"variable": [
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link is not found.\n *  the user doesn't have the required permissions.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLink",
												":linkId"
											],
											"variable": [
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLink",
												":linkId"
											],
											"variable": [
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLink",
												":linkId"
											],
											"variable": [
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "200 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLink/:linkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLink",
												":linkId"
											],
											"variable": [
												{
													"key": "linkId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Create Issue Link",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"inwardIssue\": {\n        \"id\": \"<string>\",\n        \"key\": \"<string>\"\n    },\n    \"outwardIssue\": {\n        \"id\": \"<string>\",\n        \"key\": \"<string>\"\n    },\n    \"type\": {\n        \"id\": \"<string>\",\n        \"name\": \"<string>\",\n        \"inward\": \"<string>\",\n        \"outward\": \"<string>\"\n    },\n    \"comment\": {\n        \"body\": {},\n        \"visibility\": {\n            \"type\": \"<string>\",\n            \"value\": \"<string>\"\n        },\n        \"properties\": [\n            {\n                \"key\": \"<string>\",\n                \"value\": {}\n            },\n            {\n                \"key\": \"<string>\",\n                \"value\": {}\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issueLink",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issueLink"
							]
						},
						"description": "Creates a link between two issues. Use this operation to indicate a relationship between two issues and optionally add a comment to the from (outward) issue. To use this resource the site must have [Issue Linking](https://confluence.atlassian.com/x/yoXKM) enabled.\n\nThis resource returns nothing on the creation of an issue link. To obtain the ID of the issue link, use `https://your-domain.atlassian.net/rest/api/3/issue/[linked issue key]?fields=issuelinks`.\n\nIf the link request duplicates a link, the response indicates that the issue link was created. If the request included a comment, the comment is added.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Browse project* [project permission](https://confluence.atlassian.com/x/yodKLg) for all the projects containing the issues to be linked,\n *  *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) on the project containing the from (outward) issue,\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.\n *  If the comment has visibility restrictions, belongs to the group or has the role visibility is restricted to."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"outwardIssue\": {\n        \"key\": \"MKY-1\"\n    },\n    \"comment\": {\n        \"visibility\": {\n            \"type\": \"group\",\n            \"value\": \"jira-software-users\"\n        },\n        \"body\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Linked related issue!\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"inwardIssue\": {\n        \"key\": \"HSP-1\"\n    },\n    \"type\": {\n        \"name\": \"Duplicate\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLink"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the comment is not created. The response contains an error message indicating why the comment wasn't created. The issue link is also not created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"outwardIssue\": {\n        \"key\": \"MKY-1\"\n    },\n    \"comment\": {\n        \"visibility\": {\n            \"type\": \"group\",\n            \"value\": \"jira-software-users\"\n        },\n        \"body\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Linked related issue!\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"inwardIssue\": {\n        \"key\": \"HSP-1\"\n    },\n    \"type\": {\n        \"name\": \"Duplicate\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLink"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"outwardIssue\": {\n        \"key\": \"MKY-1\"\n    },\n    \"comment\": {\n        \"visibility\": {\n            \"type\": \"group\",\n            \"value\": \"jira-software-users\"\n        },\n        \"body\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Linked related issue!\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"inwardIssue\": {\n        \"key\": \"HSP-1\"\n    },\n    \"type\": {\n        \"name\": \"Duplicate\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLink"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if:\n\n *  issue linking is disabled.\n *  the user cannot view one or both of the issues. For example, the user doesn't have *Browse project* project permission for a project containing one of the issues.\n *  the user does not have *link issues* pr",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"outwardIssue\": {\n        \"key\": \"MKY-1\"\n    },\n    \"comment\": {\n        \"visibility\": {\n            \"type\": \"group\",\n            \"value\": \"jira-software-users\"\n        },\n        \"body\": {\n            \"type\": \"doc\",\n            \"version\": 1,\n            \"content\": [\n                {\n                    \"type\": \"paragraph\",\n                    \"content\": [\n                        {\n                            \"text\": \"Linked related issue!\",\n                            \"type\": \"text\"\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    \"inwardIssue\": {\n        \"key\": \"HSP-1\"\n    },\n    \"type\": {\n        \"name\": \"Duplicate\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLink",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLink"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Issue Link Type",
			"item": [
				{
					"name": "Issue Link Type Id}",
					"item": [
						{
							"name": "Get Issue Link Type",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLinkType",
										":issueLinkTypeId"
									],
									"variable": [
										{
											"key": "issueLinkTypeId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the issue link type."
										}
									]
								},
								"description": "Returns an issue link type.\n\nTo use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project in the site."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLinkType",
												":issueLinkTypeId"
											],
											"variable": [
												{
													"key": "issueLinkTypeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"id\\\":\\\"1000\\\",\\\"name\\\":\\\"Duplicate\\\",\\\"inward\\\":\\\"Duplicated by\\\",\\\"outward\\\":\\\"Duplicates\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000\\\"}\""
								},
								{
									"name": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link type is not found.\n *  the user does not have the required permissions.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLinkType",
												":issueLinkTypeId"
											],
											"variable": [
												{
													"key": "issueLinkTypeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the issue link type ID is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLinkType",
												":issueLinkTypeId"
											],
											"variable": [
												{
													"key": "issueLinkTypeId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLinkType",
												":issueLinkTypeId"
											],
											"variable": [
												{
													"key": "issueLinkTypeId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Issue Link Type",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"inward\": \"<string>\",\n    \"outward\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLinkType",
										":issueLinkTypeId"
									],
									"variable": [
										{
											"key": "issueLinkTypeId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the issue link type."
										}
									]
								},
								"description": "Updates an issue link type.\n\nTo use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inward\": \"Duplicated by\",\n    \"name\": \"Duplicate\",\n    \"outward\": \"Duplicates\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLinkType",
												":issueLinkTypeId"
											],
											"variable": [
												{
													"key": "issueLinkTypeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"id\\\":\\\"1000\\\",\\\"name\\\":\\\"Duplicate\\\",\\\"inward\\\":\\\"Duplicated by\\\",\\\"outward\\\":\\\"Duplicates\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000\\\"}\""
								},
								{
									"name": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link type is not found.\n *  the user does not have the required permissions.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inward\": \"Duplicated by\",\n    \"name\": \"Duplicate\",\n    \"outward\": \"Duplicates\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLinkType",
												":issueLinkTypeId"
											],
											"variable": [
												{
													"key": "issueLinkTypeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the issue link type ID or the request body are invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inward\": \"Duplicated by\",\n    \"name\": \"Duplicate\",\n    \"outward\": \"Duplicates\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLinkType",
												":issueLinkTypeId"
											],
											"variable": [
												{
													"key": "issueLinkTypeId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"inward\": \"Duplicated by\",\n    \"name\": \"Duplicate\",\n    \"outward\": \"Duplicates\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLinkType",
												":issueLinkTypeId"
											],
											"variable": [
												{
													"key": "issueLinkTypeId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Issue Link Type",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLinkType",
										":issueLinkTypeId"
									],
									"variable": [
										{
											"key": "issueLinkTypeId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the issue link type."
										}
									]
								},
								"description": "Deletes an issue link type.\n\nTo use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLinkType",
												":issueLinkTypeId"
											],
											"variable": [
												{
													"key": "issueLinkTypeId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLinkType",
												":issueLinkTypeId"
											],
											"variable": [
												{
													"key": "issueLinkTypeId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link type is not found.\n *  the user does not have the required permissions.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLinkType",
												":issueLinkTypeId"
											],
											"variable": [
												{
													"key": "issueLinkTypeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the issue link type ID is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issueLinkType/:issueLinkTypeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issueLinkType",
												":issueLinkTypeId"
											],
											"variable": [
												{
													"key": "issueLinkTypeId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get Issue Link Types",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issueLinkType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issueLinkType"
							]
						},
						"description": "Returns a list of all issue link types.\n\nTo use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project in the site."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLinkType",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLinkType"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"issueLinkTypes\\\":[{\\\"id\\\":\\\"1000\\\",\\\"name\\\":\\\"Duplicate\\\",\\\"inward\\\":\\\"Duplicated by\\\",\\\"outward\\\":\\\"Duplicates\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000\\\"},{\\\"id\\\":\\\"1010\\\",\\\"name\\\":\\\"Blocks\\\",\\\"inward\\\":\\\"Blocked by\\\",\\\"outward\\\":\\\"Blocks\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1010\\\"}]}\""
						},
						{
							"name": "Returned if issue linking is disabled.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLinkType",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLinkType"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLinkType",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLinkType"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Issue Link Type",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"inward\": \"<string>\",\n    \"outward\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issueLinkType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issueLinkType"
							]
						},
						"description": "Creates an issue link type. Use this operation to create descriptions of the reasons why issues are linked. The issue link type consists of a name and descriptions for a link's inward and outward relationships.\n\nTo use this operation, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"inward\": \"Duplicated by\",\n    \"name\": \"Duplicate\",\n    \"outward\": \"Duplicates\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLinkType",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLinkType"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":\\\"1000\\\",\\\"name\\\":\\\"Duplicate\\\",\\\"inward\\\":\\\"Duplicated by\\\",\\\"outward\\\":\\\"Duplicates\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueLinkType/1000\\\"}\""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"inward\": \"Duplicated by\",\n    \"name\": \"Duplicate\",\n    \"outward\": \"Duplicates\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLinkType",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLinkType"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link type name is in use.\n *  the user does not have the required permissions.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"inward\": \"Duplicated by\",\n    \"name\": \"Duplicate\",\n    \"outward\": \"Duplicates\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLinkType",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLinkType"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"inward\": \"Duplicated by\",\n    \"name\": \"Duplicate\",\n    \"outward\": \"Duplicates\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issueLinkType",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issueLinkType"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Issue Security Schemes",
			"item": [
				{
					"name": "Get Issue Security Schemes",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuesecurityschemes"
							]
						},
						"description": "Returns all [issue security schemes](https://confluence.atlassian.com/x/J4lKLg).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have permission to administer issue security schemes.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuesecurityschemes"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuesecurityschemes"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuesecurityschemes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"issueSecuritySchemes\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issuesecurityschemes/10000\\\",\\\"id\\\":10000,\\\"name\\\":\\\"Default Issue Security Scheme\\\",\\\"description\\\":\\\"Description for the default issue security scheme\\\",\\\"defaultSecurityLevelId\\\":10021}]}\""
						}
					]
				},
				{
					"name": "Get Issue Security Scheme",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuesecurityschemes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the issue security scheme. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) operation to get a list of issue security scheme IDs."
								}
							]
						},
						"description": "Returns an issue security scheme along with its security levels.\n\n**[Permissions](#permissions) required:**\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project that uses the requested issue security scheme."
					},
					"response": [
						{
							"name": "Returned if the user does not have the administrator permission and the scheme is not used in any project where the user has administrative permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuesecurityschemes",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuesecurityschemes",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issuesecurityschemes/10000\\\",\\\"id\\\":10000,\\\"name\\\":\\\"Default Issue Security Scheme\\\",\\\"description\\\":\\\"Description for the default issue security scheme\\\",\\\"defaultSecurityLevelId\\\":10021,\\\"levels\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/securitylevel/10021\\\",\\\"id\\\":\\\"10021\\\",\\\"description\\\":\\\"Only the reporter and internal staff can see this issue.\\\",\\\"name\\\":\\\"Reporter Only\\\"}]}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuesecurityschemes",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Issue Security Level Members",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes/:issueSecuritySchemeId/members?startAt=0&maxResults=50&issueSecurityLevelId=<long>&expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuesecurityschemes",
								":issueSecuritySchemeId",
								"members"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "issueSecurityLevelId",
									"value": "<long>",
									"description": "The list of issue security level IDs. To include multiple issue security levels separate IDs with ampersand: `issueSecurityLevelId=10000&issueSecurityLevelId=10001`."
								},
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission."
								}
							],
							"variable": [
								{
									"key": "issueSecuritySchemeId",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the issue security scheme. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) operation to get a list of issue security scheme IDs."
								}
							]
						},
						"description": "Returns issue security level members.\n\nOnly issue security level members in context of classic projects are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes/:issueSecuritySchemeId/members?startAt=0&maxResults=50&issueSecurityLevelId=<long>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuesecurityschemes",
										":issueSecuritySchemeId",
										"members"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "issueSecurityLevelId",
											"value": "<long>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "issueSecuritySchemeId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes/:issueSecuritySchemeId/members?startAt=0&maxResults=50&issueSecurityLevelId=<long>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuesecurityschemes",
										":issueSecuritySchemeId",
										"members"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "issueSecurityLevelId",
											"value": "<long>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "issueSecuritySchemeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes/:issueSecuritySchemeId/members?startAt=0&maxResults=50&issueSecurityLevelId=<long>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuesecurityschemes",
										":issueSecuritySchemeId",
										"members"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "issueSecurityLevelId",
											"value": "<long>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "issueSecuritySchemeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":3,\\\"isLast\\\":true,\\\"values\\\":[{\\\"id\\\":10000,\\\"issueSecurityLevelId\\\":10020,\\\"holder\\\":{\\\"type\\\":\\\"user\\\",\\\"user\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\"},\\\"expand\\\":\\\"user\\\"}},{\\\"id\\\":10001,\\\"issueSecurityLevelId\\\":10020,\\\"holder\\\":{\\\"type\\\":\\\"group\\\",\\\"parameter\\\":\\\"jira-core-users\\\",\\\"expand\\\":\\\"group\\\"}},{\\\"id\\\":10002,\\\"issueSecurityLevelId\\\":10021,\\\"holder\\\":{\\\"type\\\":\\\"assignee\\\"}}]}\""
						},
						{
							"name": "Returned if no issue security level members are found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes/:issueSecuritySchemeId/members?startAt=0&maxResults=50&issueSecurityLevelId=<long>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuesecurityschemes",
										":issueSecuritySchemeId",
										"members"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "issueSecurityLevelId",
											"value": "<long>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "issueSecuritySchemeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuesecurityschemes/:issueSecuritySchemeId/members?startAt=0&maxResults=50&issueSecurityLevelId=<long>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuesecurityschemes",
										":issueSecuritySchemeId",
										"members"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "issueSecurityLevelId",
											"value": "<long>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "issueSecuritySchemeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Issue Type",
			"item": [
				{
					"name": "Get Issue Type Property Keys",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetype",
								":issueTypeId",
								"properties"
							],
							"variable": [
								{
									"key": "issueTypeId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the issue type."
								}
							]
						},
						"description": "Returns all the [issue type property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties) keys of the issue type.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) to get the property keys of any issue type.\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) to get the property keys of any issue types associated with the projects the user has permission to browse."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties"
									],
									"variable": [
										{
											"key": "issueTypeId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"keys\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\\\",\\\"key\\\":\\\"issue.support\\\"}]}\""
						},
						{
							"name": "Returned if:\n\n *  the issue type is not found.\n *  the user does not have the required permissions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties"
									],
									"variable": [
										{
											"key": "issueTypeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue type ID is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties"
									],
									"variable": [
										{
											"key": "issueTypeId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All Issue Types For User",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetype",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetype"
							]
						},
						"description": "Returns all issue types.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** Issue types are only returned as follows:\n\n *  if the user has the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), all issue types are returned.\n *  if the user has the *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, the issue types associated with the projects the user has permission to browse are returned."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/3\\\",\\\"id\\\":\\\"3\\\",\\\"description\\\":\\\"A task that needs to be done.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Task\\\",\\\"subtask\\\":false,\\\"avatarId\\\":1},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/1\\\",\\\"id\\\":\\\"1\\\",\\\"description\\\":\\\"A problem with the software.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Bug\\\",\\\"subtask\\\":false,\\\"avatarId\\\":10002,\\\"entityId\\\":\\\"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2\\\",\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}]\""
						}
					]
				},
				{
					"name": "Create Issue Type",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"type\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetype",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetype"
							]
						},
						"description": "Creates an issue type and adds it to the default issue type scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"name\",\n    \"description\": \"description\",\n    \"type\": \"standard\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"name\",\n    \"description\": \"description\",\n    \"type\": \"standard\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"self\": \"deserunt incididunt consequat minim\",\n \"id\": \"deserunt\",\n \"description\": \"non fugiat proident\",\n \"iconUrl\": \"quis\",\n \"name\": \"aliquip fugiat\",\n \"subtask\": true,\n \"avatarId\": 83144571,\n \"entityId\": \"bccabfab-42ed-e11d-159f-499fc3cd5de0\",\n \"scope\": {\n  \"type\": \"TEMPLATE\",\n  \"project\": {\n   \"self\": \"est sit in nostrud\",\n   \"id\": \"anim enim\",\n   \"key\": \"Lorem magna deserunt nostrud\",\n   \"name\": \"sint u\",\n   \"projectTypeKey\": \"service_desk\",\n   \"simplified\": false,\n   \"avatarUrls\": {\n    \"16x16\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"24x24\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"32x32\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"48x48\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"projectCategory\": {\n    \"self\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n }\n}"
						},
						{
							"name": "Returned if the issue type name is in use.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"name\",\n    \"description\": \"description\",\n    \"type\": \"standard\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid because:\n\n *  no content is sent.\n *  the issue type name exceeds 60 characters.\n *  a subtask issue type is requested on an instance where subtasks are disabled.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"name\",\n    \"description\": \"description\",\n    \"type\": \"standard\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"name\",\n    \"description\": \"description\",\n    \"type\": \"standard\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Set Issue Type Property",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetype",
								":issueTypeId",
								"properties",
								":propertyKey"
							],
							"variable": [
								{
									"key": "issueTypeId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the issue type."
								},
								{
									"key": "propertyKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The key of the issue type property. The maximum length is 255 characters."
								}
							]
						},
						"description": "Creates or updates the value of the [issue type property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties). Use this resource to store and update data against an issue type.\n\nThe value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have permission to modify the issue type.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"number\": 5,\n    \"string\": \"string-value\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue type property is created.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"number\": 5,\n    \"string\": \"string-value\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if:\n\n *  the issue type ID is invalid.\n *  a property value is not provided.\n *  the property value JSON content is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"number\": 5,\n    \"string\": \"string-value\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"number\": 5,\n    \"string\": \"string-value\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue type property is updated.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"number\": 5,\n    \"string\": \"string-value\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if:\n\n *  the issue type is not found.\n *  the user does not have the permission view the issue type.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"number\": 5,\n    \"string\": \"string-value\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Issue Type Property",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetype",
								":issueTypeId",
								"properties",
								":propertyKey"
							],
							"variable": [
								{
									"key": "issueTypeId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the issue type."
								},
								{
									"key": "propertyKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The key of the property. Use [Get issue type property keys](#api-rest-api-3-issuetype-issueTypeId-properties-get) to get a list of all issue type property keys."
								}
							]
						},
						"description": "Returns the key and value of the [issue type property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) to get the details of any issue type.\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) to get the details of any issue types associated with the projects the user has permission to browse."
					},
					"response": [
						{
							"name": "Returned if the issue type or property is not found or the user does not have the required permissions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"key\\\":\\\"issue.support\\\",\\\"value\\\":{\\\"system.conversation.id\\\":\\\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\\\",\\\"system.support.time\\\":\\\"1m\\\"}}\""
						},
						{
							"name": "Returned if the issue type ID is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Issue Type Property",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetype",
								":issueTypeId",
								"properties",
								":propertyKey"
							],
							"variable": [
								{
									"key": "issueTypeId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the issue type."
								},
								{
									"key": "propertyKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The key of the property. Use [Get issue type property keys](#api-rest-api-3-issuetype-issueTypeId-properties-get) to get a list of all issue type property keys."
								}
							]
						},
						"description": "Deletes the [issue type property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the issue type property is deleted.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue type ID is invalid.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue type or property is not found.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":issueTypeId",
										"properties",
										":propertyKey"
									],
									"variable": [
										{
											"key": "issueTypeId"
										},
										{
											"key": "propertyKey"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Issue Type",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetype/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetype",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the issue type."
								}
							]
						},
						"description": "Returns an issue type.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) in a project the issue type is associated with or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/3\\\",\\\"id\\\":\\\"3\\\",\\\"description\\\":\\\"A task that needs to be done.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Task\\\",\\\"subtask\\\":false,\\\"avatarId\\\":1}\""
						},
						{
							"name": "Returned if the issue type ID is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  the issue type is not found.\n *  the user does not have the required permissions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Issue Type",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"avatarId\": \"<long>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetype/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetype",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the issue type."
								}
							]
						},
						"description": "Updates the issue type.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is invalid because:\n\n *  no content is sent.\n *  the issue type name exceeds 60 characters.\n *  the avatar is not associated with this issue type.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"avatarId\": 1,\n    \"name\": \"name\",\n    \"description\": \"description\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"avatarId\": 1,\n    \"name\": \"name\",\n    \"description\": \"description\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"avatarId\": 1,\n    \"name\": \"name\",\n    \"description\": \"description\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue type name is in use.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"avatarId\": 1,\n    \"name\": \"name\",\n    \"description\": \"description\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue type is not found.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"avatarId\": 1,\n    \"name\": \"name\",\n    \"description\": \"description\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"avatarId\": 1,\n    \"name\": \"name\",\n    \"description\": \"description\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"self\": \"deserunt incididunt consequat minim\",\n \"id\": \"deserunt\",\n \"description\": \"non fugiat proident\",\n \"iconUrl\": \"quis\",\n \"name\": \"aliquip fugiat\",\n \"subtask\": true,\n \"avatarId\": 83144571,\n \"entityId\": \"bccabfab-42ed-e11d-159f-499fc3cd5de0\",\n \"scope\": {\n  \"type\": \"TEMPLATE\",\n  \"project\": {\n   \"self\": \"est sit in nostrud\",\n   \"id\": \"anim enim\",\n   \"key\": \"Lorem magna deserunt nostrud\",\n   \"name\": \"sint u\",\n   \"projectTypeKey\": \"service_desk\",\n   \"simplified\": false,\n   \"avatarUrls\": {\n    \"16x16\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"24x24\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"32x32\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"48x48\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"projectCategory\": {\n    \"self\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"description\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   }\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Delete Issue Type",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetype/:id?alternativeIssueTypeId=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetype",
								":id"
							],
							"query": [
								{
									"key": "alternativeIssueTypeId",
									"value": "<string>",
									"description": "The ID of the replacement issue type."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the issue type."
								}
							]
						},
						"description": "Deletes the issue type. If the issue type is in use, all uses are updated with the alternative issue type (`alternativeIssueTypeId`). A list of alternative issue types are obtained from the [Get alternative issue types](#api-rest-api-3-issuetype-id-alternatives-get) resource.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id?alternativeIssueTypeId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"query": [
										{
											"key": "alternativeIssueTypeId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id?alternativeIssueTypeId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"query": [
										{
											"key": "alternativeIssueTypeId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue type is in use and:\n\n *  also specified as the alternative issue type.\n *  is a *standard* issue type and the alternative issue type is a *subtask*.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id?alternativeIssueTypeId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"query": [
										{
											"key": "alternativeIssueTypeId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if any issues cannot be updated with the alternative issue type.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id?alternativeIssueTypeId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"query": [
										{
											"key": "alternativeIssueTypeId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id?alternativeIssueTypeId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"query": [
										{
											"key": "alternativeIssueTypeId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  the issue type is in use and an alternative issue type is not specified.\n *  the issue type or alternative issue type is not found.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id?alternativeIssueTypeId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id"
									],
									"query": [
										{
											"key": "alternativeIssueTypeId",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Alternative Issue Types",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetype/:id/alternatives",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetype",
								":id",
								"alternatives"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the issue type."
								}
							]
						},
						"description": "Returns a list of issue types that can be used to replace the issue type. The alternative issue types are those assigned to the same workflow scheme, field configuration scheme, and screen scheme.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id/alternatives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id",
										"alternatives"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  the issue type is not found.\n *  the user does not have the required permissions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id/alternatives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id",
										"alternatives"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id/alternatives",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id",
										"alternatives"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/3\\\",\\\"id\\\":\\\"3\\\",\\\"description\\\":\\\"A task that needs to be done.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Task\\\",\\\"subtask\\\":false,\\\"avatarId\\\":1},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/1\\\",\\\"id\\\":\\\"1\\\",\\\"description\\\":\\\"A problem with the software.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Bug\\\",\\\"subtask\\\":false,\\\"avatarId\\\":10002,\\\"entityId\\\":\\\"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2\\\",\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}]\""
						}
					]
				},
				{
					"name": "Load Issue Type Avatar",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetype/:id/avatar2?x=0&y=0&size=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetype",
								":id",
								"avatar2"
							],
							"query": [
								{
									"key": "x",
									"value": "0",
									"description": "The X coordinate of the top-left corner of the crop region."
								},
								{
									"key": "y",
									"value": "0",
									"description": "The Y coordinate of the top-left corner of the crop region."
								},
								{
									"key": "size",
									"value": "<integer>",
									"description": "(Required) The length of each side of the crop region."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the issue type."
								}
							]
						},
						"description": "Loads an avatar for the issue type.\n\nSpecify the avatar's local file location in the body of the request. Also, include the following headers:\n\n *  `X-Atlassian-Token: no-check` To prevent XSRF protection blocking the request, for more information see [Special Headers](#special-request-headers).\n *  `Content-Type: image/image type` Valid image types are JPEG, GIF, or PNG.\n\nFor example:  \n`curl --request POST \\ --user email@example.com:<api_token> \\ --header 'X-Atlassian-Token: no-check' \\ --header 'Content-Type: image/< image_type>' \\ --data-binary \"<@/path/to/file/with/your/avatar>\" \\ --url 'https://your-domain.atlassian.net/rest/api/3/issuetype/{issueTypeId}'This`\n\nThe avatar is cropped to a square. If no crop parameters are specified, the square originates at the top left of the image. The length of the square's sides is set to the smaller of the height or width of the image.\n\nThe cropped image is then used to create avatars of 16x16, 24x24, 32x32, and 48x48 in size.\n\nAfter creating the avatar, use [ Update issue type](#api-rest-api-3-issuetype-id-put) to set it as the issue type's displayed avatar.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id/avatar2?x=0&y=0&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id",
										"avatar2"
									],
									"query": [
										{
											"key": "x",
											"value": "0"
										},
										{
											"key": "y",
											"value": "0"
										},
										{
											"key": "size",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue type is not found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id/avatar2?x=0&y=0&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id",
										"avatar2"
									],
									"query": [
										{
											"key": "x",
											"value": "0"
										},
										{
											"key": "y",
											"value": "0"
										},
										{
											"key": "size",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id/avatar2?x=0&y=0&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id",
										"avatar2"
									],
									"query": [
										{
											"key": "x",
											"value": "0"
										},
										{
											"key": "y",
											"value": "0"
										},
										{
											"key": "size",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":\\\"1000\\\",\\\"isSystemAvatar\\\":true,\\\"isSelected\\\":false,\\\"isDeletable\\\":false,\\\"urls\\\":{\\\"16x16\\\":\\\"/secure/useravatar?size=xsmall&avatarId=10040&avatarType=project\\\",\\\"24x24\\\":\\\"/secure/useravatar?size=small&avatarId=10040&avatarType=project\\\",\\\"32x32\\\":\\\"/secure/useravatar?size=medium&avatarId=10040&avatarType=project\\\",\\\"48x48\\\":\\\"/secure/useravatar?avatarId=10040&avatarType=project\\\"}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id/avatar2?x=0&y=0&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id",
										"avatar2"
									],
									"query": [
										{
											"key": "x",
											"value": "0"
										},
										{
											"key": "y",
											"value": "0"
										},
										{
											"key": "size",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  an image isn't included in the request.\n *  the image type is unsupported.\n *  the crop parameters extend the crop area beyond the edge of the image.\n *  `cropSize` is missing.\n *  the issue type ID is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetype/:id/avatar2?x=0&y=0&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetype",
										":id",
										"avatar2"
									],
									"query": [
										{
											"key": "x",
											"value": "0"
										},
										{
											"key": "y",
											"value": "0"
										},
										{
											"key": "size",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Issue Type Scheme",
			"item": [
				{
					"name": "Project",
					"item": [
						{
							"name": "Get Issue Type Schemes For Projects",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/project?startAt=0&maxResults=50&projectId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										"project"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "50",
											"description": "The maximum number of items to return per page."
										},
										{
											"key": "projectId",
											"value": "<long>",
											"description": "(Required) The list of project IDs. To include multiple project IDs, provide an ampersand-separated list. For example, `projectId=10000&projectId=10001`."
										}
									]
								},
								"description": "Returns a [paginated](#pagination) list of issue type schemes and, for each issue type scheme, a list of the projects that use it.\n\nOnly issue type schemes used in classic projects are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/project?startAt=0&maxResults=50&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescheme",
												"project"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "projectId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":3,\\\"isLast\\\":true,\\\"values\\\":[{\\\"issueTypeScheme\\\":{\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Default Issue Type Scheme\\\",\\\"description\\\":\\\"Default issue type scheme is the list of global issue types. All newly created issue types will automatically be added to this scheme.\\\",\\\"defaultIssueTypeId\\\":\\\"10003\\\",\\\"isDefault\\\":true},\\\"projectIds\\\":[\\\"10000\\\",\\\"10001\\\"]},{\\\"issueTypeScheme\\\":{\\\"id\\\":\\\"10001\\\",\\\"name\\\":\\\"SUP: Kanban Issue Type Scheme\\\",\\\"description\\\":\\\"A collection of issue types suited to use in a kanban style project.\\\"},\\\"projectIds\\\":[\\\"10002\\\"]},{\\\"issueTypeScheme\\\":{\\\"id\\\":\\\"10002\\\",\\\"name\\\":\\\"HR: Scrum issue type scheme\\\",\\\"description\\\":\\\"\\\",\\\"defaultIssueTypeId\\\":\\\"10004\\\"},\\\"projectIds\\\":[\\\"10003\\\",\\\"10004\\\",\\\"10005\\\"]}]}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/project?startAt=0&maxResults=50&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescheme",
												"project"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "projectId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the required permissions.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/project?startAt=0&maxResults=50&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescheme",
												"project"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "projectId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/project?startAt=0&maxResults=50&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescheme",
												"project"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "projectId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Assign Issue Type Scheme To Project",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueTypeSchemeId\": \"<string>\",\n    \"projectId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										"project"
									]
								},
								"description": "Assigns an issue type scheme to a project.\n\nIf any issues in the project are assigned issue types not present in the new scheme, the operation will fail. To complete the assignment those issues must be updated to use issue types in the new scheme.\n\nIssue type schemes can only be assigned to classic projects.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issueTypeSchemeId\": \"10000\",\n    \"projectId\": \"10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescheme",
												"project"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issueTypeSchemeId\": \"10000\",\n    \"projectId\": \"10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescheme",
												"project"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"This issue type scheme can't be assigned to the project. This is because some issues in this project use issue types not present in the scheme. Before assigning the scheme to the project, update the issue types on these issues: 7\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issueTypeSchemeId\": \"10000\",\n    \"projectId\": \"10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescheme",
												"project"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if the issue type scheme or the project is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issueTypeSchemeId\": \"10000\",\n    \"projectId\": \"10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescheme",
												"project"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The issue type scheme was not found.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the user does not have the required permissions.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issueTypeSchemeId\": \"10000\",\n    \"projectId\": \"10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescheme",
												"project"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access issue type schemes.\\\"],\\\"errors\\\":{}}\""
								}
							]
						}
					]
				},
				{
					"name": "Change Order Of Issue Types",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"issueTypeIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"after\": \"<string>\",\n    \"position\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/move",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetypescheme",
								":issueTypeSchemeId",
								"issuetype",
								"move"
							],
							"variable": [
								{
									"key": "issueTypeSchemeId",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the issue type scheme."
								}
							]
						},
						"description": "Changes the order of issue types in an issue type scheme.\n\nThe request body parameters must meet the following requirements:\n\n *  all of the issue types must belong to the issue type scheme.\n *  either `after` or `position` must be provided.\n *  the issue type in `after` must not be in the issue type list.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10004\",\n        \"10002\"\n    ],\n    \"after\": \"10008\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/move",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype",
										"move"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10004\",\n        \"10002\"\n    ],\n    \"after\": \"10008\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/move",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype",
										"move"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"The issue type scheme does not include some of the specified issue types. Issue type IDs missing from the scheme are:  10007, 10008\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10004\",\n        \"10002\"\n    ],\n    \"after\": \"10008\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/move",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype",
										"move"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access issue type schemes.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10004\",\n        \"10002\"\n    ],\n    \"after\": \"10008\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/move",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype",
										"move"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue type scheme is not found.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10004\",\n        \"10002\"\n    ],\n    \"after\": \"10008\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/move",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype",
										"move"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"The issue type scheme was not found.\\\"],\\\"errors\\\":{}}\""
						}
					]
				},
				{
					"name": "Get All Issue Type Schemes",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetypescheme?startAt=0&maxResults=50&id=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetypescheme"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "id",
									"value": "<long>",
									"description": "The list of issue type schemes IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of issue type schemes.\n\nOnly issue type schemes used in classic projects are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme?startAt=0&maxResults=50&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme?startAt=0&maxResults=50&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":3,\\\"isLast\\\":true,\\\"values\\\":[{\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Default Issue Type Scheme\\\",\\\"description\\\":\\\"Default issue type scheme is the list of global issue types. All newly created issue types will automatically be added to this scheme.\\\",\\\"defaultIssueTypeId\\\":\\\"10003\\\",\\\"isDefault\\\":true},{\\\"id\\\":\\\"10001\\\",\\\"name\\\":\\\"SUP: Kanban Issue Type Scheme\\\",\\\"description\\\":\\\"A collection of issue types suited to use in a kanban style project.\\\"},{\\\"id\\\":\\\"10002\\\",\\\"name\\\":\\\"HR: Scrum issue type scheme\\\",\\\"description\\\":\\\"\\\",\\\"defaultIssueTypeId\\\":\\\"10004\\\"}]}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme?startAt=0&maxResults=50&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme?startAt=0&maxResults=50&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Issue Type Scheme",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"issueTypeIds\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"defaultIssueTypeId\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetypescheme",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetypescheme"
							]
						},
						"description": "Creates an issue type scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the scheme name is used by another scheme.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultIssueTypeId\": \"10002\",\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10002\",\n        \"10003\"\n    ],\n    \"name\": \"Kanban Issue Type Scheme\",\n    \"description\": \"A collection of issue types suited to use in a kanban style project.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"The name is used by another scheme.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultIssueTypeId\": \"10002\",\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10002\",\n        \"10003\"\n    ],\n    \"name\": \"Kanban Issue Type Scheme\",\n    \"description\": \"A collection of issue types suited to use in a kanban style project.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"The default issue type ID has to be present in issue type IDs list.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultIssueTypeId\": \"10002\",\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10002\",\n        \"10003\"\n    ],\n    \"name\": \"Kanban Issue Type Scheme\",\n    \"description\": \"A collection of issue types suited to use in a kanban style project.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"issueTypeSchemeId\\\":\\\"10010\\\"}\""
						},
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultIssueTypeId\": \"10002\",\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10002\",\n        \"10003\"\n    ],\n    \"name\": \"Kanban Issue Type Scheme\",\n    \"description\": \"A collection of issue types suited to use in a kanban style project.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access issue type schemes.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultIssueTypeId\": \"10002\",\n    \"issueTypeIds\": [\n        \"10001\",\n        \"10002\",\n        \"10003\"\n    ],\n    \"name\": \"Kanban Issue Type Scheme\",\n    \"description\": \"A collection of issue types suited to use in a kanban style project.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Issue Type Scheme Items",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/mapping?startAt=0&maxResults=50&issueTypeSchemeId=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetypescheme",
								"mapping"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "issueTypeSchemeId",
									"value": "<long>",
									"description": "The list of issue type scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `issueTypeSchemeId=10000&issueTypeSchemeId=10001`."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of issue type scheme items.\n\nOnly issue type scheme items used in classic projects are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/mapping?startAt=0&maxResults=50&issueTypeSchemeId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										"mapping"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "issueTypeSchemeId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/mapping?startAt=0&maxResults=50&issueTypeSchemeId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										"mapping"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "issueTypeSchemeId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/mapping?startAt=0&maxResults=50&issueTypeSchemeId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										"mapping"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "issueTypeSchemeId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":4,\\\"isLast\\\":true,\\\"values\\\":[{\\\"issueTypeSchemeId\\\":\\\"10000\\\",\\\"issueTypeId\\\":\\\"10000\\\"},{\\\"issueTypeSchemeId\\\":\\\"10000\\\",\\\"issueTypeId\\\":\\\"10001\\\"},{\\\"issueTypeSchemeId\\\":\\\"10000\\\",\\\"issueTypeId\\\":\\\"10002\\\"},{\\\"issueTypeSchemeId\\\":\\\"10001\\\",\\\"issueTypeId\\\":\\\"10000\\\"}]}\""
						},
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/mapping?startAt=0&maxResults=50&issueTypeSchemeId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										"mapping"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "issueTypeSchemeId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add Issue Types To Issue Type Scheme",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"issueTypeIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetypescheme",
								":issueTypeSchemeId",
								"issuetype"
							],
							"variable": [
								{
									"key": "issueTypeSchemeId",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the issue type scheme."
								}
							]
						},
						"description": "Adds issue types to an issue type scheme.\n\nThe added issue types are appended to the issue types list.\n\nIf any of the issue types exist in the issue type scheme, the operation fails and no issue types are added.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the issue type or the issue type scheme is not found.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueTypeIds\": [\n        \"10000\",\n        \"10002\",\n        \"10003\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"These issue types were not found: 10000, 10002\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueTypeIds\": [\n        \"10000\",\n        \"10002\",\n        \"10003\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"These issue types were not added because they are already present in the issue type scheme: 10002, 10003\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueTypeIds\": [\n        \"10000\",\n        \"10002\",\n        \"10003\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access issue type schemes.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueTypeIds\": [\n        \"10000\",\n        \"10002\",\n        \"10003\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueTypeIds\": [\n        \"10000\",\n        \"10002\",\n        \"10003\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update Issue Type Scheme",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"defaultIssueTypeId\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetypescheme",
								":issueTypeSchemeId"
							],
							"variable": [
								{
									"key": "issueTypeSchemeId",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the issue type scheme."
								}
							]
						},
						"description": "Updates an issue type scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultIssueTypeId\": \"10002\",\n    \"name\": \"Kanban Issue Type Scheme\",\n    \"description\": \"A collection of issue types suited to use in a kanban style project.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access issue type schemes.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultIssueTypeId\": \"10002\",\n    \"name\": \"Kanban Issue Type Scheme\",\n    \"description\": \"A collection of issue types suited to use in a kanban style project.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"The default issue type has to be one of the issue types of the scheme.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultIssueTypeId\": \"10002\",\n    \"name\": \"Kanban Issue Type Scheme\",\n    \"description\": \"A collection of issue types suited to use in a kanban style project.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue type scheme is not found.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultIssueTypeId\": \"10002\",\n    \"name\": \"Kanban Issue Type Scheme\",\n    \"description\": \"A collection of issue types suited to use in a kanban style project.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"The issue type scheme was not found.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultIssueTypeId\": \"10002\",\n    \"name\": \"Kanban Issue Type Scheme\",\n    \"description\": \"A collection of issue types suited to use in a kanban style project.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Delete Issue Type Scheme",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetypescheme",
								":issueTypeSchemeId"
							],
							"variable": [
								{
									"key": "issueTypeSchemeId",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the issue type scheme."
								}
							]
						},
						"description": "Deletes an issue type scheme.\n\nOnly issue type schemes used in classic projects can be deleted.\n\nAny projects assigned to the scheme are reassigned to the default issue type scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is to delete the default issue type scheme.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"The default issue type scheme can't be removed.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the issue type scheme is not found.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"The issue type scheme was not found.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the issue type scheme is deleted.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access issue type schemes.\\\"],\\\"errors\\\":{}}\""
						}
					]
				},
				{
					"name": "Remove Issue Type From Issue Type Scheme",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/:issueTypeId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetypescheme",
								":issueTypeSchemeId",
								"issuetype",
								":issueTypeId"
							],
							"variable": [
								{
									"key": "issueTypeSchemeId",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the issue type scheme."
								},
								{
									"key": "issueTypeId",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the issue type."
								}
							]
						},
						"description": "Removes an issue type from an issue type scheme.\n\nThis operation cannot remove:\n\n *  any issue type used by issues.\n *  any issue types from the default issue type scheme.\n *  the last standard issue type from an issue type scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/:issueTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype",
										":issueTypeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										},
										{
											"key": "issueTypeId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/:issueTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype",
										":issueTypeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										},
										{
											"key": "issueTypeId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Can't remove the last standard issue type from the issue type scheme.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/:issueTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype",
										":issueTypeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										},
										{
											"key": "issueTypeId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/:issueTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype",
										":issueTypeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										},
										{
											"key": "issueTypeId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access issue type schemes.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the issue type scheme is missing or the issue type is not found in the issue type scheme.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/:issueTypeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescheme",
										":issueTypeSchemeId",
										"issuetype",
										":issueTypeId"
									],
									"variable": [
										{
											"key": "issueTypeSchemeId"
										},
										{
											"key": "issueTypeId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"The issue type was not found in the issue type scheme.\\\"],\\\"errors\\\":{}}\""
						}
					]
				}
			]
		},
		{
			"name": "Issuetypescreenscheme",
			"item": [
				{
					"name": "Project",
					"item": [
						{
							"name": "Get Issue Type Screen Schemes For Projects",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/project?startAt=0&maxResults=50&projectId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme",
										"project"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "50",
											"description": "The maximum number of items to return per page."
										},
										{
											"key": "projectId",
											"value": "<long>",
											"description": "(Required) The list of project IDs. To include multiple projects, separate IDs with ampersand: `projectId=10000&projectId=10001`."
										}
									]
								},
								"description": "Returns a [paginated](#pagination) list of issue type screen schemes and, for each issue type screen scheme, a list of the projects that use it.\n\nOnly issue type screen schemes used in classic projects are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the user does not have the required permissions.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/project?startAt=0&maxResults=50&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												"project"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "projectId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/project?startAt=0&maxResults=50&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												"project"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "projectId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/project?startAt=0&maxResults=50&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												"project"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "projectId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":1,\\\"isLast\\\":true,\\\"values\\\":[{\\\"issueTypeScreenScheme\\\":{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"Default Issue Type Screen Scheme\\\",\\\"description\\\":\\\"The default issue type screen scheme\\\"},\\\"projectIds\\\":[\\\"10000\\\",\\\"10001\\\"]}]}\""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/project?startAt=0&maxResults=50&projectId=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												"project"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "projectId",
													"value": "<long>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Assign Issue Type Screen Scheme To Project",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueTypeScreenSchemeId\": \"<string>\",\n    \"projectId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme",
										"project"
									]
								},
								"description": "Assigns an issue type screen scheme to a project.\n\nIssue type screen schemes can only be assigned to classic projects.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the user does not have the required permissions.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issueTypeScreenSchemeId\": \"10001\",\n    \"projectId\": \"10002\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												"project"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access issue type screen schemes.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if:\n\n *  project is not found.\n *  issue type screen scheme is not found.\n *  the project is not a classic project.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issueTypeScreenSchemeId\": \"10001\",\n    \"projectId\": \"10002\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												"project"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"Only classic projects can have issue type screen schemes assigned.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issueTypeScreenSchemeId\": \"10001\",\n    \"projectId\": \"10002\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												"project"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issueTypeScreenSchemeId\": \"10001\",\n    \"projectId\": \"10002\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												"project"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if the issue type screen scheme or the project are missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issueTypeScreenSchemeId\": \"10001\",\n    \"projectId\": \"10002\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												"project"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The issue type screen scheme was not found.\\\"],\\\"errors\\\":{}}\""
								}
							]
						}
					]
				},
				{
					"name": "Issue Type Screen Scheme Id}",
					"item": [
						{
							"name": "Mapping",
							"item": [
								{
									"name": "Append Mappings To Issue Type Screen Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"<string>\",\n            \"screenSchemeId\": \"<string>\"\n        },\n        {\n            \"issueTypeId\": \"<string>\",\n            \"screenSchemeId\": \"<string>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												":issueTypeScreenSchemeId",
												"mapping"
											],
											"variable": [
												{
													"key": "issueTypeScreenSchemeId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the issue type screen scheme."
												}
											]
										},
										"description": "Appends issue type to screen scheme mappings to an issue type screen scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the issue type screen scheme, issue type, or screen scheme is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"10000\",\n            \"screenSchemeId\": \"10001\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"screenSchemeId\": \"10002\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"screenSchemeId\": \"10002\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"The issue type screen scheme was not found.\\\"],\\\"errors\\\":{}}\""
										},
										{
											"name": "Returned if the user does not have the required permissions.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"10000\",\n            \"screenSchemeId\": \"10001\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"screenSchemeId\": \"10002\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"screenSchemeId\": \"10002\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"10000\",\n            \"screenSchemeId\": \"10001\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"screenSchemeId\": \"10002\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"screenSchemeId\": \"10002\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"A default mapping cannot be added.\\\"],\\\"errors\\\":{}}\""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"10000\",\n            \"screenSchemeId\": \"10001\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"screenSchemeId\": \"10002\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"screenSchemeId\": \"10002\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Returned if the issue type is a sub-task, but sub-tasks are disabled in Jira settings.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"10000\",\n            \"screenSchemeId\": \"10001\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"screenSchemeId\": \"10002\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"screenSchemeId\": \"10002\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"Sub-tasks are disabled in Jira. At least one of the issue types is a sub-task.\\\"],\\\"errors\\\":{}}\""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"10000\",\n            \"screenSchemeId\": \"10001\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"screenSchemeId\": \"10002\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"screenSchemeId\": \"10002\"\n        }\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update Issue Type Screen Scheme Default Screen Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"screenSchemeId\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												":issueTypeScreenSchemeId",
												"mapping",
												"default"
											],
											"variable": [
												{
													"key": "issueTypeScreenSchemeId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the issue type screen scheme."
												}
											]
										},
										"description": "Updates the default screen scheme of an issue type screen scheme. The default screen scheme is used for all unmapped issue types.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the user does not have the required permissions.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"screenSchemeId\": \"10010\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping",
														"default"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access issue type screen schemes.\\\"],\\\"errors\\\":{}}\""
										},
										{
											"name": "Returned if the request is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"screenSchemeId\": \"10010\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping",
														"default"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"The screenSchemeId has to be provided.\\\"],\\\"errors\\\":{}}\""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"screenSchemeId\": \"10010\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping",
														"default"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"screenSchemeId\": \"10010\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping",
														"default"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the issue type screen scheme or the screen screen is not found, or the screen scheme isn't used in classic projects.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"screenSchemeId\": \"10010\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping",
														"default"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"The issue type screen scheme was not found.\\\"],\\\"errors\\\":{}}\""
										}
									]
								},
								{
									"name": "Remove Mappings From Issue Type Screen Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issueTypeIds\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												":issueTypeScreenSchemeId",
												"mapping",
												"remove"
											],
											"variable": [
												{
													"key": "issueTypeScreenSchemeId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the issue type screen scheme."
												}
											]
										},
										"description": "Removes issue type to screen scheme mappings from an issue type screen scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the request is not valid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeIds\": [\n        \"10000\",\n        \"10001\",\n        \"10004\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping",
														"remove"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"The issueTypeIds must not contain duplicates.\\\"],\\\"errors\\\":{}}\""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeIds\": [\n        \"10000\",\n        \"10001\",\n        \"10004\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping",
														"remove"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the required permissions.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeIds\": [\n        \"10000\",\n        \"10001\",\n        \"10004\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping",
														"remove"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access issue type screen schemes.\\\"],\\\"errors\\\":{}}\""
										},
										{
											"name": "Returned if the screen scheme mappings are removed from the issue type screen scheme.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeIds\": [\n        \"10000\",\n        \"10001\",\n        \"10004\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping",
														"remove"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Returned if the issue type screen scheme or one or more issue type mappings are not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueTypeIds\": [\n        \"10000\",\n        \"10001\",\n        \"10004\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"issuetypescreenscheme",
														":issueTypeScreenSchemeId",
														"mapping",
														"remove"
													],
													"variable": [
														{
															"key": "issueTypeScreenSchemeId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"errorMessages\\\":[\\\"The issue type screen scheme was not found.\\\"],\\\"errors\\\":{}}\""
										}
									]
								}
							]
						},
						{
							"name": "Update Issue Type Screen Scheme",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme",
										":issueTypeScreenSchemeId"
									],
									"variable": [
										{
											"key": "issueTypeScreenSchemeId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the issue type screen scheme."
										}
									]
								},
								"description": "Updates an issue type screen scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the issue type screen scheme is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Scrum scheme\",\n    \"description\": \"Screens for scrum issue types.\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												":issueTypeScreenSchemeId"
											],
											"variable": [
												{
													"key": "issueTypeScreenSchemeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The issue type screen scheme was not found.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Scrum scheme\",\n    \"description\": \"Screens for scrum issue types.\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												":issueTypeScreenSchemeId"
											],
											"variable": [
												{
													"key": "issueTypeScreenSchemeId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Scrum scheme\",\n    \"description\": \"Screens for scrum issue types.\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												":issueTypeScreenSchemeId"
											],
											"variable": [
												{
													"key": "issueTypeScreenSchemeId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The issue type screen scheme name is in use.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the user does not have the required permissions.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Scrum scheme\",\n    \"description\": \"Screens for scrum issue types.\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												":issueTypeScreenSchemeId"
											],
											"variable": [
												{
													"key": "issueTypeScreenSchemeId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access issue type screen schemes.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Scrum scheme\",\n    \"description\": \"Screens for scrum issue types.\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												":issueTypeScreenSchemeId"
											],
											"variable": [
												{
													"key": "issueTypeScreenSchemeId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Delete Issue Type Screen Scheme",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme",
										":issueTypeScreenSchemeId"
									],
									"variable": [
										{
											"key": "issueTypeScreenSchemeId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the issue type screen scheme."
										}
									]
								},
								"description": "Deletes an issue type screen scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the user does not have the required permissions.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												":issueTypeScreenSchemeId"
											],
											"variable": [
												{
													"key": "issueTypeScreenSchemeId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												":issueTypeScreenSchemeId"
											],
											"variable": [
												{
													"key": "issueTypeScreenSchemeId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The issue type screen scheme cannot be deleted because it is assigned to one or more projects.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the issue type screen scheme is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												":issueTypeScreenSchemeId"
											],
											"variable": [
												{
													"key": "issueTypeScreenSchemeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The issue type screen scheme was not found.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												":issueTypeScreenSchemeId"
											],
											"variable": [
												{
													"key": "issueTypeScreenSchemeId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the issue type screen scheme is deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"issuetypescreenscheme",
												":issueTypeScreenSchemeId"
											],
											"variable": [
												{
													"key": "issueTypeScreenSchemeId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "Get Issue Type Screen Schemes",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme?startAt=0&maxResults=50&id=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetypescreenscheme"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "id",
									"value": "<long>",
									"description": "The list of issue type screen scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of issue type screen schemes.\n\nOnly issue type screen schemes used in classic projects are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme?startAt=0&maxResults=50&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme?startAt=0&maxResults=50&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":2,\\\"isLast\\\":true,\\\"values\\\":[{\\\"id\\\":\\\"1\\\",\\\"name\\\":\\\"Default Issue Type Screen Scheme\\\",\\\"description\\\":\\\"The default issue type screen scheme\\\"},{\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Office issue type screen scheme\\\",\\\"description\\\":\\\"Managing office projects\\\"}]}\""
						},
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme?startAt=0&maxResults=50&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme?startAt=0&maxResults=50&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Issue Type Screen Scheme",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"<string>\",\n            \"screenSchemeId\": \"<string>\"\n        },\n        {\n            \"issueTypeId\": \"<string>\",\n            \"screenSchemeId\": \"<string>\"\n        }\n    ],\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetypescreenscheme"
							]
						},
						"description": "Creates an issue type screen scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Scrum issue type screen scheme\",\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"default\",\n            \"screenSchemeId\": \"10001\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"screenSchemeId\": \"10002\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"screenSchemeId\": \"10002\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"One or more issue type IDs are repeated, an issue type ID can only be specified once.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the issue type is a sub-task, but sub-tasks are disabled in Jira settings.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Scrum issue type screen scheme\",\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"default\",\n            \"screenSchemeId\": \"10001\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"screenSchemeId\": \"10002\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"screenSchemeId\": \"10002\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Sub-tasks are disabled in Jira. At least one of the issue types is a sub-task.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Scrum issue type screen scheme\",\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"default\",\n            \"screenSchemeId\": \"10001\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"screenSchemeId\": \"10002\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"screenSchemeId\": \"10002\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Scrum issue type screen scheme\",\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"default\",\n            \"screenSchemeId\": \"10001\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"screenSchemeId\": \"10002\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"screenSchemeId\": \"10002\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access issue type screen schemes.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Scrum issue type screen scheme\",\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"default\",\n            \"screenSchemeId\": \"10001\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"screenSchemeId\": \"10002\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"screenSchemeId\": \"10002\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":\\\"10001\\\"}\""
						},
						{
							"name": "Returned if the issue type or screen scheme is not found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Scrum issue type screen scheme\",\n    \"issueTypeMappings\": [\n        {\n            \"issueTypeId\": \"default\",\n            \"screenSchemeId\": \"10001\"\n        },\n        {\n            \"issueTypeId\": \"10001\",\n            \"screenSchemeId\": \"10002\"\n        },\n        {\n            \"issueTypeId\": \"10002\",\n            \"screenSchemeId\": \"10002\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"One or more issue type IDs were not found.\\\"],\\\"errors\\\":{}}\""
						}
					]
				},
				{
					"name": "Get Issue Type Screen Scheme Items",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/mapping?startAt=0&maxResults=50&issueTypeScreenSchemeId=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"issuetypescreenscheme",
								"mapping"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "issueTypeScreenSchemeId",
									"value": "<long>",
									"description": "The list of issue type screen scheme IDs. To include multiple issue type screen schemes, separate IDs with ampersand: `issueTypeScreenSchemeId=10000&issueTypeScreenSchemeId=10001`."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of issue type screen scheme items.\n\nOnly issue type screen schemes used in classic projects are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/mapping?startAt=0&maxResults=50&issueTypeScreenSchemeId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme",
										"mapping"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "issueTypeScreenSchemeId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/mapping?startAt=0&maxResults=50&issueTypeScreenSchemeId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme",
										"mapping"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "issueTypeScreenSchemeId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":4,\\\"isLast\\\":true,\\\"values\\\":[{\\\"issueTypeScreenSchemeId\\\":\\\"10020\\\",\\\"issueTypeId\\\":\\\"10000\\\",\\\"screenSchemeId\\\":\\\"10010\\\"},{\\\"issueTypeScreenSchemeId\\\":\\\"10021\\\",\\\"issueTypeId\\\":\\\"10001\\\",\\\"screenSchemeId\\\":\\\"10010\\\"},{\\\"issueTypeScreenSchemeId\\\":\\\"10022\\\",\\\"issueTypeId\\\":\\\"10002\\\",\\\"screenSchemeId\\\":\\\"10010\\\"},{\\\"issueTypeScreenSchemeId\\\":\\\"10023\\\",\\\"issueTypeId\\\":\\\"default\\\",\\\"screenSchemeId\\\":\\\"10011\\\"}]}\""
						},
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/mapping?startAt=0&maxResults=50&issueTypeScreenSchemeId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme",
										"mapping"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "issueTypeScreenSchemeId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/issuetypescreenscheme/mapping?startAt=0&maxResults=50&issueTypeScreenSchemeId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"issuetypescreenscheme",
										"mapping"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "issueTypeScreenSchemeId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "JQL",
			"item": [
				{
					"name": "Autocompletedata",
					"item": [
						{
							"name": "Get Field Reference Data",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/jql/autocompletedata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"jql",
										"autocompletedata"
									]
								},
								"description": "Returns reference data for JQL searches. This is a downloadable version of the documentation provided in [Advanced searching - fields reference](https://confluence.atlassian.com/x/gwORLQ) and [Advanced searching - functions reference](https://confluence.atlassian.com/x/hgORLQ), along with a list of JQL-reserved words. Use this information to assist with the programmatic creation of JQL queries or the validation of queries built in a custom query builder.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/jql/autocompletedata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"jql",
												"autocompletedata"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"visibleFieldNames\\\":[{\\\"value\\\":\\\"summary\\\",\\\"displayName\\\":\\\"summary\\\",\\\"orderable\\\":\\\"true\\\",\\\"searchable\\\":\\\"true\\\",\\\"operators\\\":[\\\"~\\\",\\\"!~\\\",\\\"is\\\",\\\"is not\\\"],\\\"types\\\":[\\\"java.lang.String\\\"]},{\\\"value\\\":\\\"Sprint\\\",\\\"displayName\\\":\\\"Sprint - cf[10880]\\\",\\\"orderable\\\":\\\"true\\\",\\\"searchable\\\":\\\"true\\\",\\\"auto\\\":\\\"true\\\",\\\"cfid\\\":\\\"cf[10880]\\\",\\\"operators\\\":[\\\"=\\\",\\\"!=\\\",\\\"in\\\",\\\"not in\\\",\\\"is\\\",\\\"is not\\\"],\\\"types\\\":[\\\"com.atlassian.greenhopper.service.sprint.Sprint\\\"]}],\\\"visibleFunctionNames\\\":[{\\\"value\\\":\\\"standardIssueTypes()\\\",\\\"displayName\\\":\\\"standardIssueTypes()\\\",\\\"isList\\\":\\\"true\\\",\\\"types\\\":[\\\"com.atlassian.jira.issue.issuetype.IssueType\\\"]}],\\\"jqlReservedWords\\\":[\\\"empty\\\",\\\"and\\\",\\\"or\\\",\\\"in\\\",\\\"distinct\\\"]}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/jql/autocompletedata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"jql",
												"autocompletedata"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Field Auto Complete Suggestions",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/jql/autocompletedata/suggestions?fieldName=<string>&fieldValue=<string>&predicateName=<string>&predicateValue=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"jql",
										"autocompletedata",
										"suggestions"
									],
									"query": [
										{
											"key": "fieldName",
											"value": "<string>",
											"description": "The name of the field."
										},
										{
											"key": "fieldValue",
											"value": "<string>",
											"description": "The partial field item name entered by the user."
										},
										{
											"key": "predicateName",
											"value": "<string>",
											"description": "The name of the [ CHANGED operator predicate](https://confluence.atlassian.com/x/hQORLQ#Advancedsearching-operatorsreference-CHANGEDCHANGED) for which the suggestions are generated. The valid predicate operators are *by*, *from*, and *to*."
										},
										{
											"key": "predicateValue",
											"value": "<string>",
											"description": "The partial predicate item name entered by the user."
										}
									]
								},
								"description": "Returns the JQL search auto complete suggestions for a field.\n\nSuggestions can be obtained by providing:\n\n *  `fieldName` to get a list of all values for the field.\n *  `fieldName` and `fieldValue` to get a list of values containing the text in `fieldValue`.\n *  `fieldName` and `predicateName` to get a list of all predicate values for the field.\n *  `fieldName`, `predicateName`, and `predicateValue` to get a list of predicate values containing the text in `predicateValue`.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
							},
							"response": [
								{
									"name": "Returned if an invalid combination of parameters is passed.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/jql/autocompletedata/suggestions?fieldName=reporter&fieldValue=<string>&predicateName=<string>&predicateValue=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"jql",
												"autocompletedata",
												"suggestions"
											],
											"query": [
												{
													"key": "fieldName",
													"value": "reporter"
												},
												{
													"key": "fieldValue",
													"value": "<string>"
												},
												{
													"key": "predicateName",
													"value": "<string>"
												},
												{
													"key": "predicateValue",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/jql/autocompletedata/suggestions?fieldName=reporter&fieldValue=<string>&predicateName=<string>&predicateValue=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"jql",
												"autocompletedata",
												"suggestions"
											],
											"query": [
												{
													"key": "fieldName",
													"value": "reporter"
												},
												{
													"key": "fieldValue",
													"value": "<string>"
												},
												{
													"key": "predicateName",
													"value": "<string>"
												},
												{
													"key": "predicateValue",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"results\\\":[{\\\"value\\\":\\\"ActiveObjects\\\",\\\"displayName\\\":\\\"<b>Ac</b>tiveObjects (AO)\\\"},{\\\"value\\\":\\\"Atlassian Connect\\\",\\\"displayName\\\":\\\"Atlassian Connect (<b>AC</b>)\\\"},{\\\"value\\\":\\\"Atlassian Connect in Jira\\\",\\\"displayName\\\":\\\"Atlassian Connect in Jira (<b>AC</b>JIRA)\\\"}]}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/jql/autocompletedata/suggestions?fieldName=reporter&fieldValue=<string>&predicateName=<string>&predicateValue=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"jql",
												"autocompletedata",
												"suggestions"
											],
											"query": [
												{
													"key": "fieldName",
													"value": "reporter"
												},
												{
													"key": "fieldValue",
													"value": "<string>"
												},
												{
													"key": "predicateName",
													"value": "<string>"
												},
												{
													"key": "predicateValue",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Check Issues Against Jql",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"issueIds\": [\n        \"<long>\"\n    ],\n    \"jqls\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/jql/match",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"jql",
								"match"
							]
						},
						"description": "Checks whether one or more issues would be returned by one or more JQL queries.\n\n**[Permissions](#permissions) required:** None, however, issues are only matched against JQL queries where the user has:\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if `jqls` exceeds the maximum number of JQL queries or `issueIds` exceeds the maximum number of issue IDs.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueIds\": [\n        10001,\n        1000,\n        10042\n    ],\n    \"jqls\": [\n        \"project = FOO\",\n        \"issuetype = Bug\",\n        \"summary ~ \\\"some text\\\" AND project in (FOO, BAR)\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/jql/match",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"jql",
										"match"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"issueIds\": [\n        10001,\n        1000,\n        10042\n    ],\n    \"jqls\": [\n        \"project = FOO\",\n        \"issuetype = Bug\",\n        \"summary ~ \\\"some text\\\" AND project in (FOO, BAR)\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/jql/match",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"jql",
										"match"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"matches\\\":[{\\\"matchedIssues\\\":[10000,10004],\\\"errors\\\":[]},{\\\"matchedIssues\\\":[100134,10025,10236],\\\"errors\\\":[]},{\\\"matchedIssues\\\":[],\\\"errors\\\":[]},{\\\"matchedIssues\\\":[],\\\"errors\\\":[\\\"Invalid JQL: broken = value\\\"]}]}\""
						}
					]
				},
				{
					"name": "Parse Jql Query",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"queries\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/jql/parse?validation=strict",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"jql",
								"parse"
							],
							"query": [
								{
									"key": "validation",
									"value": "strict",
									"description": "How to validate the JQL query and treat the validation results. Validation options include:\n\n *  `strict` Returns all errors. If validation fails, the query structure is not returned.\n *  `warn` Returns all errors. If validation fails but the JQL query is correctly formed, the query structure is returned.\n *  `none` No validation is performed. If JQL query is correctly formed, the query structure is returned."
								}
							]
						},
						"description": "Parses and validates JQL queries.\n\nValidation is performed in context of the current user.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queries\": [\n        \"summary ~ test AND (labels in (urgent, blocker) OR lastCommentedBy = currentUser()) AND status CHANGED AFTER startOfMonth(-1M) ORDER BY updated DESC\",\n        \"invalid query\",\n        \"summary = test\",\n        \"summary in test\",\n        \"project = INVALID\",\n        \"universe = 42\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/jql/parse?validation=strict",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"jql",
										"parse"
									],
									"query": [
										{
											"key": "validation",
											"value": "strict"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"queries\\\":[{\\\"query\\\":\\\"summary ~ test AND (labels in (urgent, blocker) OR lastCommentedBy = currentUser()) AND status CHANGED AFTER -5d ORDER BY updated DESC\\\",\\\"structure\\\":{\\\"where\\\":{\\\"clauses\\\":[{\\\"field\\\":{\\\"name\\\":\\\"summary\\\"},\\\"operator\\\":\\\"~\\\",\\\"operand\\\":{\\\"value\\\":\\\"test\\\"}},{\\\"clauses\\\":[{\\\"field\\\":{\\\"name\\\":\\\"labels\\\"},\\\"operator\\\":\\\"in\\\",\\\"operand\\\":{\\\"values\\\":[{\\\"value\\\":\\\"urgent\\\"},{\\\"value\\\":\\\"blocker\\\"}]}},{\\\"field\\\":{\\\"name\\\":\\\"lastCommentedBy\\\",\\\"property\\\":[{\\\"entity\\\":\\\"issue\\\",\\\"key\\\":\\\"propertyKey\\\",\\\"path\\\":\\\"path.in.property\\\",\\\"type\\\":\\\"user\\\"}]},\\\"operator\\\":\\\"=\\\",\\\"operand\\\":{\\\"function\\\":\\\"currentUser\\\",\\\"arguments\\\":[]}}],\\\"operator\\\":\\\"or\\\"},{\\\"field\\\":{\\\"name\\\":\\\"status\\\"},\\\"operator\\\":\\\"changed\\\",\\\"predicates\\\":[{\\\"operator\\\":\\\"after\\\",\\\"operand\\\":{\\\"function\\\":\\\"startOfMonth\\\",\\\"arguments\\\":[\\\"-1M\\\"]}}]}],\\\"operator\\\":\\\"and\\\"},\\\"orderBy\\\":{\\\"fields\\\":[{\\\"field\\\":{\\\"name\\\":\\\"updated\\\"},\\\"direction\\\":\\\"desc\\\"}]}}},{\\\"query\\\":\\\"invalid query\\\",\\\"errors\\\":[\\\"Error in the JQL Query: Expecting operator but got 'query'. The valid operators are '=', '!=', '<', '>', '<=', '>=', '~', '!~', 'IN', 'NOT IN', 'IS' and 'IS NOT'. (line 1, character 9)\\\"]},{\\\"query\\\":\\\"summary = test\\\",\\\"errors\\\":[\\\"The operator '=' is not supported by the 'summary' field.\\\"]},{\\\"query\\\":\\\"summary in test\\\",\\\"errors\\\":[\\\"Operator 'in' does not support the non-list value '\\\\\\\"test\\\\\\\"' for field 'summary'.\\\"]},{\\\"query\\\":\\\"project = INVALID\\\",\\\"errors\\\":[\\\"The value 'INVALID' does not exist for the field 'project'.\\\"]},{\\\"query\\\":\\\"universe = 42\\\",\\\"errors\\\":[\\\"Field 'universe' does not exist or you do not have permission to view it.\\\"]}]}\""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queries\": [\n        \"summary ~ test AND (labels in (urgent, blocker) OR lastCommentedBy = currentUser()) AND status CHANGED AFTER startOfMonth(-1M) ORDER BY updated DESC\",\n        \"invalid query\",\n        \"summary = test\",\n        \"summary in test\",\n        \"project = INVALID\",\n        \"universe = 42\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/jql/parse?validation=strict",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"jql",
										"parse"
									],
									"query": [
										{
											"key": "validation",
											"value": "strict"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the authentication credentials are incorrect.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queries\": [\n        \"summary ~ test AND (labels in (urgent, blocker) OR lastCommentedBy = currentUser()) AND status CHANGED AFTER startOfMonth(-1M) ORDER BY updated DESC\",\n        \"invalid query\",\n        \"summary = test\",\n        \"summary in test\",\n        \"project = INVALID\",\n        \"universe = 42\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/jql/parse?validation=strict",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"jql",
										"parse"
									],
									"query": [
										{
											"key": "validation",
											"value": "strict"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Convert User Identifiers To Account Ids In Jql Queries",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"queryStrings\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/jql/pdcleaner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"jql",
								"pdcleaner"
							]
						},
						"description": "Converts one or more JQL queries with user identifiers (username or user key) to equivalent JQL queries with account IDs.\n\nYou may wish to use this operation if your system stores JQL queries and you want to make them GDPR-compliant. For more information about GDPR-related changes, see the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/).\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the request is successful. Note that the JQL queries are returned in the same order that they were passed.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queryStrings\": [\n        \"assignee = mia\",\n        \"issuetype = Bug AND assignee in (mia) AND reporter in (alana) order by lastViewed DESC\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/jql/pdcleaner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"jql",
										"pdcleaner"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"queryStrings\\\":[\\\"issuetype = Bug AND assignee in (abcde-12345) AND reporter in (abc551-c4e99) order by lastViewed DESC\\\"],\\\"queriesWithUnknownUsers\\\":[{\\\"originalQuery\\\":\\\"assignee = mia\\\",\\\"convertedQuery\\\":\\\"assignee = unknown\\\"}]}\""
						},
						{
							"name": "Returned if at least one of the queries cannot be converted. For example, the JQL has invalid operators or invalid keywords, or the users in the query cannot be found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queryStrings\": [\n        \"assignee = mia\",\n        \"issuetype = Bug AND assignee in (mia) AND reporter in (alana) order by lastViewed DESC\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/jql/pdcleaner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"jql",
										"pdcleaner"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"queryStrings\": [\n        \"assignee = mia\",\n        \"issuetype = Bug AND assignee in (mia) AND reporter in (alana) order by lastViewed DESC\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/jql/pdcleaner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"jql",
										"pdcleaner"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Mypreferences",
			"item": [
				{
					"name": "Locale",
					"item": [
						{
							"name": "Get Locale",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/mypreferences/locale",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"mypreferences",
										"locale"
									]
								},
								"description": "Returns the locale for the user.\n\nIf the user has no language preference set (which is the default setting) or this resource is accessed anonymous, the browser locale detected by Jira is returned. Jira detects the browser locale using the *Accept-Language* header in the request. However, if this doesn't match a locale available Jira, the site default locale is returned.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/mypreferences/locale",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"mypreferences",
												"locale"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/mypreferences/locale",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"mypreferences",
												"locale"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"locale\\\":\\\"en_US\\\"}\""
								}
							]
						},
						{
							"name": "Set Locale",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"locale\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/mypreferences/locale",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"mypreferences",
										"locale"
									]
								},
								"description": "Deprecated, use [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API instead.\n\nSets the locale of the user. The locale must be one supported by the instance of Jira.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"locale\": \"en_US\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/mypreferences/locale",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"mypreferences",
												"locale"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"locale\": \"en_US\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/mypreferences/locale",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"mypreferences",
												"locale"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if request is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"locale\": \"en_US\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/mypreferences/locale",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"mypreferences",
												"locale"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Locale",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/mypreferences/locale",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"mypreferences",
										"locale"
									]
								},
								"description": "Deprecated, use [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API instead.\n\nDeletes the locale of the user, which restores the default setting.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/mypreferences/locale",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"mypreferences",
												"locale"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/mypreferences/locale",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"mypreferences",
												"locale"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "Get Preference",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/mypreferences?key=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"mypreferences"
							],
							"query": [
								{
									"key": "key",
									"value": "<string>",
									"description": "(Required) The key of the preference."
								}
							]
						},
						"description": "Returns the value of a preference of the current user.\n\nNote that these keys are deprecated:\n\n *  *jira.user.locale* The locale of the user. By default this is not set and the user takes the locale of the instance.\n *  *jira.user.timezone* The time zone of the user. By default this is not set and the user takes the timezone of the instance.\n\nUse [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API to manage timezone and locale instead.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the key is not provided or not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/mypreferences?key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"mypreferences"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/mypreferences?key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"mypreferences"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/mypreferences?key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"mypreferences"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"ullamco officia esse\""
						}
					]
				},
				{
					"name": "Set Preference",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"<string>\""
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/mypreferences?key=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"mypreferences"
							],
							"query": [
								{
									"key": "key",
									"value": "<string>",
									"description": "(Required) The key of the preference. The maximum length is 255 characters."
								}
							]
						},
						"description": "Creates a preference for the user or updates a preference's value by sending a plain text string. For example, `false`. An arbitrary preference can be created with the value containing up to 255 characters. In addition, the following keys define system preferences that can be set or created:\n\n *  *user.notifications.mimetype* The mime type used in notifications sent to the user. Defaults to `html`.\n *  *user.notify.own.changes* Whether the user gets notified of their own changes. Defaults to `false`.\n *  *user.default.share.private* Whether new [ filters](https://confluence.atlassian.com/x/eQiiLQ) are set to private. Defaults to `true`.\n *  *user.keyboard.shortcuts.disabled* Whether keyboard shortcuts are disabled. Defaults to `false`.\n *  *user.autowatch.disabled* Whether the user automatically watches issues they create or add a comment to. By default, not set: the user takes the instance autowatch setting.\n\nNote that these keys are deprecated:\n\n *  *jira.user.locale* The locale of the user. By default, not set. The user takes the instance locale.\n *  *jira.user.timezone* The time zone of the user. By default, not set. The user takes the instance timezone.\n\nUse [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API to manage timezone and locale instead.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\""
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/mypreferences?key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"mypreferences"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\""
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/mypreferences?key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"mypreferences"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the key or value is not provided or invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\""
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/mypreferences?key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"mypreferences"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Preference",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/mypreferences?key=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"mypreferences"
							],
							"query": [
								{
									"key": "key",
									"value": "<string>",
									"description": "(Required) The key of the preference."
								}
							]
						},
						"description": "Deletes a preference of the user, which restores the default value of system defined settings.\n\nNote that these keys are deprecated:\n\n *  *jira.user.locale* The locale of the user. By default, not set. The user takes the instance locale.\n *  *jira.user.timezone* The time zone of the user. By default, not set. The user takes the instance timezone.\n\nUse [ Update a user profile](https://developer.atlassian.com/cloud/admin/user-management/rest/#api-users-account-id-manage-profile-patch) from the user management REST API to manage timezone and locale instead.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/mypreferences?key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"mypreferences"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the key is not provided or not found.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/mypreferences?key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"mypreferences"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/mypreferences?key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"mypreferences"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Notification Scheme",
			"item": [
				{
					"name": "Get Notification Schemes Paginated",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/notificationscheme?startAt=0&maxResults=50&expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"notificationscheme"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about any custom fields assigned to receive an event.\n *  `group` Returns information about any groups assigned to receive an event.\n *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information.\n *  `projectRole` Returns information about any project roles assigned to receive an event.\n *  `user` Returns information about any users assigned to receive an event."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of [notification schemes](https://confluence.atlassian.com/x/8YdKLg) ordered by display name.\n\n### About notification schemes ###\n\nA notification scheme is a list of events and recipients who will receive notifications for those events. The list is contained within the `notificationSchemeEvents` object and contains pairs of `events` and `notifications`:\n\n *  `event` Identifies the type of event. The events can be [Jira system events](https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-eventsEvents) or [custom events](https://confluence.atlassian.com/x/AIlKLg).\n *  `notifications` Identifies the [recipients](https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-recipientsRecipients) of notifications for each event. Recipients can be any of the following types:\n    \n     *  `CurrentAssignee`\n     *  `Reporter`\n     *  `CurrentUser`\n     *  `ProjectLead`\n     *  `ComponentLead`\n     *  `User` (the `parameter` is the user key)\n     *  `Group` (the `parameter` is the group name)\n     *  `ProjectRole` (the `parameter` is the project role ID)\n     *  `EmailAddress`\n     *  `AllWatchers`\n     *  `UserCustomField` (the `parameter` is the ID of the custom field)\n     *  `GroupCustomField`(the `parameter` is the ID of the custom field)\n\n*Note that you should allow for events without recipients to appear in responses.*\n\n**[Permissions](#permissions) required:** Permission to access Jira, however the user must have permission to administer at least one project associated with a notification scheme for it to be returned."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/notificationscheme?startAt=0&maxResults=50&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"notificationscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful. Only returns notification schemes that the user has permission to access. An empty list is returned if the user lacks permission to access all notification schemes.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/notificationscheme?startAt=0&maxResults=50&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"notificationscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":6,\\\"startAt\\\":1,\\\"total\\\":5,\\\"isLast\\\":false,\\\"values\\\":[{\\\"expand\\\":\\\"notificationSchemeEvents,user,group,projectRole,field,all\\\",\\\"id\\\":10100,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/notificationscheme\\\",\\\"name\\\":\\\"notification scheme name\\\",\\\"description\\\":\\\"description\\\",\\\"notificationSchemeEvents\\\":[{\\\"event\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Issue created\\\",\\\"description\\\":\\\"Event published when an issue is created\\\"},\\\"notifications\\\":[{\\\"id\\\":1,\\\"notificationType\\\":\\\"Group\\\",\\\"parameter\\\":\\\"jira-administrators\\\",\\\"group\\\":{\\\"name\\\":\\\"jira-administrators\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\\\"},\\\"expand\\\":\\\"group\\\"},{\\\"id\\\":2,\\\"notificationType\\\":\\\"CurrentAssignee\\\"},{\\\"id\\\":3,\\\"notificationType\\\":\\\"ProjectRole\\\",\\\"parameter\\\":\\\"10360\\\",\\\"projectRole\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}},\\\"expand\\\":\\\"projectRole\\\"},{\\\"id\\\":4,\\\"notificationType\\\":\\\"EmailAddress\\\",\\\"parameter\\\":\\\"rest-developer@atlassian.com\\\",\\\"emailAddress\\\":\\\"rest-developer@atlassian.com\\\"},{\\\"id\\\":5,\\\"notificationType\\\":\\\"User\\\",\\\"parameter\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"user\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"expand\\\":\\\"user\\\"},{\\\"id\\\":6,\\\"notificationType\\\":\\\"GroupCustomField\\\",\\\"parameter\\\":\\\"customfield_10101\\\",\\\"field\\\":{\\\"id\\\":\\\"customfield_10101\\\",\\\"key\\\":\\\"customfield_10101\\\",\\\"name\\\":\\\"New custom field\\\",\\\"untranslatedName\\\":\\\"New custom field\\\",\\\"custom\\\":true,\\\"orderable\\\":true,\\\"navigable\\\":true,\\\"searchable\\\":true,\\\"clauseNames\\\":[\\\"cf[10101]\\\",\\\"New custom field\\\"],\\\"schema\\\":{\\\"type\\\":\\\"project\\\",\\\"custom\\\":\\\"com.atlassian.jira.plugin.system.customfieldtypes:project\\\",\\\"customId\\\":10101}},\\\"expand\\\":\\\"field\\\"}]},{\\\"event\\\":{\\\"id\\\":20,\\\"name\\\":\\\"Custom event\\\",\\\"description\\\":\\\"Custom event that is published together with an issue created event\\\",\\\"templateEvent\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Issue created\\\",\\\"description\\\":\\\"Event published when an issue is created\\\"}},\\\"notifications\\\":[{\\\"id\\\":1,\\\"notificationType\\\":\\\"Group\\\",\\\"parameter\\\":\\\"jira-administrators\\\",\\\"group\\\":{\\\"name\\\":\\\"jira-administrators\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\\\"},\\\"expand\\\":\\\"group\\\"},{\\\"id\\\":2,\\\"notificationType\\\":\\\"CurrentAssignee\\\"},{\\\"id\\\":3,\\\"notificationType\\\":\\\"ProjectRole\\\",\\\"parameter\\\":\\\"10360\\\",\\\"projectRole\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}},\\\"expand\\\":\\\"projectRole\\\"},{\\\"id\\\":4,\\\"notificationType\\\":\\\"EmailAddress\\\",\\\"parameter\\\":\\\"rest-developer@atlassian.com\\\",\\\"emailAddress\\\":\\\"rest-developer@atlassian.com\\\"},{\\\"id\\\":5,\\\"notificationType\\\":\\\"User\\\",\\\"parameter\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"user\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"expand\\\":\\\"user\\\"},{\\\"id\\\":6,\\\"notificationType\\\":\\\"GroupCustomField\\\",\\\"parameter\\\":\\\"customfield_10101\\\",\\\"field\\\":{\\\"id\\\":\\\"customfield_10101\\\",\\\"key\\\":\\\"customfield_10101\\\",\\\"name\\\":\\\"New custom field\\\",\\\"untranslatedName\\\":\\\"New custom field\\\",\\\"custom\\\":true,\\\"orderable\\\":true,\\\"navigable\\\":true,\\\"searchable\\\":true,\\\"clauseNames\\\":[\\\"cf[10101]\\\",\\\"New custom field\\\"],\\\"schema\\\":{\\\"type\\\":\\\"project\\\",\\\"custom\\\":\\\"com.atlassian.jira.plugin.system.customfieldtypes:project\\\",\\\"customId\\\":10101}},\\\"expand\\\":\\\"field\\\"}]}]}]}\""
						}
					]
				},
				{
					"name": "Get Notification Scheme",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/notificationscheme/:id?expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"notificationscheme",
								":id"
							],
							"query": [
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about any custom fields assigned to receive an event.\n *  `group` Returns information about any groups assigned to receive an event.\n *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information.\n *  `projectRole` Returns information about any project roles assigned to receive an event.\n *  `user` Returns information about any users assigned to receive an event."
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the notification scheme. Use [Get notification schemes paginated](#api-rest-api-3-notificationscheme-get) to get a list of notification scheme IDs."
								}
							]
						},
						"description": "Returns a [notification scheme](https://confluence.atlassian.com/x/8YdKLg), including the list of events and the recipients who will receive notifications for those events.\n\n**[Permissions](#permissions) required:** Permission to access Jira, however the user must have permission to administer at least one project associated with the notification scheme."
					},
					"response": [
						{
							"name": "Returned if the notification scheme is not found or the user does not have permission to view it.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/notificationscheme/:id?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"notificationscheme",
										":id"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/notificationscheme/:id?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"notificationscheme",
										":id"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/notificationscheme/:id?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"notificationscheme",
										":id"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/notificationscheme/:id?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"notificationscheme",
										":id"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"expand\\\":\\\"notificationSchemeEvents,user,group,projectRole,field,all\\\",\\\"id\\\":10100,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/notificationscheme\\\",\\\"name\\\":\\\"notification scheme name\\\",\\\"description\\\":\\\"description\\\",\\\"notificationSchemeEvents\\\":[{\\\"event\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Issue created\\\",\\\"description\\\":\\\"Event published when an issue is created\\\"},\\\"notifications\\\":[{\\\"id\\\":1,\\\"notificationType\\\":\\\"Group\\\",\\\"parameter\\\":\\\"jira-administrators\\\",\\\"group\\\":{\\\"name\\\":\\\"jira-administrators\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\\\"},\\\"expand\\\":\\\"group\\\"},{\\\"id\\\":2,\\\"notificationType\\\":\\\"CurrentAssignee\\\"},{\\\"id\\\":3,\\\"notificationType\\\":\\\"ProjectRole\\\",\\\"parameter\\\":\\\"10360\\\",\\\"projectRole\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}},\\\"expand\\\":\\\"projectRole\\\"},{\\\"id\\\":4,\\\"notificationType\\\":\\\"EmailAddress\\\",\\\"parameter\\\":\\\"rest-developer@atlassian.com\\\",\\\"emailAddress\\\":\\\"rest-developer@atlassian.com\\\"},{\\\"id\\\":5,\\\"notificationType\\\":\\\"User\\\",\\\"parameter\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"user\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"expand\\\":\\\"user\\\"},{\\\"id\\\":6,\\\"notificationType\\\":\\\"GroupCustomField\\\",\\\"parameter\\\":\\\"customfield_10101\\\",\\\"field\\\":{\\\"id\\\":\\\"customfield_10101\\\",\\\"key\\\":\\\"customfield_10101\\\",\\\"name\\\":\\\"New custom field\\\",\\\"untranslatedName\\\":\\\"New custom field\\\",\\\"custom\\\":true,\\\"orderable\\\":true,\\\"navigable\\\":true,\\\"searchable\\\":true,\\\"clauseNames\\\":[\\\"cf[10101]\\\",\\\"New custom field\\\"],\\\"schema\\\":{\\\"type\\\":\\\"project\\\",\\\"custom\\\":\\\"com.atlassian.jira.plugin.system.customfieldtypes:project\\\",\\\"customId\\\":10101}},\\\"expand\\\":\\\"field\\\"}]},{\\\"event\\\":{\\\"id\\\":20,\\\"name\\\":\\\"Custom event\\\",\\\"description\\\":\\\"Custom event that is published together with an issue created event\\\",\\\"templateEvent\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Issue created\\\",\\\"description\\\":\\\"Event published when an issue is created\\\"}},\\\"notifications\\\":[{\\\"id\\\":1,\\\"notificationType\\\":\\\"Group\\\",\\\"parameter\\\":\\\"jira-administrators\\\",\\\"group\\\":{\\\"name\\\":\\\"jira-administrators\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\\\"},\\\"expand\\\":\\\"group\\\"},{\\\"id\\\":2,\\\"notificationType\\\":\\\"CurrentAssignee\\\"},{\\\"id\\\":3,\\\"notificationType\\\":\\\"ProjectRole\\\",\\\"parameter\\\":\\\"10360\\\",\\\"projectRole\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}},\\\"expand\\\":\\\"projectRole\\\"},{\\\"id\\\":4,\\\"notificationType\\\":\\\"EmailAddress\\\",\\\"parameter\\\":\\\"rest-developer@atlassian.com\\\",\\\"emailAddress\\\":\\\"rest-developer@atlassian.com\\\"},{\\\"id\\\":5,\\\"notificationType\\\":\\\"User\\\",\\\"parameter\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"user\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"expand\\\":\\\"user\\\"},{\\\"id\\\":6,\\\"notificationType\\\":\\\"GroupCustomField\\\",\\\"parameter\\\":\\\"customfield_10101\\\",\\\"field\\\":{\\\"id\\\":\\\"customfield_10101\\\",\\\"key\\\":\\\"customfield_10101\\\",\\\"name\\\":\\\"New custom field\\\",\\\"untranslatedName\\\":\\\"New custom field\\\",\\\"custom\\\":true,\\\"orderable\\\":true,\\\"navigable\\\":true,\\\"searchable\\\":true,\\\"clauseNames\\\":[\\\"cf[10101]\\\",\\\"New custom field\\\"],\\\"schema\\\":{\\\"type\\\":\\\"project\\\",\\\"custom\\\":\\\"com.atlassian.jira.plugin.system.customfieldtypes:project\\\",\\\"customId\\\":10101}},\\\"expand\\\":\\\"field\\\"}]}]}\""
						}
					]
				}
			]
		},
		{
			"name": "Permissions",
			"item": [
				{
					"name": "Get All Permissions",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/permissions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"permissions"
							]
						},
						"description": "Returns all permissions, including:\n\n *  global permissions.\n *  project permissions.\n *  global permissions added by plugins.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissions"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"permissions\\\":{\\\"BULK_CHANGE\\\":{\\\"key\\\":\\\"BULK_CHANGE\\\",\\\"name\\\":\\\"Bulk Change\\\",\\\"type\\\":\\\"GLOBAL\\\",\\\"description\\\":\\\"Ability to modify a collection of issues at once. For example, resolve multiple issues in one step.\\\"}}}\""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissions"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Bulk Permissions",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"projectPermissions\": [\n        {\n            \"permissions\": [\n                \"<string>\"\n            ],\n            \"issues\": [\n                \"<long>\"\n            ],\n            \"projects\": [\n                \"<long>\"\n            ]\n        }\n    ],\n    \"globalPermissions\": [\n        \"<string>\"\n    ],\n    \"accountId\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/permissions/check",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"permissions",
								"check"
							]
						},
						"description": "Returns:\n\n *  for a list of global permissions, the global permissions granted to a user.\n *  for a list of project permissions and lists of projects and issues, for each project permission a list of the projects and issues a user can access or manipulate.\n\nIf no account ID is provided, the operation returns details for the logged in user.\n\nNote that:\n\n *  Invalid project and issue IDs are ignored.\n *  A maximum of 1000 projects and 1000 issues can be checked.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) to check the permissions for other users, otherwise none. However, Connect apps can make a call from the app server to the product to obtain permission details for any user, without admin permission. This Connect app ability doesn't apply to calls made using AP.request() in a browser."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"globalPermissions\": [\n        \"ADMINISTER\"\n    ],\n    \"accountId\": \"5b10a2844c20165700ede21g\",\n    \"projectPermissions\": [\n        {\n            \"projects\": [\n                10001\n            ],\n            \"permissions\": [\n                \"EDIT_ISSUES\"\n            ],\n            \"issues\": [\n                10010,\n                10011,\n                10012,\n                10013,\n                10014\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissions/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissions",
										"check"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"projectPermissions\\\":[{\\\"permission\\\":\\\"EDIT_ISSUES\\\",\\\"issues\\\":[10010,10013,10014],\\\"projects\\\":[10001]}],\\\"globalPermissions\\\":[\\\"ADMINISTER\\\"]}\""
						},
						{
							"name": "Returned if:\n\n *  issue or project IDs are provided without at least one project permission being provided.\n *  an invalid global permission is provided in the global permissions list.\n *  an invalid project permission is provided in the project permissio",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"globalPermissions\": [\n        \"ADMINISTER\"\n    ],\n    \"accountId\": \"5b10a2844c20165700ede21g\",\n    \"projectPermissions\": [\n        {\n            \"projects\": [\n                10001\n            ],\n            \"permissions\": [\n                \"EDIT_ISSUES\"\n            ],\n            \"issues\": [\n                10010,\n                10011,\n                10012,\n                10013,\n                10014\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissions/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissions",
										"check"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[],\\\"errors\\\":{\\\"PERMISSION_123\\\":\\\"Unrecognized permission\\\"}}\""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"globalPermissions\": [\n        \"ADMINISTER\"\n    ],\n    \"accountId\": \"5b10a2844c20165700ede21g\",\n    \"projectPermissions\": [\n        {\n            \"projects\": [\n                10001\n            ],\n            \"permissions\": [\n                \"EDIT_ISSUES\"\n            ],\n            \"issues\": [\n                10010,\n                10011,\n                10012,\n                10013,\n                10014\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissions/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissions",
										"check"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can perform this operation.\\\"],\\\"errors\\\":{}}\""
						}
					]
				},
				{
					"name": "Get Permitted Projects",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"permissions\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/permissions/project",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"permissions",
								"project"
							]
						},
						"description": "Returns all the projects where the user is granted a list of project permissions.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissions\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissions/project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissions",
										"project"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if a project permission is not found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissions\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissions/project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissions",
										"project"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissions\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissions/project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissions",
										"project"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"projects\": [\n  {\n   \"id\": 46671454,\n   \"key\": \"dolore dolor\"\n  },\n  {\n   \"id\": 27528873,\n   \"key\": \"elit cupidatat officia fugiat\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Permission Scheme",
			"item": [
				{
					"name": "Scheme Id}",
					"item": [
						{
							"name": "Permission",
							"item": [
								{
									"name": "Permission Id}",
									"item": [
										{
											"name": "Get Permission Scheme Grant",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission/:permissionId?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"permissionscheme",
														":schemeId",
														"permission",
														":permissionId"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>",
															"description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission."
														}
													],
													"variable": [
														{
															"key": "schemeId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the permission scheme."
														},
														{
															"key": "permissionId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the permission grant."
														}
													]
												},
												"description": "Returns a permission grant.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
											},
											"response": [
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission/:permissionId?expand=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"permissionscheme",
																":schemeId",
																"permission",
																":permissionId"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "schemeId"
																},
																{
																	"key": "permissionId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission/:permissionId?expand=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"permissionscheme",
																":schemeId",
																"permission",
																":permissionId"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "schemeId"
																},
																{
																	"key": "permissionId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000\\\",\\\"holder\\\":{\\\"type\\\":\\\"group\\\",\\\"parameter\\\":\\\"jira-core-users\\\",\\\"expand\\\":\\\"group\\\"},\\\"permission\\\":\\\"ADMINISTER_PROJECTS\\\"}\""
												},
												{
													"name": "Returned if the permission scheme or permission grant is not found or the user does not have the necessary permission.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission/:permissionId?expand=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"permissionscheme",
																":schemeId",
																"permission",
																":permissionId"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "schemeId"
																},
																{
																	"key": "permissionId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Permission Scheme Grant",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission/:permissionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"permissionscheme",
														":schemeId",
														"permission",
														":permissionId"
													],
													"variable": [
														{
															"key": "schemeId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the permission scheme to delete the permission grant from."
														},
														{
															"key": "permissionId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the permission grant to delete."
														}
													]
												},
												"description": "Deletes a permission grant from a permission scheme. See [About permission schemes and grants](#about-permission-schemes) for more details.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the user does not have the necessary permission.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission/:permissionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"permissionscheme",
																":schemeId",
																"permission",
																":permissionId"
															],
															"variable": [
																{
																	"key": "schemeId"
																},
																{
																	"key": "permissionId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission/:permissionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"permissionscheme",
																":schemeId",
																"permission",
																":permissionId"
															],
															"variable": [
																{
																	"key": "schemeId"
																},
																{
																	"key": "permissionId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the permission grant is deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission/:permissionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"permissionscheme",
																":schemeId",
																"permission",
																":permissionId"
															],
															"variable": [
																{
																	"key": "schemeId"
																},
																{
																	"key": "permissionId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if permission grant with the provided ID is not found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission/:permissionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"permissionscheme",
																":schemeId",
																"permission",
																":permissionId"
															],
															"variable": [
																{
																	"key": "schemeId"
																},
																{
																	"key": "permissionId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Permission Scheme Grants",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"permissionscheme",
												":schemeId",
												"permission"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>",
													"description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `user` Returns information about the user who is granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `field` Returns information about the custom field granted the permission.\n *  `all` Returns all expandable information."
												}
											],
											"variable": [
												{
													"key": "schemeId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the permission scheme."
												}
											]
										},
										"description": "Returns all permission grants for a permission scheme.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"permissionscheme",
														":schemeId",
														"permission"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "schemeId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"permissionscheme",
														":schemeId",
														"permission"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "schemeId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"permissions\\\":[{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000\\\",\\\"holder\\\":{\\\"type\\\":\\\"group\\\",\\\"parameter\\\":\\\"jira-core-users\\\",\\\"expand\\\":\\\"group\\\"},\\\"permission\\\":\\\"ADMINISTER_PROJECTS\\\"}],\\\"expand\\\":\\\"user,group,projectRole,field,all\\\"}\""
										},
										{
											"name": "Returned if the permission schemes is not found or the user does not have the necessary permission.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"permissionscheme",
														":schemeId",
														"permission"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "schemeId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create Permission Grant",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"holder\": {\n        \"type\": \"<string>\",\n        \"parameter\": \"<string>\"\n    },\n    \"permission\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"permissionscheme",
												":schemeId",
												"permission"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>",
													"description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `user` Returns information about the user who is granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `field` Returns information about the custom field granted the permission.\n *  `all` Returns all expandable information."
												}
											],
											"variable": [
												{
													"key": "schemeId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the permission scheme in which to create a new permission grant."
												}
											]
										},
										"description": "Creates a permission grant in a permission scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"holder\": {\n        \"parameter\": \"jira-core-users\",\n        \"type\": \"group\"\n    },\n    \"permission\": \"ADMINISTER_PROJECTS\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"permissionscheme",
														":schemeId",
														"permission"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "schemeId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"holder\": {\n        \"parameter\": \"jira-core-users\",\n        \"type\": \"group\"\n    },\n    \"permission\": \"ADMINISTER_PROJECTS\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"permissionscheme",
														":schemeId",
														"permission"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "schemeId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the value for expand is invalid or the same permission grant is present.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"holder\": {\n        \"parameter\": \"jira-core-users\",\n        \"type\": \"group\"\n    },\n    \"permission\": \"ADMINISTER_PROJECTS\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"permissionscheme",
														":schemeId",
														"permission"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "schemeId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the scheme permission is created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"holder\": {\n        \"parameter\": \"jira-core-users\",\n        \"type\": \"group\"\n    },\n    \"permission\": \"ADMINISTER_PROJECTS\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId/permission?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"permissionscheme",
														":schemeId",
														"permission"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "schemeId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000\\\",\\\"holder\\\":{\\\"type\\\":\\\"group\\\",\\\"parameter\\\":\\\"jira-core-users\\\",\\\"expand\\\":\\\"group\\\"},\\\"permission\\\":\\\"ADMINISTER_PROJECTS\\\"}\""
										}
									]
								}
							]
						},
						{
							"name": "Get Permission Scheme",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissionscheme",
										":schemeId"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission."
										}
									],
									"variable": [
										{
											"key": "schemeId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the permission scheme to return."
										}
									]
								},
								"description": "Returns a permission scheme.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"permissionscheme",
												":schemeId"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "schemeId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"permissionscheme",
												":schemeId"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "schemeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000\\\",\\\"name\\\":\\\"Example permission scheme\\\",\\\"description\\\":\\\"description\\\",\\\"permissions\\\":[{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000\\\",\\\"holder\\\":{\\\"type\\\":\\\"group\\\",\\\"parameter\\\":\\\"jira-core-users\\\",\\\"expand\\\":\\\"group\\\"},\\\"permission\\\":\\\"ADMINISTER_PROJECTS\\\"}]}\""
								},
								{
									"name": "Returned if the permission scheme is not found or the user does not have the necessary permission.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"permissionscheme",
												":schemeId"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "schemeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Permission Scheme",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"scope\": {\n        \"type\": \"PROJECT\",\n        \"project\": {\n            \"self\": \"et occaecat ad mollit\",\n            \"id\": \"aliquip laborum dolor\",\n            \"key\": \"deserunt\",\n            \"name\": \"do aliqua\",\n            \"projectTypeKey\": \"business\",\n            \"simplified\": true,\n            \"avatarUrls\": {\n                \"16x16\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"24x24\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"32x32\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"48x48\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"projectCategory\": {\n                \"self\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"description\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"name\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    },\n    \"permissions\": [\n        {\n            \"holder\": {\n                \"type\": \"<string>\",\n                \"parameter\": \"<string>\"\n            },\n            \"permission\": \"<string>\"\n        },\n        {\n            \"holder\": {\n                \"type\": \"<string>\",\n                \"parameter\": \"<string>\"\n            },\n            \"permission\": \"<string>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissionscheme",
										":schemeId"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission."
										}
									],
									"variable": [
										{
											"key": "schemeId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the permission scheme to update."
										}
									]
								},
								"description": "Updates a permission scheme. Below are some important things to note when using this resource:\n\n *  If a permissions list is present in the request, then it is set in the permission scheme, overwriting *all existing* grants.\n *  If you want to update only the name and description, then do not send a permissions list in the request.\n *  Sending an empty list will remove all permission grants from the permission scheme.\n\nIf you want to add or delete a permission grant instead of updating the whole list, see [Create permission grant](#api-rest-api-3-permissionscheme-schemeId-permission-post) or [Delete permission scheme entity](#api-rest-api-3-permissionscheme-schemeId-permission-permissionId-delete).\n\nSee [About permission schemes and grants](#about-permission-schemes) for more details.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"permissions\": [\n        {\n            \"holder\": {\n                \"parameter\": \"jira-core-users\",\n                \"type\": \"group\"\n            },\n            \"permission\": \"ADMINISTER_PROJECTS\"\n        }\n    ],\n    \"name\": \"Example permission scheme\",\n    \"description\": \"description\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"permissionscheme",
												":schemeId"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "schemeId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the permission scheme is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"permissions\": [\n        {\n            \"holder\": {\n                \"parameter\": \"jira-core-users\",\n                \"type\": \"group\"\n            },\n            \"permission\": \"ADMINISTER_PROJECTS\"\n        }\n    ],\n    \"name\": \"Example permission scheme\",\n    \"description\": \"description\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"permissionscheme",
												":schemeId"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "schemeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  the user does not have the necessary permission to update permission schemes.\n *  the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be updated on free plans.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"permissions\": [\n        {\n            \"holder\": {\n                \"parameter\": \"jira-core-users\",\n                \"type\": \"group\"\n            },\n            \"permission\": \"ADMINISTER_PROJECTS\"\n        }\n    ],\n    \"name\": \"Example permission scheme\",\n    \"description\": \"description\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"permissionscheme",
												":schemeId"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "schemeId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the scheme is updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"permissions\": [\n        {\n            \"holder\": {\n                \"parameter\": \"jira-core-users\",\n                \"type\": \"group\"\n            },\n            \"permission\": \"ADMINISTER_PROJECTS\"\n        }\n    ],\n    \"name\": \"Example permission scheme\",\n    \"description\": \"description\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"permissionscheme",
												":schemeId"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "schemeId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000\\\",\\\"name\\\":\\\"Example permission scheme\\\",\\\"description\\\":\\\"description\\\",\\\"permissions\\\":[{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000\\\",\\\"holder\\\":{\\\"type\\\":\\\"group\\\",\\\"parameter\\\":\\\"jira-core-users\\\",\\\"expand\\\":\\\"group\\\"},\\\"permission\\\":\\\"ADMINISTER_PROJECTS\\\"}]}\""
								}
							]
						},
						{
							"name": "Delete Permission Scheme",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissionscheme",
										":schemeId"
									],
									"variable": [
										{
											"key": "schemeId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the permission scheme being deleted."
										}
									]
								},
								"description": "Deletes a permission scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the permission scheme is deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"permissionscheme",
												":schemeId"
											],
											"variable": [
												{
													"key": "schemeId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the permission scheme is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"permissionscheme",
												":schemeId"
											],
											"variable": [
												{
													"key": "schemeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"permissionscheme",
												":schemeId"
											],
											"variable": [
												{
													"key": "schemeId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/permissionscheme/:schemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"permissionscheme",
												":schemeId"
											],
											"variable": [
												{
													"key": "schemeId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get All Permission Schemes",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/permissionscheme?expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"permissionscheme"
							],
							"query": [
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission."
								}
							]
						},
						"description": "Returns all permission schemes.\n\n### About permission schemes and grants ###\n\nA permission scheme is a collection of permission grants. A permission grant consists of a `holder` and a `permission`.\n\n#### Holder object ####\n\nThe `holder` object contains information about the user or group being granted the permission. For example, the *Administer projects* permission is granted to a group named *Teams in space administrators*. In this case, the type is `\"type\": \"group\"`, and the parameter is the group name, `\"parameter\": \"Teams in space administrators\"`. The `holder` object is defined by the following properties:\n\n *  `type` Identifies the user or group (see the list of types below).\n *  `parameter` The value of this property depends on the `type`. For example, if the `type` is a group, then you need to specify the group name.\n\nThe following `types` are available. The expected values for the `parameter` are given in parenthesis (some `types` may not have a `parameter`):\n\n *  `anyone` Grant for anonymous users.\n *  `applicationRole` Grant for users with access to the specified application (application name). See [Update product access settings](https://confluence.atlassian.com/x/3YxjL) for more information.\n *  `assignee` Grant for the user currently assigned to an issue.\n *  `group` Grant for the specified group (group name).\n *  `groupCustomField` Grant for a user in the group selected in the specified custom field (custom field ID).\n *  `projectLead` Grant for a project lead.\n *  `projectRole` Grant for the specified project role (project role ID).\n *  `reporter` Grant for the user who reported the issue.\n *  `sd.customer.portal.only` Jira Service Desk only. Grants customers permission to access the customer portal but not Jira. See [Customizing Jira Service Desk permissions](https://confluence.atlassian.com/x/24dKLg) for more information.\n *  `user` Grant for the specified user (user ID - historically this was the userkey but that is deprecated and the account ID should be used).\n *  `userCustomField` Grant for a user selected in the specified custom field (custom field ID).\n\n#### Built-in permissions ####\n\nThe [built-in Jira permissions](https://confluence.atlassian.com/x/yodKLg) are listed below. Apps can also define custom permissions. See the [project permission](https://developer.atlassian.com/cloud/jira/platform/modules/project-permission/) and [global permission](https://developer.atlassian.com/cloud/jira/platform/modules/global-permission/) module documentation for more information.\n\n**Project permissions**\n\n *  `ADMINISTER_PROJECTS`\n *  `BROWSE_PROJECTS`\n *  `MANAGE_SPRINTS_PERMISSION` (Jira Software only)\n *  `SERVICEDESK_AGENT` (Jira Service Desk only)\n *  `VIEW_DEV_TOOLS` (Jira Software only)\n *  `VIEW_READONLY_WORKFLOW`\n\n**Issue permissions**\n\n *  `ASSIGNABLE_USER`\n *  `ASSIGN_ISSUES`\n *  `CLOSE_ISSUES`\n *  `CREATE_ISSUES`\n *  `DELETE_ISSUES`\n *  `EDIT_ISSUES`\n *  `LINK_ISSUES`\n *  `MODIFY_REPORTER`\n *  `MOVE_ISSUES`\n *  `RESOLVE_ISSUES`\n *  `SCHEDULE_ISSUES`\n *  `SET_ISSUE_SECURITY`\n *  `TRANSITION_ISSUES`\n\n**Voters and watchers permissions**\n\n *  `MANAGE_WATCHERS`\n *  `VIEW_VOTERS_AND_WATCHERS`\n\n**Comments permissions**\n\n *  `ADD_COMMENTS`\n *  `DELETE_ALL_COMMENTS`\n *  `DELETE_OWN_COMMENTS`\n *  `EDIT_ALL_COMMENTS`\n *  `EDIT_OWN_COMMENTS`\n\n**Attachments permissions**\n\n *  `CREATE_ATTACHMENTS`\n *  `DELETE_ALL_ATTACHMENTS`\n *  `DELETE_OWN_ATTACHMENTS`\n\n**Time tracking permissions**\n\n *  `DELETE_ALL_WORKLOGS`\n *  `DELETE_OWN_WORKLOGS`\n *  `EDIT_ALL_WORKLOGS`\n *  `EDIT_OWN_WORKLOGS`\n *  `WORK_ON_ISSUES`\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissionscheme?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissionscheme"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"permissionSchemes\\\":[{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000\\\",\\\"name\\\":\\\"Example permission scheme\\\",\\\"description\\\":\\\"description\\\"}]}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissionscheme?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissionscheme"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Permission Scheme",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"scope\": {\n        \"type\": \"TEMPLATE\",\n        \"project\": {\n            \"self\": \"pariatur Ut et fugiat cillum\",\n            \"id\": \"commodo mollit\",\n            \"key\": \"dolore laboris minim ex\",\n            \"name\": \"Ut est consectetur exercitation\",\n            \"projectTypeKey\": \"service_desk\",\n            \"simplified\": true,\n            \"avatarUrls\": {\n                \"16x16\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"24x24\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"32x32\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"48x48\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            },\n            \"projectCategory\": {\n                \"self\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"id\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"description\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                },\n                \"name\": {\n                    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                }\n            }\n        }\n    },\n    \"permissions\": [\n        {\n            \"holder\": {\n                \"type\": \"<string>\",\n                \"parameter\": \"<string>\"\n            },\n            \"permission\": \"<string>\"\n        },\n        {\n            \"holder\": {\n                \"type\": \"<string>\",\n                \"parameter\": \"<string>\"\n            },\n            \"permission\": \"<string>\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/permissionscheme?expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"permissionscheme"
							],
							"query": [
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission."
								}
							]
						},
						"description": "Creates a new permission scheme. You can create a permission scheme with or without defining a set of permission grants.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissions\": [\n        {\n            \"holder\": {\n                \"parameter\": \"jira-core-users\",\n                \"type\": \"group\"\n            },\n            \"permission\": \"ADMINISTER_PROJECTS\"\n        }\n    ],\n    \"name\": \"Example permission scheme\",\n    \"description\": \"description\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissionscheme?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissionscheme"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissions\": [\n        {\n            \"holder\": {\n                \"parameter\": \"jira-core-users\",\n                \"type\": \"group\"\n            },\n            \"permission\": \"ADMINISTER_PROJECTS\"\n        }\n    ],\n    \"name\": \"Example permission scheme\",\n    \"description\": \"description\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissionscheme?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissionscheme"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the permission scheme is created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissions\": [\n        {\n            \"holder\": {\n                \"parameter\": \"jira-core-users\",\n                \"type\": \"group\"\n            },\n            \"permission\": \"ADMINISTER_PROJECTS\"\n        }\n    ],\n    \"name\": \"Example permission scheme\",\n    \"description\": \"description\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissionscheme?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissionscheme"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000\\\",\\\"name\\\":\\\"Example permission scheme\\\",\\\"description\\\":\\\"description\\\",\\\"permissions\\\":[{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/permission/10000\\\",\\\"holder\\\":{\\\"type\\\":\\\"group\\\",\\\"parameter\\\":\\\"jira-core-users\\\",\\\"expand\\\":\\\"group\\\"},\\\"permission\\\":\\\"ADMINISTER_PROJECTS\\\"}]}\""
						},
						{
							"name": "Returned if the user does not have the necessary permission or the feature is not available in the Jira plan.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissions\": [\n        {\n            \"holder\": {\n                \"parameter\": \"jira-core-users\",\n                \"type\": \"group\"\n            },\n            \"permission\": \"ADMINISTER_PROJECTS\"\n        }\n    ],\n    \"name\": \"Example permission scheme\",\n    \"description\": \"description\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/permissionscheme?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"permissionscheme"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Priority",
			"item": [
				{
					"name": "Get Priorities",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/priority",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"priority"
							]
						},
						"description": "Returns the list of all issue priorities.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/priority",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"priority"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/priority",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"priority"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/priority/3\\\",\\\"statusColor\\\":\\\"#009900\\\",\\\"description\\\":\\\"Major loss of function.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/priorities/major.png\\\",\\\"name\\\":\\\"Major\\\",\\\"id\\\":\\\"1\\\"},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/priority/5\\\",\\\"statusColor\\\":\\\"#cfcfcf\\\",\\\"description\\\":\\\"Very little impact.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/priorities/trivial.png\\\",\\\"name\\\":\\\"Trivial\\\",\\\"id\\\":\\\"2\\\"}]\""
						}
					]
				},
				{
					"name": "Get Priority",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/priority/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"priority",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the issue priority."
								}
							]
						},
						"description": "Returns an issue priority.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/priority/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"priority",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/priority/3\\\",\\\"statusColor\\\":\\\"#009900\\\",\\\"description\\\":\\\"Major loss of function.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/priorities/major.png\\\",\\\"name\\\":\\\"Major\\\",\\\"id\\\":\\\"1\\\"}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/priority/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"priority",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the issue priority is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/priority/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"priority",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Project Validate",
			"item": [
				{
					"name": "Validate Project Key",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/projectvalidate/key?key=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"projectvalidate",
								"key"
							],
							"query": [
								{
									"key": "key",
									"value": "<string>",
									"description": "The project key."
								}
							]
						},
						"description": "Validates a project key by confirming the key is a valid string and not in use.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectvalidate/key?key=HSP",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectvalidate",
										"key"
									],
									"query": [
										{
											"key": "key",
											"value": "HSP"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[],\\\"errors\\\":{\\\"projectKey\\\":\\\"A project with that project key already exists.\\\"}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectvalidate/key?key=HSP",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectvalidate",
										"key"
									],
									"query": [
										{
											"key": "key",
											"value": "HSP"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Valid Project Key",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/projectvalidate/validProjectKey?key=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"projectvalidate",
								"validProjectKey"
							],
							"query": [
								{
									"key": "key",
									"value": "<string>",
									"description": "The project key."
								}
							]
						},
						"description": "Validates a project key and, if the key is invalid or in use, generates a valid random string for the project key.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectvalidate/validProjectKey?key=HSP",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectvalidate",
										"validProjectKey"
									],
									"query": [
										{
											"key": "key",
											"value": "HSP"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectvalidate/validProjectKey?key=HSP",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectvalidate",
										"validProjectKey"
									],
									"query": [
										{
											"key": "key",
											"value": "HSP"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\\\"VPNE\\\"\""
						}
					]
				},
				{
					"name": "Get Valid Project Name",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/projectvalidate/validProjectName?name=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"projectvalidate",
								"validProjectName"
							],
							"query": [
								{
									"key": "name",
									"value": "<string>",
									"description": "(Required) The project name."
								}
							]
						},
						"description": "Checks that a project name isn't in use. If the name isn't in use, the passed string is returned. If the name is in use, this operation attempts to generate a valid project name based on the one supplied, usually by adding a sequence number. If a valid project name cannot be generated, a 404 response is returned.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectvalidate/validProjectName?name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectvalidate",
										"validProjectName"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectvalidate/validProjectName?name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectvalidate",
										"validProjectName"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectvalidate/validProjectName?name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectvalidate",
										"validProjectName"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"\\\"Valid Project Name Example\\\"\""
						},
						{
							"name": "Returned if a valid project name cannot be generated.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectvalidate/validProjectName?name=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectvalidate",
										"validProjectName"
									],
									"query": [
										{
											"key": "name",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Project",
			"item": [
				{
					"name": "Type",
					"item": [
						{
							"name": "Project Type Key}",
							"item": [
								{
									"name": "Get Project Type By Key",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/type/:projectTypeKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												"type",
												":projectTypeKey"
											],
											"variable": [
												{
													"key": "projectTypeKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The key of the project type."
												}
											]
										},
										"description": "Returns a [project type](https://confluence.atlassian.com/x/Var1Nw).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/type/:projectTypeKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														"type",
														":projectTypeKey"
													],
													"variable": [
														{
															"key": "projectTypeKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the project type is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/type/:projectTypeKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														"type",
														":projectTypeKey"
													],
													"variable": [
														{
															"key": "projectTypeKey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/type/:projectTypeKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														"type",
														":projectTypeKey"
													],
													"variable": [
														{
															"key": "projectTypeKey"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"key\\\":\\\"business\\\",\\\"formattedKey\\\":\\\"Business\\\",\\\"descriptionI18nKey\\\":\\\"jira.project.type.business.description\\\",\\\"icon\\\":\\\"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+\\\",\\\"color\\\":\\\"#FFFFFF\\\"}\""
										}
									]
								},
								{
									"name": "Get Accessible Project Type By Key",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/type/:projectTypeKey/accessible",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												"type",
												":projectTypeKey",
												"accessible"
											],
											"variable": [
												{
													"key": "projectTypeKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The key of the project type."
												}
											]
										},
										"description": "Returns a [project type](https://confluence.atlassian.com/x/Var1Nw) if it is accessible to the user.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
									},
									"response": [
										{
											"name": "Returned if the project type is not accessible to the user.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/type/:projectTypeKey/accessible",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														"type",
														":projectTypeKey",
														"accessible"
													],
													"variable": [
														{
															"key": "projectTypeKey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/type/:projectTypeKey/accessible",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														"type",
														":projectTypeKey",
														"accessible"
													],
													"variable": [
														{
															"key": "projectTypeKey"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"key\\\":\\\"business\\\",\\\"formattedKey\\\":\\\"Business\\\",\\\"descriptionI18nKey\\\":\\\"jira.project.type.business.description\\\",\\\"icon\\\":\\\"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+\\\",\\\"color\\\":\\\"#FFFFFF\\\"}\""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/type/:projectTypeKey/accessible",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														"type",
														":projectTypeKey",
														"accessible"
													],
													"variable": [
														{
															"key": "projectTypeKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get All Project Types",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										"type"
									]
								},
								"description": "Returns all [project types](https://confluence.atlassian.com/x/Var1Nw), whether or not the instance has a valid license for each type.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												"type"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/type",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												"type"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"[{\\\"key\\\":\\\"business\\\",\\\"formattedKey\\\":\\\"Business\\\",\\\"descriptionI18nKey\\\":\\\"jira.project.type.business.description\\\",\\\"icon\\\":\\\"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+\\\",\\\"color\\\":\\\"#FFFFFF\\\"},{\\\"key\\\":\\\"software\\\",\\\"formattedKey\\\":\\\"Software\\\",\\\"descriptionI18nKey\\\":\\\"jira.project.type.software.description\\\",\\\"icon\\\":\\\"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+\\\",\\\"color\\\":\\\"#AAAAAA\\\"}]\""
								}
							]
						},
						{
							"name": "Get Licensed Project Types",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/type/accessible",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										"type",
										"accessible"
									]
								},
								"description": "Returns all [project types](https://confluence.atlassian.com/x/Var1Nw) with a valid license."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/type/accessible",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												"type",
												"accessible"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"[{\\\"key\\\":\\\"business\\\",\\\"formattedKey\\\":\\\"Business\\\",\\\"descriptionI18nKey\\\":\\\"jira.project.type.business.description\\\",\\\"icon\\\":\\\"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+\\\",\\\"color\\\":\\\"#FFFFFF\\\"},{\\\"key\\\":\\\"software\\\",\\\"formattedKey\\\":\\\"Software\\\",\\\"descriptionI18nKey\\\":\\\"jira.project.type.software.description\\\",\\\"icon\\\":\\\"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAxOC4xLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCAzMiAzMiIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgMzIgMzIiIHhtbDpzcGFjZT0icHJlc2VydmUiPg0KPGc+DQoJPHBhdGggZmlsbD0iIzY2NjY2NiIgZD0iTTE2LDBDNy4yLDAsMCw3LjIsMCwxNmMwLDguOCw3LjIsMTYsMTYsMTZjOC44LDAsMTYtNy4yLDE2LTE2QzMyLDcuMiwyNC44LDAsMTYsMHogTTI1LjcsMjMNCgkJYzAsMS44LTEuNCwzLjItMy4yLDMuMkg5LjJDNy41LDI2LjIsNiwyNC44LDYsMjNWOS44QzYsOCw3LjUsNi42LDkuMiw2LjZoMTMuMmMwLjIsMCwwLjQsMCwwLjcsMC4xbC0yLjgsMi44SDkuMg0KCQlDOSw5LjQsOC44LDkuNiw4LjgsOS44VjIzYzAsMC4yLDAuMiwwLjQsMC40LDAuNGgxMy4yYzAuMiwwLDAuNC0wLjIsMC40LTAuNHYtNS4zbDIuOC0yLjhWMjN6IE0xNS45LDIxLjNMMTEsMTYuNGwyLTJsMi45LDIuOQ0KCQlMMjYuNCw2LjhjMC42LDAuNywxLjIsMS41LDEuNywyLjNMMTUuOSwyMS4zeiIvPg0KPC9nPg0KPC9zdmc+\\\",\\\"color\\\":\\\"#AAAAAA\\\"}]\""
								}
							]
						}
					]
				},
				{
					"name": "Project Id Or Key}",
					"item": [
						{
							"name": "Avatar",
							"item": [
								{
									"name": "Set Project Avatar",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"avatar"
											],
											"variable": [
												{
													"key": "projectIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID or (case-sensitive) key of the project."
												}
											]
										},
										"description": "Sets the avatar displayed for a project.\n\nUse [Load project avatar](#api-rest-api-3-project-projectIdOrKey-avatar2-post) to store avatars against the project, before using this operation to set the displayed avatar.\n\n**[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg)."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"10010\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"avatar"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"10010\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"avatar"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Returned if the user does not have permission to administer the project.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"10010\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"avatar"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the project or avatar is not found or the user does not have permission to view the project.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": \"10010\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"avatar"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Project Avatar",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"avatar",
												":id"
											],
											"variable": [
												{
													"key": "projectIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The project ID or (case-sensitive) key."
												},
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the avatar."
												}
											]
										},
										"description": "Deletes a custom avatar from a project. Note that system avatars cannot be deleted.\n\n**[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg)."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"avatar",
														":id"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"avatar",
														":id"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the project or avatar is not found or the user does not have permission to view the project.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"avatar",
														":id"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the avatar is a system avatar or the user does not have permission to administer the project.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"avatar",
														":id"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														},
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Properties",
							"item": [
								{
									"name": "Property Key}",
									"item": [
										{
											"name": "Get Project Property",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "projectIdOrKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID or project key (case sensitive)."
														},
														{
															"key": "propertyKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project property key. Use [Get project property keys](#api-rest-api-3-project-projectIdOrKey-properties-get) to get a list of all project property keys."
														}
													]
												},
												"description": "Returns the value of a [project property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the property."
											},
											"response": [
												{
													"name": "Returned if the authentication credentials are incorrect.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the project or property is not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the user does not have permission to view the project.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"key\\\":\\\"issue.support\\\",\\\"value\\\":{\\\"system.conversation.id\\\":\\\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\\\",\\\"system.support.time\\\":\\\"1m\\\"}}\""
												}
											]
										},
										{
											"name": "Set Project Property",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "projectIdOrKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID or project key (case sensitive)."
														},
														{
															"key": "propertyKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The key of the project property. The maximum length is 255 characters."
														}
													]
												},
												"description": "Sets the value of the [project property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties). You can use project properties to store custom data against the project.\n\nThe value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project in which the property is created."
											},
											"response": [
												{
													"name": "Returned if the user does not have permission to administer the project.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"number\": 5,\n    \"string\": \"string-value\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the authentication credentials are incorrect.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"number\": 5,\n    \"string\": \"string-value\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the project property is created.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"number\": 5,\n    \"string\": \"string-value\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Returned if the project property is updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"number\": 5,\n    \"string\": \"string-value\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Returned if the project is not found.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"number\": 5,\n    \"string\": \"string-value\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the project key or id is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"number\": 5,\n    \"string\": \"string-value\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Project Property",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"properties",
														":propertyKey"
													],
													"variable": [
														{
															"key": "projectIdOrKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID or project key (case sensitive)."
														},
														{
															"key": "propertyKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project property key. Use [Get project property keys](#api-rest-api-3-project-projectIdOrKey-properties-get) to get a list of all project property keys."
														}
													]
												},
												"description": "Deletes the [property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties) from a project.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the property."
											},
											"response": [
												{
													"name": "Returned if the project or property is not found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the project property is deleted.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the user does not have permission to administer the project.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the authentication credentials are incorrect.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is not valid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"properties",
																":propertyKey"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "propertyKey"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Project Property Keys",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"properties"
											],
											"variable": [
												{
													"key": "projectIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The project ID or project key (case sensitive)."
												}
											]
										},
										"description": "Returns all [project property](https://developer.atlassian.com/cloud/jira/platform/storing-data-without-a-database/#a-id-jira-entity-properties-a-jira-entity-properties) keys for the project.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"properties"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the project is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"properties"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"properties"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"keys\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\\\",\\\"key\\\":\\\"issue.support\\\"}]}\""
										},
										{
											"name": "Returned if the user does not have permission to view the project.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"properties"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is not valid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/properties",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"properties"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Role",
							"item": [
								{
									"name": "Id}",
									"item": [
										{
											"name": "Get Project Role For Project",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"role",
														":id"
													],
													"variable": [
														{
															"key": "projectIdOrKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID or project key (case sensitive)."
														},
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs."
														}
													]
												},
												"description": "Returns a project role's details and actors associated with the project. The list of actors is sorted by display name.\n\nTo check whether a user belongs to a role based on their group memberships, use [Get user](#api-rest-api-3-user-get) with the `groups` expand parameter selected. Then check whether the user keys and groups match with the actors returned for the project.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if:\n\n *  the project or project role is not found.\n *  the user does not have administrative permission.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is not valid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}\""
												}
											]
										},
										{
											"name": "Set Actors For Project Role",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"categorisedActors\": \"<object>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"role",
														":id"
													],
													"variable": [
														{
															"key": "projectIdOrKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID or project key (case sensitive)."
														},
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs."
														}
													]
												},
												"description": "Sets the actors for a project role for a project, replacing all existing actors.\n\nTo add actors to the project without overwriting the existing list, use [Add actors to project role](#api-rest-api-3-project-projectIdOrKey-role-id-post).\n\n**[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if:\n\n *  the project is not found.\n *  a user or group is not found.\n *  a group or user is not active.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"categorisedActors\": {\n        \"atlassian-user-role-actor\": [\n            \"12345678-9abc-def1-2345-6789abcdef12\"\n        ],\n        \"atlassian-group-role-actor\": [\n            \"jira-developers\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is not valid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"categorisedActors\": {\n        \"atlassian-user-role-actor\": [\n            \"12345678-9abc-def1-2345-6789abcdef12\"\n        ],\n        \"atlassian-group-role-actor\": [\n            \"jira-developers\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful. The complete list of actors for the project is returned.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"categorisedActors\": {\n        \"atlassian-user-role-actor\": [\n            \"12345678-9abc-def1-2345-6789abcdef12\"\n        ],\n        \"atlassian-group-role-actor\": [\n            \"jira-developers\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}\""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing or if the calling user lacks administrative permissions for the project.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"categorisedActors\": {\n        \"atlassian-user-role-actor\": [\n            \"12345678-9abc-def1-2345-6789abcdef12\"\n        ],\n        \"atlassian-group-role-actor\": [\n            \"jira-developers\"\n        ]\n    }\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Add Actors To Project Role",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"user\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"group\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"role",
														":id"
													],
													"variable": [
														{
															"key": "projectIdOrKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID or project key (case sensitive)."
														},
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs."
														}
													]
												},
												"description": "Adds actors to a project role for the project.\n\nTo replace all actors for the project, use [Set actors for project role](#api-rest-api-3-project-projectIdOrKey-role-id-put).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if:\n\n *  the project is not found.\n *  the user or group is not found.\n *  the group or user is not active.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"group\": [\n        \"jira-developers\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing or if the calling user lacks administrative permissions for the project.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"group\": [\n        \"jira-developers\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful. The complete list of actors for the project is returned.\n\nFor example, the cURL request above adds a group, *jira-developers*. For the response below to be returned as a result of that request, the user *Mia Krystof*",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"group\": [\n        \"jira-developers\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}\""
												},
												{
													"name": "Returned if the request is not valid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"group\": [\n        \"jira-developers\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Actors From Project Role",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id?user=<string>&group=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"role",
														":id"
													],
													"query": [
														{
															"key": "user",
															"value": "<string>",
															"description": "The user account ID of the user to remove from the project role."
														},
														{
															"key": "group",
															"value": "<string>",
															"description": "The name of the group to remove from the project role."
														}
													],
													"variable": [
														{
															"key": "projectIdOrKey",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID or project key (case sensitive)."
														},
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs."
														}
													]
												},
												"description": "Deletes actors from a project role for the project.\n\nTo remove default actors from the project role, use [Delete default actors from project role](#api-rest-api-3-role-id-actors-delete).\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id?user=5b10ac8d82e05b22cc7d4ef5&group=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"query": [
																{
																	"key": "user",
																	"value": "5b10ac8d82e05b22cc7d4ef5"
																},
																{
																	"key": "group",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is not valid.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id?user=5b10ac8d82e05b22cc7d4ef5&group=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"query": [
																{
																	"key": "user",
																	"value": "5b10ac8d82e05b22cc7d4ef5"
																},
																{
																	"key": "group",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if:\n\n *  the project or project role is not found.\n *  the calling user does not have administrative permission.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role/:id?user=5b10ac8d82e05b22cc7d4ef5&group=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"project",
																":projectIdOrKey",
																"role",
																":id"
															],
															"query": [
																{
																	"key": "user",
																	"value": "5b10ac8d82e05b22cc7d4ef5"
																},
																{
																	"key": "group",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "projectIdOrKey"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Project Roles For Project",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"role"
											],
											"variable": [
												{
													"key": "projectIdOrKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The project ID or project key (case sensitive)."
												}
											]
										},
										"description": "Returns a list of [project roles](https://confluence.atlassian.com/x/3odKLg) for the project returning the name and self URL for each role.\n\nNote that all project roles are shared with all projects in Jira Cloud. See [Get all project roles](#api-rest-api-3-role-get) for more information.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for any project on the site or *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing or if the user lacks administrative permissions for the project.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"role"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the project is not found or or if the user does not have administrative permissions for the project.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"role"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/role",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectIdOrKey",
														"role"
													],
													"variable": [
														{
															"key": "projectIdOrKey"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"Administrators\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10002\\\",\\\"Users\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10001\\\",\\\"Developers\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10000\\\"}\""
										}
									]
								}
							]
						},
						{
							"name": "Get Project",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?expand=<string>&properties=<string>&properties=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that the project description, issue types, and project lead are included in all responses by default. Expand options include:\n\n *  `description` The project description.\n *  `issueTypes` The issue types associated with the project.\n *  `lead` The project lead.\n *  `projectKeys` All project keys associated with the project.\n *  `issueTypeHierarchy` The project issue type hierarchy."
										},
										{
											"key": "properties",
											"value": "<string>",
											"description": "A list of project properties to return for the project. This parameter accepts a comma-separated list."
										},
										{
											"key": "properties",
											"value": "<string>",
											"description": "A list of project properties to return for the project. This parameter accepts a comma-separated list."
										}
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Returns the [project details](https://confluence.atlassian.com/x/ahLpNw) for a project.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?expand=<string>&properties=<string>&properties=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												},
												{
													"key": "properties",
													"value": "<string>"
												},
												{
													"key": "properties",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?expand=<string>&properties=<string>&properties=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												},
												{
													"key": "properties",
													"value": "<string>"
												},
												{
													"key": "properties",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"description\\\":\\\"This project was created as an example for REST.\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"components\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Component 1\\\",\\\"description\\\":\\\"This is a Jira component\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"assignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"realAssigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"realAssignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"isAssigneeTypeValid\\\":false,\\\"project\\\":\\\"HSP\\\",\\\"projectId\\\":10000}],\\\"issueTypes\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/3\\\",\\\"id\\\":\\\"3\\\",\\\"description\\\":\\\"A task that needs to be done.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Task\\\",\\\"subtask\\\":false,\\\"avatarId\\\":1},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/1\\\",\\\"id\\\":\\\"1\\\",\\\"description\\\":\\\"A problem with the software.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Bug\\\",\\\"subtask\\\":false,\\\"avatarId\\\":10002,\\\"entityId\\\":\\\"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2\\\",\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}],\\\"url\\\":\\\"https://www.example.com\\\",\\\"email\\\":\\\"from-jira@example.com\\\",\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"versions\\\":[],\\\"name\\\":\\\"Example\\\",\\\"roles\\\":{\\\"Developers\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX/role/10000\\\"},\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"properties\\\":{\\\"propertyKey\\\":\\\"propertyValue\\\"},\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}}\""
								},
								{
									"name": "Returned if the project is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?expand=<string>&properties=<string>&properties=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												},
												{
													"key": "properties",
													"value": "<string>"
												},
												{
													"key": "properties",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Project",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectTypeKey\": \"<string>\",\n    \"projectTemplateKey\": \"<string>\",\n    \"description\": \"<string>\",\n    \"lead\": \"<string>\",\n    \"leadAccountId\": \"<string>\",\n    \"url\": \"<string>\",\n    \"assigneeType\": \"<string>\",\n    \"avatarId\": \"<long>\",\n    \"issueSecurityScheme\": \"<long>\",\n    \"permissionScheme\": \"<long>\",\n    \"notificationScheme\": \"<long>\",\n    \"categoryId\": \"<long>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that the project description, issue types, and project lead are included in all responses by default. Expand options include:\n\n *  `description` The project description.\n *  `issueTypes` The issue types associated with the project.\n *  `lead` The project lead.\n *  `projectKeys` All project keys associated with the project."
										}
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Updates the [project details](https://confluence.atlassian.com/x/ahLpNw) of a project.\n\nAll parameters are optional in the body of the request.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the project is updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"notificationScheme\": 10021,\n    \"description\": \"Example Project description\",\n    \"lead\": \"Charlie\",\n    \"url\": \"http://atlassian.com\",\n    \"projectTemplateKey\": \"com.atlassian.jira-core-project-templates:jira-core-simplified-process-control\",\n    \"avatarId\": 10200,\n    \"issueSecurityScheme\": 10001,\n    \"name\": \"Example\",\n    \"permissionScheme\": 10011,\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"projectTypeKey\": \"business\",\n    \"key\": \"EX\",\n    \"categoryId\": 10120\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"description\\\":\\\"This project was created as an example for REST.\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"components\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Component 1\\\",\\\"description\\\":\\\"This is a Jira component\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"assignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"realAssigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"realAssignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"isAssigneeTypeValid\\\":false,\\\"project\\\":\\\"HSP\\\",\\\"projectId\\\":10000}],\\\"issueTypes\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/3\\\",\\\"id\\\":\\\"3\\\",\\\"description\\\":\\\"A task that needs to be done.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Task\\\",\\\"subtask\\\":false,\\\"avatarId\\\":1},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/1\\\",\\\"id\\\":\\\"1\\\",\\\"description\\\":\\\"A problem with the software.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Bug\\\",\\\"subtask\\\":false,\\\"avatarId\\\":10002,\\\"entityId\\\":\\\"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2\\\",\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}],\\\"url\\\":\\\"https://www.example.com\\\",\\\"email\\\":\\\"from-jira@example.com\\\",\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"versions\\\":[],\\\"name\\\":\\\"Example\\\",\\\"roles\\\":{\\\"Developers\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX/role/10000\\\"},\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"properties\\\":{\\\"propertyKey\\\":\\\"propertyValue\\\"},\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}}\""
								},
								{
									"name": "Returned if the project is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"notificationScheme\": 10021,\n    \"description\": \"Example Project description\",\n    \"lead\": \"Charlie\",\n    \"url\": \"http://atlassian.com\",\n    \"projectTemplateKey\": \"com.atlassian.jira-core-project-templates:jira-core-simplified-process-control\",\n    \"avatarId\": 10200,\n    \"issueSecurityScheme\": 10001,\n    \"name\": \"Example\",\n    \"permissionScheme\": 10011,\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"projectTypeKey\": \"business\",\n    \"key\": \"EX\",\n    \"categoryId\": 10120\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  the user does not have the necessary permission to update project details.\n *  the permission scheme is being changed and the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be changed on free plans.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"notificationScheme\": 10021,\n    \"description\": \"Example Project description\",\n    \"lead\": \"Charlie\",\n    \"url\": \"http://atlassian.com\",\n    \"projectTemplateKey\": \"com.atlassian.jira-core-project-templates:jira-core-simplified-process-control\",\n    \"avatarId\": 10200,\n    \"issueSecurityScheme\": 10001,\n    \"name\": \"Example\",\n    \"permissionScheme\": 10011,\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"projectTypeKey\": \"business\",\n    \"key\": \"EX\",\n    \"categoryId\": 10120\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"notificationScheme\": 10021,\n    \"description\": \"Example Project description\",\n    \"lead\": \"Charlie\",\n    \"url\": \"http://atlassian.com\",\n    \"projectTemplateKey\": \"com.atlassian.jira-core-project-templates:jira-core-simplified-process-control\",\n    \"avatarId\": 10200,\n    \"issueSecurityScheme\": 10001,\n    \"name\": \"Example\",\n    \"permissionScheme\": 10011,\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"projectTypeKey\": \"business\",\n    \"key\": \"EX\",\n    \"categoryId\": 10120\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"notificationScheme\": 10021,\n    \"description\": \"Example Project description\",\n    \"lead\": \"Charlie\",\n    \"url\": \"http://atlassian.com\",\n    \"projectTemplateKey\": \"com.atlassian.jira-core-project-templates:jira-core-simplified-process-control\",\n    \"avatarId\": 10200,\n    \"issueSecurityScheme\": 10001,\n    \"name\": \"Example\",\n    \"permissionScheme\": 10011,\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"projectTypeKey\": \"business\",\n    \"key\": \"EX\",\n    \"categoryId\": 10120\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Project",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?enableUndo=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey"
									],
									"query": [
										{
											"key": "enableUndo",
											"value": "false",
											"description": "Whether this project is placed in the Jira recycle bin where it will be available for restoration."
										}
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Deletes a project.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the project is not found or the user does not have permission to delete it.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?enableUndo=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey"
											],
											"query": [
												{
													"key": "enableUndo",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project is deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?enableUndo=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey"
											],
											"query": [
												{
													"key": "enableUndo",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey?enableUndo=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey"
											],
											"query": [
												{
													"key": "enableUndo",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Archive Project",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey",
										"archive"
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Archives a project. Archived projects cannot be deleted. To delete an archived project, restore the project and then delete it. To restore a project, use the Jira UI.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/archive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"archive"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permissions.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/archive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"archive"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project is not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/archive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"archive"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/archive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"archive"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/archive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"archive"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Load Project Avatar",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar2?x=0&y=0&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey",
										"avatar2"
									],
									"query": [
										{
											"key": "x",
											"value": "0",
											"description": "The X coordinate of the top-left corner of the crop region."
										},
										{
											"key": "y",
											"value": "0",
											"description": "The Y coordinate of the top-left corner of the crop region."
										},
										{
											"key": "size",
											"value": "<integer>",
											"description": "The length of each side of the crop region."
										}
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or (case-sensitive) key of the project."
										}
									]
								},
								"description": "Loads an avatar for a project.\n\nSpecify the avatar's local file location in the body of the request. Also, include the following headers:\n\n *  `X-Atlassian-Token: no-check` To prevent XSRF protection blocking the request, for more information see [Special Headers](#special-request-headers).\n *  `Content-Type: image/image type` Valid image types are JPEG, GIF, or PNG.\n\nFor example:  \n`curl --request POST `\n\n`--user email@example.com:<api_token> `\n\n`--header 'X-Atlassian-Token: no-check' `\n\n`--header 'Content-Type: image/< image_type>' `\n\n`--data-binary \"<@/path/to/file/with/your/avatar>\" `\n\n`--url 'https://your-domain.atlassian.net/rest/api/3/project/{projectIdOrKey}/avatar2'`\n\nThe avatar is cropped to a square. If no crop parameters are specified, the square originates at the top left of the image. The length of the square's sides is set to the smaller of the height or width of the image.\n\nThe cropped image is then used to create avatars of 16x16, 24x24, 32x32, and 48x48 in size.\n\nAfter creating the avatar use [Set project avatar](#api-rest-api-3-project-projectIdOrKey-avatar-put) to set it as the project's displayed avatar.\n\n**[Permissions](#permissions) required:** *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg)."
							},
							"response": [
								{
									"name": "Returned if the user does not have permission to administer the project or an anonymous call is made to the operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar2?x=0&y=0&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"avatar2"
											],
											"query": [
												{
													"key": "x",
													"value": "0"
												},
												{
													"key": "y",
													"value": "0"
												},
												{
													"key": "size",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  an image isn't included in the request.\n *  the image type is unsupported.\n *  the crop parameters extend the crop area beyond the edge of the image.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar2?x=0&y=0&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"avatar2"
											],
											"query": [
												{
													"key": "x",
													"value": "0"
												},
												{
													"key": "y",
													"value": "0"
												},
												{
													"key": "size",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project is not found or the user does not have permission to view the project.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar2?x=0&y=0&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"avatar2"
											],
											"query": [
												{
													"key": "x",
													"value": "0"
												},
												{
													"key": "y",
													"value": "0"
												},
												{
													"key": "size",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar2?x=0&y=0&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"avatar2"
											],
											"query": [
												{
													"key": "x",
													"value": "0"
												},
												{
													"key": "y",
													"value": "0"
												},
												{
													"key": "size",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"id\\\":\\\"1010\\\",\\\"isSystemAvatar\\\":false,\\\"isSelected\\\":false,\\\"isDeletable\\\":true}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatar2?x=0&y=0&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"avatar2"
											],
											"query": [
												{
													"key": "x",
													"value": "0"
												},
												{
													"key": "y",
													"value": "0"
												},
												{
													"key": "size",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get All Project Avatars",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatars",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey",
										"avatars"
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID or (case-sensitive) key of the project."
										}
									]
								},
								"description": "Returns all project avatars, grouped by system and custom avatars.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project."
							},
							"response": [
								{
									"name": "Returned if request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatars",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"avatars"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"system\\\":[{\\\"id\\\":\\\"1000\\\",\\\"isSystemAvatar\\\":true,\\\"isSelected\\\":false,\\\"isDeletable\\\":false,\\\"urls\\\":{\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10040&avatarType=project\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10040&avatarType=project\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10040&avatarType=project\\\",\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10040&avatarType=project\\\"}}],\\\"custom\\\":[{\\\"id\\\":\\\"1010\\\",\\\"isSystemAvatar\\\":false,\\\"isSelected\\\":false,\\\"isDeletable\\\":true,\\\"urls\\\":{\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10080&avatarType=project\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10080&avatarType=project\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10080&avatarType=project\\\",\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10080&avatarType=project\\\"}}]}\""
								},
								{
									"name": "Returned if the project is not found or the user does not have permission to view the project.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatars",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"avatars"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/avatars",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"avatars"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Project Components Paginated",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/component?startAt=0&maxResults=50&orderBy=<string>&query=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey",
										"component"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "50",
											"description": "The maximum number of items to return per page."
										},
										{
											"key": "orderBy",
											"value": "<string>",
											"description": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by the component description.\n *  `issueCount` Sorts by the count of issues associated with the component.\n *  `lead` Sorts by the user key of the component's project lead.\n *  `name` Sorts by component name."
										},
										{
											"key": "query",
											"value": "<string>",
											"description": "Filter the results using a literal string. Components with a matching `name` or `description` are returned (case insensitive)."
										}
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Returns a [paginated](#pagination) list of all components in a project. See the [Get project components](#api-rest-api-3-project-projectIdOrKey-components-get) resource if you want to get a full list of versions without pagination.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/component?startAt=0&maxResults=50&orderBy=<string>&query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"component"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "query",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/PR/component?startAt=0&maxResults=2\\\",\\\"nextPage\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/PR/component?startAt=2&maxResults=2\\\",\\\"maxResults\\\":2,\\\"startAt\\\":0,\\\"total\\\":7,\\\"isLast\\\":false,\\\"values\\\":[{\\\"componentBean\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Component 1\\\",\\\"description\\\":\\\"This is a Jira component\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"assignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"realAssigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"realAssignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"isAssigneeTypeValid\\\":false,\\\"project\\\":\\\"HSP\\\",\\\"projectId\\\":10000},\\\"issueCount\\\":1,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"project\\\":\\\"HSP\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"assignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"projectId\\\":10000,\\\"description\\\":\\\"This is a Jira component\\\",\\\"realAssignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"isAssigneeTypeValid\\\":false,\\\"realAssigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"name\\\":\\\"Component 1\\\",\\\"id\\\":\\\"10000\\\"},{\\\"componentBean\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"id\\\":\\\"10050\\\",\\\"name\\\":\\\"PXA\\\",\\\"description\\\":\\\"This is a another Jira component\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"assignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"realAssigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"realAssignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"isAssigneeTypeValid\\\":false,\\\"project\\\":\\\"PROJECTKEY\\\",\\\"projectId\\\":10000},\\\"issueCount\\\":5,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"project\\\":\\\"PROJECTKEY\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"assignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"projectId\\\":10000,\\\"description\\\":\\\"This is a another Jira component\\\",\\\"realAssignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"isAssigneeTypeValid\\\":false,\\\"realAssigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"name\\\":\\\"PXA\\\",\\\"id\\\":\\\"10050\\\"}]}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/component?startAt=0&maxResults=50&orderBy=<string>&query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"component"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "query",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/component?startAt=0&maxResults=50&orderBy=<string>&query=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"component"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "query",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Project Components",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/components",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey",
										"components"
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Returns all components in a project. See the [Get project components paginated](#api-rest-api-3-project-projectIdOrKey-component-get) resource if you want to get a full list of components with pagination.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/components",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"components"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/components",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"components"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Component 1\\\",\\\"description\\\":\\\"This is a Jira component\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"assignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"realAssigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"realAssignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"isAssigneeTypeValid\\\":false,\\\"project\\\":\\\"HSP\\\",\\\"projectId\\\":10000},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"id\\\":\\\"10050\\\",\\\"name\\\":\\\"PXA\\\",\\\"description\\\":\\\"This is a another Jira component\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"assignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"realAssigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"realAssignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"isAssigneeTypeValid\\\":false,\\\"project\\\":\\\"PROJECTKEY\\\",\\\"projectId\\\":10000}]\""
								},
								{
									"name": "Returned if the project is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/components",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"components"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Project Asynchronously",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey",
										"delete"
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Deletes a project asynchronously.\n\nThis operation is:\n\n *  transactional, that is, if part of the delete fails the project is not deleted.\n *  [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"delete"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"delete"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"delete"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "See Other",
									"code": 303,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"elapsedRuntime\": -95159121,\n \"id\": \"non Ut sunt ipsum\",\n \"lastUpdate\": 25954953,\n \"progress\": -8872014,\n \"self\": \"https://uJFhSaqQiCMIwNqfA.ruazCYJnM3uncu9XV6nAGgfAJooO.E2xw0h+Lli,RlUKR+mIohTW3w6\",\n \"status\": \"COMPLETE\",\n \"submitted\": 87465939,\n \"submittedBy\": 37237339,\n \"description\": \"quis ea cupidatat nostrud sit\",\n \"message\": \"laboris sunt dolore\",\n \"result\": {},\n \"started\": 24048112,\n \"finished\": 49463526\n}"
								},
								{
									"name": "Returned if the project is not found or the user does not have the necessary permission.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"delete"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Restore Deleted Project",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/restore",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey",
										"restore"
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Restores a project from the Jira recycle bin.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/restore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"restore"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"description\\\":\\\"This project was created as an example for REST.\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"components\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Component 1\\\",\\\"description\\\":\\\"This is a Jira component\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"assignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"realAssigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"realAssignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"isAssigneeTypeValid\\\":false,\\\"project\\\":\\\"HSP\\\",\\\"projectId\\\":10000}],\\\"issueTypes\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/3\\\",\\\"id\\\":\\\"3\\\",\\\"description\\\":\\\"A task that needs to be done.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Task\\\",\\\"subtask\\\":false,\\\"avatarId\\\":1},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/1\\\",\\\"id\\\":\\\"1\\\",\\\"description\\\":\\\"A problem with the software.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Bug\\\",\\\"subtask\\\":false,\\\"avatarId\\\":10002,\\\"entityId\\\":\\\"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2\\\",\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}],\\\"url\\\":\\\"https://www.example.com\\\",\\\"email\\\":\\\"from-jira@example.com\\\",\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"versions\\\":[],\\\"name\\\":\\\"Example\\\",\\\"roles\\\":{\\\"Developers\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX/role/10000\\\"},\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"properties\\\":{\\\"propertyKey\\\":\\\"propertyValue\\\"},\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/restore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"restore"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project is not found or the user does not have the necessary permission.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/restore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"restore"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/restore",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"restore"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Project Role Details",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/roledetails?currentMember=false&excludeConnectAddons=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey",
										"roledetails"
									],
									"query": [
										{
											"key": "currentMember",
											"value": "false",
											"description": "Whether the roles should be filtered to include only those the user is assigned to."
										},
										{
											"key": "excludeConnectAddons",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Returns all [project roles](https://confluence.atlassian.com/x/3odKLg) and the details for each role. Note that the list of project roles is common to all projects.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/roledetails?currentMember=false&excludeConnectAddons=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"roledetails"
											],
											"query": [
												{
													"key": "currentMember",
													"value": "false"
												},
												{
													"key": "excludeConnectAddons",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/roledetails?currentMember=false&excludeConnectAddons=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"roledetails"
											],
											"query": [
												{
													"key": "currentMember",
													"value": "false"
												},
												{
													"key": "excludeConnectAddons",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}]\""
								},
								{
									"name": "Returned if the project is not found or if the user does not have the necessary permissions for the project.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/roledetails?currentMember=false&excludeConnectAddons=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"roledetails"
											],
											"query": [
												{
													"key": "currentMember",
													"value": "false"
												},
												{
													"key": "excludeConnectAddons",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get All Statuses For Project",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/statuses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey",
										"statuses"
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Returns the valid statuses for a project. The statuses are grouped by issue type, as each project has a set of valid issue types and each issue type has a set of valid statuses.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/statuses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"statuses"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/statuses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"statuses"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/3\\\",\\\"id\\\":\\\"3\\\",\\\"name\\\":\\\"Task\\\",\\\"subtask\\\":false,\\\"statuses\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/status/10000\\\",\\\"description\\\":\\\"The issue is currently being worked on.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/progress.gif\\\",\\\"name\\\":\\\"In Progress\\\",\\\"id\\\":\\\"10000\\\"},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/status/5\\\",\\\"description\\\":\\\"The issue is closed.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/closed.gif\\\",\\\"name\\\":\\\"Closed\\\",\\\"id\\\":\\\"5\\\"}]}]\""
								},
								{
									"name": "Returned if the project is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/statuses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"statuses"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Project Type",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/type/:newProjectTypeKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey",
										"type",
										":newProjectTypeKey"
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										},
										{
											"key": "newProjectTypeKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The key of the new project type."
										}
									]
								},
								"description": "Deprecated, this feature is no longer supported and no alternatives are available, see [Convert project to a different template or type](https://confluence.atlassian.com/x/yEKeOQ). Updates a [project type](https://confluence.atlassian.com/x/GwiiLQ). The project type can be updated for classic projects only, project type cannot be updated for next-gen projects.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the project is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/type/:newProjectTypeKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"type",
												":newProjectTypeKey"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												},
												{
													"key": "newProjectTypeKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project type is updated.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/type/:newProjectTypeKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"type",
												":newProjectTypeKey"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												},
												{
													"key": "newProjectTypeKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"description\\\":\\\"This project was created as an example for REST.\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"components\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/component/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Component 1\\\",\\\"description\\\":\\\"This is a Jira component\\\",\\\"lead\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"assignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"realAssigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"realAssignee\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"isAssigneeTypeValid\\\":false,\\\"project\\\":\\\"HSP\\\",\\\"projectId\\\":10000}],\\\"issueTypes\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/3\\\",\\\"id\\\":\\\"3\\\",\\\"description\\\":\\\"A task that needs to be done.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net//secure/viewavatar?size=xsmall&avatarId=10299&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Task\\\",\\\"subtask\\\":false,\\\"avatarId\\\":1},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issueType/1\\\",\\\"id\\\":\\\"1\\\",\\\"description\\\":\\\"A problem with the software.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10316&avatarType=issuetype\\\\\\\",\\\",\\\"name\\\":\\\"Bug\\\",\\\"subtask\\\":false,\\\"avatarId\\\":10002,\\\"entityId\\\":\\\"9d7dd6f7-e8b6-4247-954b-7b2c9b2a5ba2\\\",\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}],\\\"url\\\":\\\"https://www.example.com\\\",\\\"email\\\":\\\"from-jira@example.com\\\",\\\"assigneeType\\\":\\\"PROJECT_LEAD\\\",\\\"versions\\\":[],\\\"name\\\":\\\"Example\\\",\\\"roles\\\":{\\\"Developers\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX/role/10000\\\"},\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"properties\\\":{\\\"propertyKey\\\":\\\"propertyValue\\\"},\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}}\""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/type/:newProjectTypeKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"type",
												":newProjectTypeKey"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												},
												{
													"key": "newProjectTypeKey"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/type/:newProjectTypeKey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"type",
												":newProjectTypeKey"
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												},
												{
													"key": "newProjectTypeKey"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Project Versions Paginated",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/version?startAt=0&maxResults=50&orderBy=<string>&query=<string>&status=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey",
										"version"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "50",
											"description": "The maximum number of items to return per page."
										},
										{
											"key": "orderBy",
											"value": "<string>",
											"description": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by version description.\n *  `name` Sorts by version name.\n *  `releaseDate` Sorts by release date, starting with the oldest date. Versions with no release date are listed last.\n *  `sequence` Sorts by the order of appearance in the user interface.\n *  `startDate` Sorts by start date, starting with the oldest date. Versions with no start date are listed last."
										},
										{
											"key": "query",
											"value": "<string>",
											"description": "Filter the results using a literal string. Versions with matching `name` or `description` are returned (case insensitive)."
										},
										{
											"key": "status",
											"value": "<string>",
											"description": "A list of status values used to filter the results by version status. This parameter accepts a comma-separated list. The status values are `released`, `unreleased`, and `archived`."
										},
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `issuesstatus` Returns the number of issues in each status category for each version.\n *  `operations` Returns actions that can be performed on the specified version."
										}
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Returns a [paginated](#pagination) list of all versions in a project. See the [Get project versions](#api-rest-api-3-project-projectIdOrKey-versions-get) resource if you want to get a full list of versions without pagination.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/version?startAt=0&maxResults=50&orderBy=<string>&query=<string>&status=<string>&expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"version"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/PR/version?startAt=0&maxResults=2\\\",\\\"nextPage\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/PR/version?startAt=2&maxResults=2\\\",\\\"maxResults\\\":2,\\\"startAt\\\":0,\\\"total\\\":7,\\\"isLast\\\":false,\\\"values\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/version/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"description\\\":\\\"An excellent version\\\",\\\"name\\\":\\\"New Version 1\\\",\\\"archived\\\":false,\\\"released\\\":true,\\\"releaseDate\\\":\\\"2010-07-06\\\",\\\"overdue\\\":true,\\\"userReleaseDate\\\":\\\"6/Jul/2010\\\",\\\"projectId\\\":10000},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/version/10010\\\",\\\"id\\\":\\\"10010\\\",\\\"description\\\":\\\"Minor Bugfix version\\\",\\\"name\\\":\\\"Next Version\\\",\\\"archived\\\":false,\\\"released\\\":false,\\\"overdue\\\":false,\\\"projectId\\\":10000,\\\"issuesStatusForFixVersion\\\":{\\\"unmapped\\\":0,\\\"toDo\\\":10,\\\"inProgress\\\":20,\\\"done\\\":100}}]}\""
								},
								{
									"name": "Returned if the project is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/version?startAt=0&maxResults=50&orderBy=<string>&query=<string>&status=<string>&expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"version"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "orderBy",
													"value": "<string>"
												},
												{
													"key": "query",
													"value": "<string>"
												},
												{
													"key": "status",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Project Versions",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/versions?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectIdOrKey",
										"versions"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts `operations`, which returns actions that can be performed on the version."
										}
									],
									"variable": [
										{
											"key": "projectIdOrKey",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Returns all versions in a project. The response is not paginated. Use [Get project versions paginated](#api-rest-api-3-project-projectIdOrKey-version-get) if you want to get the versions in a project with pagination.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project."
							},
							"response": [
								{
									"name": "Returned if the project is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/versions?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"versions"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectIdOrKey/versions?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectIdOrKey",
												"versions"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectIdOrKey"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/version/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"description\\\":\\\"An excellent version\\\",\\\"name\\\":\\\"New Version 1\\\",\\\"archived\\\":false,\\\"released\\\":true,\\\"releaseDate\\\":\\\"2010-07-06\\\",\\\"overdue\\\":true,\\\"userReleaseDate\\\":\\\"6/Jul/2010\\\",\\\"projectId\\\":10000},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/version/10010\\\",\\\"id\\\":\\\"10010\\\",\\\"description\\\":\\\"Minor Bugfix version\\\",\\\"name\\\":\\\"Next Version\\\",\\\"archived\\\":false,\\\"released\\\":false,\\\"overdue\\\":false,\\\"projectId\\\":10000,\\\"issuesStatusForFixVersion\\\":{\\\"unmapped\\\":0,\\\"toDo\\\":10,\\\"inProgress\\\":20,\\\"done\\\":100}}]\""
								}
							]
						}
					]
				},
				{
					"name": "Project Id}",
					"item": [
						{
							"name": "Email",
							"item": [
								{
									"name": "Get Project's Sender Email",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectId/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectId",
												"email"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The project ID."
												}
											]
										},
										"description": "Returns the [project's sender email address](https://confluence.atlassian.com/x/dolKLg).\n\n**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project."
									},
									"response": [
										{
											"name": "Returned if the user does not have permission to read project.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectId/email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectId",
														"email"
													],
													"variable": [
														{
															"key": "projectId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the project or project's sender email address is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectId/email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectId",
														"email"
													],
													"variable": [
														{
															"key": "projectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectId/email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectId",
														"email"
													],
													"variable": [
														{
															"key": "projectId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectId/email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectId",
														"email"
													],
													"variable": [
														{
															"key": "projectId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"emailAddress\\\":\\\"jira@example.atlassian.net\\\"}\""
										}
									]
								},
								{
									"name": "Set Project's Sender Email",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"emailAddress\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectId/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectId",
												"email"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The project ID."
												}
											]
										},
										"description": "Sets the [project's sender email address](https://confluence.atlassian.com/x/dolKLg).\n\nIf `emailAddress` is an empty string, the default email address is restored.\n\n**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project."
									},
									"response": [
										{
											"name": "Returned if the request is not valid, if the email address is not valid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"emailAddress\": \"jira@example.atlassian.net\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectId/email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectId",
														"email"
													],
													"variable": [
														{
															"key": "projectId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the project is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"emailAddress\": \"jira@example.atlassian.net\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectId/email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectId",
														"email"
													],
													"variable": [
														{
															"key": "projectId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have permission to read project.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"emailAddress\": \"jira@example.atlassian.net\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectId/email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectId",
														"email"
													],
													"variable": [
														{
															"key": "projectId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"emailAddress\": \"jira@example.atlassian.net\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectId/email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectId",
														"email"
													],
													"variable": [
														{
															"key": "projectId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the project's sender email address is successfully set.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"emailAddress\": \"jira@example.atlassian.net\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectId/email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectId",
														"email"
													],
													"variable": [
														{
															"key": "projectId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										}
									]
								}
							]
						},
						{
							"name": "Get Project Issue Type Hierarchy",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectId/hierarchy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectId",
										"hierarchy"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the project."
										}
									]
								},
								"description": "Get the issue type hierarchy for a next-gen project.\n\nThe issue type hierarchy for a project consists of:\n\n *  *Epic* at level 1 (optional).\n *  One or more issue types at level 0 such as *Story*, *Task*, or *Bug*. Where the issue type *Epic* is defined, these issue types are used to break down the content of an epic.\n *  *Subtask* at level -1 (optional). This issue type enables level 0 issue types to be broken down into components. Issues based on a level -1 issue type must have a parent issue.\n\n**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectId/hierarchy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectId",
												"hierarchy"
											],
											"variable": [
												{
													"key": "projectId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"projectId\\\":10030,\\\"hierarchy\\\":[{\\\"entityId\\\":\\\"5b27ab71-dcae-474d-825f-6e83918d025d\\\",\\\"level\\\":0,\\\"name\\\":\\\"Base\\\",\\\"issueTypes\\\":[{\\\"id\\\":10008,\\\"entityId\\\":\\\"c63a0448-c80c-4dec-ab84-264017df5281\\\",\\\"name\\\":\\\"Story\\\",\\\"avatarId\\\":10324},{\\\"id\\\":10001,\\\"entityId\\\":\\\"40604ff1-cfc7-4dfe-966c-39cf47fc4d19\\\",\\\"name\\\":\\\"Bug\\\",\\\"avatarId\\\":10324}]},{\\\"entityId\\\":\\\"143169ca-b23d-49a0-8b43-307c0f9baf76\\\",\\\"level\\\":1,\\\"name\\\":\\\"Epic\\\",\\\"issueTypes\\\":[{\\\"id\\\":10007,\\\"entityId\\\":\\\"104d5df0-758b-45c2-befb-daca875b6ce6\\\",\\\"name\\\":\\\"Epic\\\",\\\"avatarId\\\":10179}]},{\\\"entityId\\\":\\\"9effde34-f9e2-499a-823b-6f8d0e02283b\\\",\\\"level\\\":-1,\\\"name\\\":\\\"Subtask\\\",\\\"issueTypes\\\":[{\\\"id\\\":10009,\\\"entityId\\\":\\\"0bcaeee4-385f-4655-a378-143cc6653ea9\\\",\\\"name\\\":\\\"Subtask\\\",\\\"avatarId\\\":10573}]}]}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectId/hierarchy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectId",
												"hierarchy"
											],
											"variable": [
												{
													"key": "projectId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectId/hierarchy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectId",
												"hierarchy"
											],
											"variable": [
												{
													"key": "projectId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project is not found or the user does not have the necessary permission.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectId/hierarchy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectId",
												"hierarchy"
											],
											"variable": [
												{
													"key": "projectId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Project Key Or Id}",
					"item": [
						{
							"name": "Permissionscheme",
							"item": [
								{
									"name": "Get Assigned Permission Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/permissionscheme?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectKeyOrId",
												"permissionscheme"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>",
													"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission."
												}
											],
											"variable": [
												{
													"key": "projectKeyOrId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The project ID or project key (case sensitive)."
												}
											]
										},
										"description": "Gets the [permission scheme](https://confluence.atlassian.com/x/yodKLg) associated with the project.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg)."
									},
									"response": [
										{
											"name": "Returned if the project is not found or the user does not have permission to view the project.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/permissionscheme?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectKeyOrId",
														"permissionscheme"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "projectKeyOrId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/permissionscheme?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectKeyOrId",
														"permissionscheme"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "projectKeyOrId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000\\\",\\\"name\\\":\\\"Example permission scheme\\\",\\\"description\\\":\\\"description\\\"}\""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/permissionscheme?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectKeyOrId",
														"permissionscheme"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "projectKeyOrId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have permission to view the project's configuration.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/permissionscheme?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectKeyOrId",
														"permissionscheme"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "projectKeyOrId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Assign Permission Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"<long>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/permissionscheme?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectKeyOrId",
												"permissionscheme"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>",
													"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission."
												}
											],
											"variable": [
												{
													"key": "projectKeyOrId",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The project ID or project key (case sensitive)."
												}
											]
										},
										"description": "Assigns a permission scheme with a project. See [Managing project permissions](https://confluence.atlassian.com/x/yodKLg) for more information about permission schemes.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)"
									},
									"response": [
										{
											"name": "Returned if:\n\n *  the user does not have the necessary permission to edit the project's configuration.\n *  the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be assigned to projects on free plans.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 10000\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/permissionscheme?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectKeyOrId",
														"permissionscheme"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "projectKeyOrId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 10000\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/permissionscheme?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectKeyOrId",
														"permissionscheme"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "projectKeyOrId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the project or permission scheme is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 10000\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/permissionscheme?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectKeyOrId",
														"permissionscheme"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "projectKeyOrId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"id\": 10000\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/permissionscheme?expand=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"project",
														":projectKeyOrId",
														"permissionscheme"
													],
													"query": [
														{
															"key": "expand",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "projectKeyOrId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/permissionscheme/10000\\\",\\\"name\\\":\\\"Example permission scheme\\\",\\\"description\\\":\\\"description\\\"}\""
										}
									]
								}
							]
						},
						{
							"name": "Get Project Issue Security Scheme",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/issuesecuritylevelscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectKeyOrId",
										"issuesecuritylevelscheme"
									],
									"variable": [
										{
											"key": "projectKeyOrId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Returns the [issue security scheme](https://confluence.atlassian.com/x/J4lKLg) associated with the project.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or the *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg)."
							},
							"response": [
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/issuesecuritylevelscheme",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectKeyOrId",
												"issuesecuritylevelscheme"
											],
											"variable": [
												{
													"key": "projectKeyOrId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/issuesecuritylevelscheme",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectKeyOrId",
												"issuesecuritylevelscheme"
											],
											"variable": [
												{
													"key": "projectKeyOrId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/issuesecuritylevelscheme",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectKeyOrId",
												"issuesecuritylevelscheme"
											],
											"variable": [
												{
													"key": "projectKeyOrId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project is visible to the user but the user doesn't have administrative permissions.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/issuesecuritylevelscheme",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectKeyOrId",
												"issuesecuritylevelscheme"
											],
											"variable": [
												{
													"key": "projectKeyOrId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/issuesecuritylevelscheme",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectKeyOrId",
												"issuesecuritylevelscheme"
											],
											"variable": [
												{
													"key": "projectKeyOrId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issuesecurityschemes/10000\\\",\\\"id\\\":10000,\\\"name\\\":\\\"Default Issue Security Scheme\\\",\\\"description\\\":\\\"Description for the default issue security scheme\\\",\\\"defaultSecurityLevelId\\\":10021,\\\"levels\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/securitylevel/10021\\\",\\\"id\\\":\\\"10021\\\",\\\"description\\\":\\\"Only the reporter and internal staff can see this issue.\\\",\\\"name\\\":\\\"Reporter Only\\\"}]}\""
								}
							]
						},
						{
							"name": "Get Project Notification Scheme",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/notificationscheme?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectKeyOrId",
										"notificationscheme"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about any custom fields assigned to receive an event.\n *  `group` Returns information about any groups assigned to receive an event.\n *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information.\n *  `projectRole` Returns information about any project roles assigned to receive an event.\n *  `user` Returns information about any users assigned to receive an event."
										}
									],
									"variable": [
										{
											"key": "projectKeyOrId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Gets a [notification scheme](https://confluence.atlassian.com/x/8YdKLg) associated with the project. See the [Get notification scheme](#api-rest-api-3-notificationscheme-id-get) resource for more information about notification schemes.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/notificationscheme?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectKeyOrId",
												"notificationscheme"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectKeyOrId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project is not found or the user is not an administrator.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/notificationscheme?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectKeyOrId",
												"notificationscheme"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectKeyOrId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/notificationscheme?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectKeyOrId",
												"notificationscheme"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectKeyOrId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"expand\\\":\\\"notificationSchemeEvents,user,group,projectRole,field,all\\\",\\\"id\\\":10100,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/notificationscheme\\\",\\\"name\\\":\\\"notification scheme name\\\",\\\"description\\\":\\\"description\\\",\\\"notificationSchemeEvents\\\":[{\\\"event\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Issue created\\\",\\\"description\\\":\\\"Event published when an issue is created\\\"},\\\"notifications\\\":[{\\\"id\\\":1,\\\"notificationType\\\":\\\"Group\\\",\\\"parameter\\\":\\\"jira-administrators\\\",\\\"group\\\":{\\\"name\\\":\\\"jira-administrators\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\\\"},\\\"expand\\\":\\\"group\\\"},{\\\"id\\\":2,\\\"notificationType\\\":\\\"CurrentAssignee\\\"},{\\\"id\\\":3,\\\"notificationType\\\":\\\"ProjectRole\\\",\\\"parameter\\\":\\\"10360\\\",\\\"projectRole\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}},\\\"expand\\\":\\\"projectRole\\\"},{\\\"id\\\":4,\\\"notificationType\\\":\\\"EmailAddress\\\",\\\"parameter\\\":\\\"rest-developer@atlassian.com\\\",\\\"emailAddress\\\":\\\"rest-developer@atlassian.com\\\"},{\\\"id\\\":5,\\\"notificationType\\\":\\\"User\\\",\\\"parameter\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"user\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"expand\\\":\\\"user\\\"},{\\\"id\\\":6,\\\"notificationType\\\":\\\"GroupCustomField\\\",\\\"parameter\\\":\\\"customfield_10101\\\",\\\"field\\\":{\\\"id\\\":\\\"customfield_10101\\\",\\\"key\\\":\\\"customfield_10101\\\",\\\"name\\\":\\\"New custom field\\\",\\\"untranslatedName\\\":\\\"New custom field\\\",\\\"custom\\\":true,\\\"orderable\\\":true,\\\"navigable\\\":true,\\\"searchable\\\":true,\\\"clauseNames\\\":[\\\"cf[10101]\\\",\\\"New custom field\\\"],\\\"schema\\\":{\\\"type\\\":\\\"project\\\",\\\"custom\\\":\\\"com.atlassian.jira.plugin.system.customfieldtypes:project\\\",\\\"customId\\\":10101}},\\\"expand\\\":\\\"field\\\"}]},{\\\"event\\\":{\\\"id\\\":20,\\\"name\\\":\\\"Custom event\\\",\\\"description\\\":\\\"Custom event that is published together with an issue created event\\\",\\\"templateEvent\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Issue created\\\",\\\"description\\\":\\\"Event published when an issue is created\\\"}},\\\"notifications\\\":[{\\\"id\\\":1,\\\"notificationType\\\":\\\"Group\\\",\\\"parameter\\\":\\\"jira-administrators\\\",\\\"group\\\":{\\\"name\\\":\\\"jira-administrators\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\\\"},\\\"expand\\\":\\\"group\\\"},{\\\"id\\\":2,\\\"notificationType\\\":\\\"CurrentAssignee\\\"},{\\\"id\\\":3,\\\"notificationType\\\":\\\"ProjectRole\\\",\\\"parameter\\\":\\\"10360\\\",\\\"projectRole\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}},\\\"expand\\\":\\\"projectRole\\\"},{\\\"id\\\":4,\\\"notificationType\\\":\\\"EmailAddress\\\",\\\"parameter\\\":\\\"rest-developer@atlassian.com\\\",\\\"emailAddress\\\":\\\"rest-developer@atlassian.com\\\"},{\\\"id\\\":5,\\\"notificationType\\\":\\\"User\\\",\\\"parameter\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"user\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"expand\\\":\\\"user\\\"},{\\\"id\\\":6,\\\"notificationType\\\":\\\"GroupCustomField\\\",\\\"parameter\\\":\\\"customfield_10101\\\",\\\"field\\\":{\\\"id\\\":\\\"customfield_10101\\\",\\\"key\\\":\\\"customfield_10101\\\",\\\"name\\\":\\\"New custom field\\\",\\\"untranslatedName\\\":\\\"New custom field\\\",\\\"custom\\\":true,\\\"orderable\\\":true,\\\"navigable\\\":true,\\\"searchable\\\":true,\\\"clauseNames\\\":[\\\"cf[10101]\\\",\\\"New custom field\\\"],\\\"schema\\\":{\\\"type\\\":\\\"project\\\",\\\"custom\\\":\\\"com.atlassian.jira.plugin.system.customfieldtypes:project\\\",\\\"customId\\\":10101}},\\\"expand\\\":\\\"field\\\"}]}]}\""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/notificationscheme?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectKeyOrId",
												"notificationscheme"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "projectKeyOrId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Project Issue Security Levels",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/securitylevel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										":projectKeyOrId",
										"securitylevel"
									],
									"variable": [
										{
											"key": "projectKeyOrId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project ID or project key (case sensitive)."
										}
									]
								},
								"description": "Returns all [issue security](https://confluence.atlassian.com/x/J4lKLg) levels for the project that the user has access to.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse projects* [global permission](https://confluence.atlassian.com/x/x4dKLg) for the project, however, issue security levels are only returned for authenticated user with *Set Issue Security* [global permission](https://confluence.atlassian.com/x/x4dKLg) for the project."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/securitylevel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectKeyOrId",
												"securitylevel"
											],
											"variable": [
												{
													"key": "projectKeyOrId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"levels\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/securitylevel/100000\\\",\\\"id\\\":\\\"100000\\\",\\\"description\\\":\\\"Only the reporter and internal staff can see this issue.\\\",\\\"name\\\":\\\"Reporter Only\\\"},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/securitylevel/100001\\\",\\\"id\\\":\\\"100001\\\",\\\"description\\\":\\\"Only internal staff can see this issue.\\\",\\\"name\\\":\\\"Staff Only\\\"}]}\""
								},
								{
									"name": "Returned if the project is not found or the user does not have permission to view it.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/project/:projectKeyOrId/securitylevel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"project",
												":projectKeyOrId",
												"securitylevel"
											],
											"variable": [
												{
													"key": "projectKeyOrId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get All Projects",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/project?expand=<string>&recent=<integer>&properties=<string>&properties=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"project"
							],
							"query": [
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:\n\n *  `description` Returns the project description.\n *  `issueTypes` Returns all issue types associated with the project.\n *  `lead` Returns information about the project lead.\n *  `projectKeys` Returns all project keys associated with the project."
								},
								{
									"key": "recent",
									"value": "<integer>",
									"description": "Returns the user's most recently accessed projects. You may specify the number of results to return up to a maximum of 20. If access is anonymous, then the recently accessed projects are based on the current HTTP session."
								},
								{
									"key": "properties",
									"value": "<string>",
									"description": "A list of project properties to return for the project. This parameter accepts a comma-separated list."
								},
								{
									"key": "properties",
									"value": "<string>",
									"description": "A list of project properties to return for the project. This parameter accepts a comma-separated list."
								}
							]
						},
						"description": "Returns all projects visible to the user. Deprecated, use [ Get projects paginated](#api-rest-api-3-project-search-get) that supports search and pagination.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** Projects are returned only where the user has *Browse Projects* or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project?expand=<string>&recent=<integer>&properties=<string>&properties=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "recent",
											"value": "<integer>"
										},
										{
											"key": "properties",
											"value": "<string>"
										},
										{
											"key": "properties",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"name\\\":\\\"Example\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/ABC\\\",\\\"id\\\":\\\"10001\\\",\\\"key\\\":\\\"ABC\\\",\\\"name\\\":\\\"Alphabetical\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10001\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10001\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10001\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10001\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}}]\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project?expand=<string>&recent=<integer>&properties=<string>&properties=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "recent",
											"value": "<integer>"
										},
										{
											"key": "properties",
											"value": "<string>"
										},
										{
											"key": "properties",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Project",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"<string>\",\n    \"name\": \"<string>\",\n    \"projectTypeKey\": \"<string>\",\n    \"projectTemplateKey\": \"<string>\",\n    \"description\": \"<string>\",\n    \"lead\": \"<string>\",\n    \"leadAccountId\": \"<string>\",\n    \"url\": \"<string>\",\n    \"assigneeType\": \"<string>\",\n    \"avatarId\": \"<long>\",\n    \"issueSecurityScheme\": \"<long>\",\n    \"permissionScheme\": \"<long>\",\n    \"notificationScheme\": \"<long>\",\n    \"categoryId\": \"<long>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/project",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"project"
							]
						},
						"description": "Creates a project based on a project type template, as shown in the following table:\n\n| Project Type Key | Project Template Key |  \n|--|--|  \n| `business` | `com.atlassian.jira-core-project-templates:jira-core-simplified-content-management`, `com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval`, `com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking`, `com.atlassian.jira-core-project-templates:jira-core-simplified-process-control`, `com.atlassian.jira-core-project-templates:jira-core-simplified-procurement`, `com.atlassian.jira-core-project-templates:jira-core-simplified-project-management`, `com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment`, `com.atlassian.jira-core-project-templates:jira-core-simplified-task-tracking` |  \n| `service_desk` | `com.atlassian.servicedesk:simplified-it-service-desk`, `com.atlassian.servicedesk:simplified-internal-service-desk`, `com.atlassian.servicedesk:simplified-external-service-desk` |  \n| `software` | `com.pyxis.greenhopper.jira:gh-simplified-agility-kanban`, `com.pyxis.greenhopper.jira:gh-simplified-agility-scrum`, `com.pyxis.greenhopper.jira:gh-simplified-basic`, `com.pyxis.greenhopper.jira:gh-simplified-kanban-classic`, `com.pyxis.greenhopper.jira:gh-simplified-scrum-classic` |  \nThe project types are available according to the installed Jira features as follows:\n\n *  Jira Core, the default, enables `business` projects.\n *  Jira Service Desk enables `service_desk` projects.\n *  Jira Software enables `software` projects.\n\nTo determine which features are installed, go to **Jira settings** > **Apps** > **Manage apps** and review the System Apps list. To add JIRA Software or JIRA Service Desk into a JIRA instance, use **Jira settings** > **Apps** > **Finding new apps**. For more information, see [ Managing add-ons](https://confluence.atlassian.com/x/S31NLg).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is not valid and the project could not be created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"notificationScheme\": 10021,\n    \"description\": \"Example Project description\",\n    \"lead\": \"Charlie\",\n    \"url\": \"http://atlassian.com\",\n    \"projectTemplateKey\": \"com.atlassian.jira-core-project-templates:jira-core-simplified-process-control\",\n    \"avatarId\": 10200,\n    \"issueSecurityScheme\": 10001,\n    \"name\": \"Example\",\n    \"permissionScheme\": 10011,\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"projectTypeKey\": \"business\",\n    \"key\": \"EX\",\n    \"categoryId\": 10120\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the project is created.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"notificationScheme\": 10021,\n    \"description\": \"Example Project description\",\n    \"lead\": \"Charlie\",\n    \"url\": \"http://atlassian.com\",\n    \"projectTemplateKey\": \"com.atlassian.jira-core-project-templates:jira-core-simplified-process-control\",\n    \"avatarId\": 10200,\n    \"issueSecurityScheme\": 10001,\n    \"name\": \"Example\",\n    \"permissionScheme\": 10011,\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"projectTypeKey\": \"business\",\n    \"key\": \"EX\",\n    \"categoryId\": 10120\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/jira/rest/api/3/project/10042\\\",\\\"id\\\":10010,\\\"key\\\":\\\"EX\\\"}\""
						},
						{
							"name": "Returned if the user does not have permission to create projects.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"notificationScheme\": 10021,\n    \"description\": \"Example Project description\",\n    \"lead\": \"Charlie\",\n    \"url\": \"http://atlassian.com\",\n    \"projectTemplateKey\": \"com.atlassian.jira-core-project-templates:jira-core-simplified-process-control\",\n    \"avatarId\": 10200,\n    \"issueSecurityScheme\": 10001,\n    \"name\": \"Example\",\n    \"permissionScheme\": 10011,\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"projectTypeKey\": \"business\",\n    \"key\": \"EX\",\n    \"categoryId\": 10120\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"notificationScheme\": 10021,\n    \"description\": \"Example Project description\",\n    \"lead\": \"Charlie\",\n    \"url\": \"http://atlassian.com\",\n    \"projectTemplateKey\": \"com.atlassian.jira-core-project-templates:jira-core-simplified-process-control\",\n    \"avatarId\": 10200,\n    \"issueSecurityScheme\": 10001,\n    \"name\": \"Example\",\n    \"permissionScheme\": 10011,\n    \"assigneeType\": \"PROJECT_LEAD\",\n    \"projectTypeKey\": \"business\",\n    \"key\": \"EX\",\n    \"categoryId\": 10120\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Projects Paginated",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/project/search?startAt=0&maxResults=50&orderBy=key&query=<string>&typeKey=<string>&categoryId=<long>&searchBy=key, name&action=view&expand=<string>&status=live&status=live",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"project",
								"search"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "orderBy",
									"value": "key",
									"description": "[Order](#ordering) the results by a field.\n\n *  `category` Sorts by project category. A complete list of category IDs is found using [Get all project categories](#api-rest-api-3-projectCategory-get).\n *  `issueCount` Sorts by the total number of issues in each project.\n *  `key` Sorts by project key.\n *  `lastIssueUpdatedTime` Sorts by the last issue update time.\n *  `name` Sorts by project name.\n *  `owner` Sorts by project lead.\n *  `archivedDate` EXPERIMENTAL. Sorts by project archived date.\n *  `deletedDate` EXPERIMENTAL. Sorts by project deleted date."
								},
								{
									"key": "query",
									"value": "<string>",
									"description": "Filter the results using a literal string. Projects with a matching `key` or `name` are returned (case insensitive)."
								},
								{
									"key": "typeKey",
									"value": "<string>",
									"description": "Orders results by the [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes). This parameter accepts a comma-separated list. Valid values are `business`, `service_desk`, and `software`."
								},
								{
									"key": "categoryId",
									"value": "<long>",
									"description": "The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get) operation."
								},
								{
									"key": "searchBy",
									"value": "key, name"
								},
								{
									"key": "action",
									"value": "view",
									"description": "Filter results by projects for which the user can:\n\n *  `view` the project, meaning that they have one of the following permissions:\n    \n     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n     *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n     *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n *  `browse` the project, meaning that they have the *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n *  `edit` the project, meaning that they have one of the following permissions:\n    \n     *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n     *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
								},
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:\n\n *  `description` Returns the project description.\n *  `projectKeys` Returns all project keys associated with a project.\n *  `lead` Returns information about the project lead.\n *  `issueTypes` Returns all issue types associated with the project.\n *  `url` Returns the URL associated with the project.\n *  `insight` EXPERIMENTAL. Returns the insight details of total issue count and last issue update time for the project."
								},
								{
									"key": "status",
									"value": "live",
									"description": "EXPERIMENTAL. Filter results by project status:\n\n *  `live` Search live projects.\n *  `archived` Search archived projects.\n *  `deleted` Search deleted projects, those in the recycle bin."
								},
								{
									"key": "status",
									"value": "live",
									"description": "EXPERIMENTAL. Filter results by project status:\n\n *  `live` Search live projects.\n *  `archived` Search archived projects.\n *  `deleted` Search deleted projects, those in the recycle bin."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of projects visible to the user.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** Projects are returned only where the user has one of:\n\n *  *Browse Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/search?startAt=0&maxResults=50&orderBy=key&query=<string>&typeKey=<string>&categoryId=<long>&searchBy=key, name&action=view&expand=<string>&status=live&status=live",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "orderBy",
											"value": "key"
										},
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "typeKey",
											"value": "<string>"
										},
										{
											"key": "categoryId",
											"value": "<long>"
										},
										{
											"key": "searchBy",
											"value": "key, name"
										},
										{
											"key": "action",
											"value": "view"
										},
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "live"
										},
										{
											"key": "status",
											"value": "live"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/search?startAt=0&maxResults=50&orderBy=key&query=<string>&typeKey=<string>&categoryId=<long>&searchBy=key, name&action=view&expand=<string>&status=live&status=live",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "orderBy",
											"value": "key"
										},
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "typeKey",
											"value": "<string>"
										},
										{
											"key": "categoryId",
											"value": "<long>"
										},
										{
											"key": "searchBy",
											"value": "key, name"
										},
										{
											"key": "action",
											"value": "view"
										},
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "live"
										},
										{
											"key": "status",
											"value": "live"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if no projects matching the search criteria are found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/search?startAt=0&maxResults=50&orderBy=key&query=<string>&typeKey=<string>&categoryId=<long>&searchBy=key, name&action=view&expand=<string>&status=live&status=live",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "orderBy",
											"value": "key"
										},
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "typeKey",
											"value": "<string>"
										},
										{
											"key": "categoryId",
											"value": "<long>"
										},
										{
											"key": "searchBy",
											"value": "key, name"
										},
										{
											"key": "action",
											"value": "view"
										},
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "live"
										},
										{
											"key": "status",
											"value": "live"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/project/search?startAt=0&maxResults=50&orderBy=key&query=<string>&typeKey=<string>&categoryId=<long>&searchBy=key, name&action=view&expand=<string>&status=live&status=live",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"project",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "orderBy",
											"value": "key"
										},
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "typeKey",
											"value": "<string>"
										},
										{
											"key": "categoryId",
											"value": "<long>"
										},
										{
											"key": "searchBy",
											"value": "key, name"
										},
										{
											"key": "action",
											"value": "view"
										},
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "live"
										},
										{
											"key": "status",
											"value": "live"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/search?startAt=0&maxResults=2\\\",\\\"nextPage\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/search?startAt=2&maxResults=2\\\",\\\"maxResults\\\":2,\\\"startAt\\\":0,\\\"total\\\":7,\\\"isLast\\\":false,\\\"values\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"name\\\":\\\"Example\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/ABC\\\",\\\"id\\\":\\\"10001\\\",\\\"key\\\":\\\"ABC\\\",\\\"name\\\":\\\"Alphabetical\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10001\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10001\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10001\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10001\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}}]}\""
						}
					]
				}
			]
		},
		{
			"name": "Project Category",
			"item": [
				{
					"name": "Id}",
					"item": [
						{
							"name": "Get Project Category By Id",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectCategory",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the project category."
										}
									]
								},
								"description": "Returns a project category.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"projectCategory",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"projectCategory",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"}\""
								},
								{
									"name": "Returned if the project category is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"projectCategory",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Project Category",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectCategory",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) "
										}
									]
								},
								"description": "Updates a project category.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"UPDATED\",\n    \"description\": \"Updated Project Category\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"projectCategory",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  `name` has been modified and exceeds 255 characters.\n *  `description` has been modified and exceeds 1000 characters.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"UPDATED\",\n    \"description\": \"Updated Project Category\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"projectCategory",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project category is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"UPDATED\",\n    \"description\": \"Updated Project Category\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"projectCategory",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"UPDATED\",\n    \"description\": \"Updated Project Category\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"projectCategory",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"UPDATED\",\n    \"description\": \"Updated Project Category\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"projectCategory",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10100\\\",\\\"id\\\":\\\"10100\\\",\\\"name\\\":\\\"UPDATED\\\",\\\"description\\\":\\\"Updated Project Category\\\"}\""
								}
							]
						},
						{
							"name": "Delete Project Category",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectCategory",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) ID of the project category to delete."
										}
									]
								},
								"description": "Deletes a project category.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"projectCategory",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project category is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"projectCategory",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"projectCategory",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/projectCategory/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"projectCategory",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get All Project Categories",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/projectCategory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"projectCategory"
							]
						},
						"description": "Returns all project categories.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectCategory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectCategory"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10001\\\",\\\"id\\\":\\\"10001\\\",\\\"name\\\":\\\"SECOND\\\",\\\"description\\\":\\\"Second Project Category\\\"}]\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectCategory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectCategory"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Project Category",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/projectCategory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"projectCategory"
							]
						},
						"description": "Creates a project category.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if:\n\n *  `name` is not provided or exceeds 255 characters.\n *  `description` is not provided or exceeds 1000 characters.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"CREATED\",\n    \"description\": \"Created Project Category\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectCategory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectCategory"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"CREATED\",\n    \"description\": \"Created Project Category\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectCategory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectCategory"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10100\\\",\\\"id\\\":\\\"10100\\\",\\\"name\\\":\\\"CREATED\\\",\\\"description\\\":\\\"Created Project Category\\\"}\""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"CREATED\",\n    \"description\": \"Created Project Category\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectCategory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectCategory"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the project category name is in use.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"CREATED\",\n    \"description\": \"Created Project Category\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectCategory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectCategory"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"CREATED\",\n    \"description\": \"Created Project Category\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/projectCategory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"projectCategory"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Resolution",
			"item": [
				{
					"name": "Get Resolutions",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/resolution",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"resolution"
							]
						},
						"description": "Returns a list of all issue resolution values.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/resolution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"resolution"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/resolution/1\\\",\\\"id\\\":\\\"10000\\\",\\\"description\\\":\\\"A fix for this issue is checked into the tree and tested.\\\",\\\"name\\\":\\\"Fixed\\\"},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/resolution/3\\\",\\\"id\\\":\\\"10001\\\",\\\"description\\\":\\\"This is what it is supposed to do.\\\",\\\"name\\\":\\\"Works as designed\\\"}]\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/resolution",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"resolution"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Resolution",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/resolution/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"resolution",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the issue resolution value."
								}
							]
						},
						"description": "Returns an issue resolution value.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the issue resolution value is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/resolution/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"resolution",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/resolution/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"resolution",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/resolution/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"resolution",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/resolution/1\\\",\\\"id\\\":\\\"10000\\\",\\\"description\\\":\\\"A fix for this issue is checked into the tree and tested.\\\",\\\"name\\\":\\\"Fixed\\\"}\""
						}
					]
				}
			]
		},
		{
			"name": "Role",
			"item": [
				{
					"name": "Id}",
					"item": [
						{
							"name": "Actors",
							"item": [
								{
									"name": "Get Default Actors For Project Role",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id/actors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id",
												"actors"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs."
												}
											]
										},
										"description": "Returns the [default actors](#api-rest-api-3-resolution-get) for the project role.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the request is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}}]}\""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have administrative permissions.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the project role is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add Default Actors To Project Role",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"user\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"group\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id/actors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id",
												"actors"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs."
												}
											]
										},
										"description": "Adds [default actors](#api-rest-api-3-resolution-get) to a role. You may add groups or users, but you cannot add groups and users in the same request.\n\nChanging a project role's default actors does not affect project role members for projects already created.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the user does not have administrative permissions.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"user\": [\n        \"admin\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"user\": [\n        \"admin\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"user\": [\n        \"admin\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the project role is not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"user\": [\n        \"admin\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"user\": [\n        \"admin\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}}]}\""
										}
									]
								},
								{
									"name": "Delete Default Actors From Project Role",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id/actors?user=<string>&group=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id",
												"actors"
											],
											"query": [
												{
													"key": "user",
													"value": "<string>",
													"description": "The user account ID of the user to remove as a default actor."
												},
												{
													"key": "group",
													"value": "<string>",
													"description": "The group name of the group to be removed as a default actor."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs."
												}
											]
										},
										"description": "Deletes the [default actors](#api-rest-api-3-resolution-get) from a project role. You may delete a group or user, but you cannot delete a group and a user in the same request.\n\nChanging a project role's default actors does not affect project role members for projects already created.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors?user=5b10ac8d82e05b22cc7d4ef5&group=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"query": [
														{
															"key": "user",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "group",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}}]}\""
										},
										{
											"name": "Returned if the request is invalid.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors?user=5b10ac8d82e05b22cc7d4ef5&group=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"query": [
														{
															"key": "user",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "group",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have administrative permissions.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors?user=5b10ac8d82e05b22cc7d4ef5&group=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"query": [
														{
															"key": "user",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "group",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the project role is not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors?user=5b10ac8d82e05b22cc7d4ef5&group=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"query": [
														{
															"key": "user",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "group",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/role/:id/actors?user=5b10ac8d82e05b22cc7d4ef5&group=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"role",
														":id",
														"actors"
													],
													"query": [
														{
															"key": "user",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "group",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Project Role By Id",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs."
										}
									]
								},
								"description": "Gets the project role details and the default actors associated with the role. The list of default actors is sorted by display name.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the user does not have administrative permissions.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project role is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Fully Update Project Role",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs."
										}
									]
								},
								"description": "Updates the project role's name and description. You must include both a name and a description in the request.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}\""
								},
								{
									"name": "Returned if the user does not have administrative permissions.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is not valid. The `name` cannot be empty or start or end with whitespace.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project role is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Partial Update Project Role",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/role/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"role",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs."
										}
									]
								},
								"description": "Updates either the project role's name or its description.\n\nYou cannot update both the name and description at the same time using this operation. If you send a request with a name and a description only the name is updated.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project role is not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have administrative permissions.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}\""
								}
							]
						},
						{
							"name": "Delete Project Role",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/role/:id?swap=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"role",
										":id"
									],
									"query": [
										{
											"key": "swap",
											"value": "<long>",
											"description": "The ID of the project role that will replace the one being deleted."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the project role to delete. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs."
										}
									]
								},
								"description": "Deletes a project role. You must specify a replacement project role if you wish to delete a project role that is in use.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id?swap=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"query": [
												{
													"key": "swap",
													"value": "<long>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id?swap=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"query": [
												{
													"key": "swap",
													"value": "<long>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is invalid or if the replacement project role is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id?swap=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"query": [
												{
													"key": "swap",
													"value": "<long>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have administrative permissions.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id?swap=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"query": [
												{
													"key": "swap",
													"value": "<long>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project role being deleted is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id?swap=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"query": [
												{
													"key": "swap",
													"value": "<long>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project role being deleted is in use and a replacement project role is not specified in the request.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/role/:id?swap=<long>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"role",
												":id"
											],
											"query": [
												{
													"key": "swap",
													"value": "<long>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get All Project Roles",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"role"
							]
						},
						"description": "Gets a list of all project roles, complete with project role details and default actors.\n\n### About project roles ###\n\n[Project roles](https://confluence.atlassian.com/x/3odKLg) are a flexible way to to associate users and groups with projects. In Jira Cloud, the list of project roles is shared globally with all projects, but each project can have a different set of actors associated with it (unlike groups, which have the same membership throughout all Jira applications).\n\nProject roles are used in [permission schemes](#api-rest-api-3-permissionscheme-get), [email notification schemes](#api-rest-api-3-notificationscheme-get), [issue security levels](#api-rest-api-3-issuesecurityschemes-get), [comment visibility](#api-rest-api-3-comment-list-post), and workflow conditions.\n\n#### Members and actors ####\n\nIn the Jira REST API, a member of a project role is called an *actor*. An *actor* is a group or user associated with a project role.\n\nActors may be set as [default members](https://confluence.atlassian.com/x/3odKLg#Managingprojectroles-Specifying'defaultmembers'foraprojectrole) of the project role or set at the project level:\n\n *  Default actors: Users and groups that are assigned to the project role for all newly created projects. The default actors can be removed at the project level later if desired.\n *  Actors: Users and groups that are associated with a project role for a project, which may differ from the default actors. This enables you to assign a user to different roles in different projects.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have administrative permissions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"role"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"role"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\",\\\"actors\\\":[{\\\"id\\\":10240,\\\"displayName\\\":\\\"jira-developers\\\",\\\"type\\\":\\\"atlassian-group-role-actor\\\",\\\"name\\\":\\\"jira-developers\\\",\\\"actorGroup\\\":{\\\"name\\\":\\\"jira-developers\\\",\\\"displayName\\\":\\\"jira-developers\\\"}},{\\\"id\\\":10241,\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"type\\\":\\\"atlassian-user-role-actor\\\",\\\"actorUser\\\":{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"}}],\\\"scope\\\":{\\\"type\\\":\\\"PROJECT\\\",\\\"project\\\":{\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"KEY\\\",\\\"name\\\":\\\"Next Gen Project\\\"}}}]\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"role"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Project Role",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"role"
							]
						},
						"description": "Creates a new project role with no [default actors](#api-rest-api-3-resolution-get). You can use the [Add default actors to project role](#api-rest-api-3-role-id-actors-post) operation to add default actors to the project role after creating it.\n\n*Note that although a new project role is available to all projects upon creation, any default actors that are associated with the project role are not added to projects that existed prior to the role being created.*<\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"role"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if a project role with the provided name already exists.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"role"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"role"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/MKY/role/10360\\\",\\\"name\\\":\\\"Developers\\\",\\\"id\\\":10360,\\\"description\\\":\\\"A project role that represents developers in a project\\\"}\""
						},
						{
							"name": "Returned if the user does not have administrative permissions.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"role"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is not valid. The `name` cannot be empty or start or end with whitespace.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Developers\",\n    \"description\": \"A project role that represents developers in a project\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/role",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"role"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Screens",
			"item": [
				{
					"name": "Screen Id}",
					"item": [
						{
							"name": "Tabs",
							"item": [
								{
									"name": "Tab Id}",
									"item": [
										{
											"name": "Fields",
											"item": [
												{
													"name": "Id}",
													"item": [
														{
															"name": "Remove Screen Tab Field",
															"request": {
																"auth": {
																	"type": "inherit"
																},
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"screens",
																		":screenId",
																		"tabs",
																		":tabId",
																		"fields",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "screenId",
																			"value": "<long>",
																			"type": "string",
																			"description": "(Required) The ID of the screen."
																		},
																		{
																			"key": "tabId",
																			"value": "<long>",
																			"type": "string",
																			"description": "(Required) The ID of the screen tab."
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of the field."
																		}
																	]
																},
																"description": "Removes a field from a screen tab.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
															},
															"response": [
																{
																	"name": "Returned if the request is invalid.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<token>",
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				}
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rest",
																				"api",
																				"3",
																				"screens",
																				":screenId",
																				"tabs",
																				":tabId",
																				"fields",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "screenId"
																				},
																				{
																					"key": "tabId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Returned if the authentication credentials are incorrect or missing.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<token>",
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				}
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rest",
																				"api",
																				"3",
																				"screens",
																				":screenId",
																				"tabs",
																				":tabId",
																				"fields",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "screenId"
																				},
																				{
																					"key": "tabId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Returned if the request is successful.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<token>",
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				}
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rest",
																				"api",
																				"3",
																				"screens",
																				":screenId",
																				"tabs",
																				":tabId",
																				"fields",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "screenId"
																				},
																				{
																					"key": "tabId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Returned if the screen, screen tab, or field is not found.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<token>",
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				}
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rest",
																				"api",
																				"3",
																				"screens",
																				":screenId",
																				"tabs",
																				":tabId",
																				"fields",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "screenId"
																				},
																				{
																					"key": "tabId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Returned if the user does not have the necessary permission.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<token>",
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				}
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rest",
																				"api",
																				"3",
																				"screens",
																				":screenId",
																				"tabs",
																				":tabId",
																				"fields",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "screenId"
																				},
																				{
																					"key": "tabId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Move Screen Tab Field",
															"request": {
																"auth": {
																	"type": "inherit"
																},
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"after\": \"<uri>\",\n    \"position\": \"<string>\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id/move",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"screens",
																		":screenId",
																		"tabs",
																		":tabId",
																		"fields",
																		":id",
																		"move"
																	],
																	"variable": [
																		{
																			"key": "screenId",
																			"value": "<long>",
																			"type": "string",
																			"description": "(Required) The ID of the screen."
																		},
																		{
																			"key": "tabId",
																			"value": "<long>",
																			"type": "string",
																			"description": "(Required) The ID of the screen tab."
																		},
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of the field."
																		}
																	]
																},
																"description": "Moves a screen tab field.\n\nIf `after` and `position` are provided in the request, `position` is ignored.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
															},
															"response": [
																{
																	"name": "Returned if the request is invalid.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<token>",
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				}
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"after\": \"<uri>\",\n    \"position\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id/move",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rest",
																				"api",
																				"3",
																				"screens",
																				":screenId",
																				"tabs",
																				":tabId",
																				"fields",
																				":id",
																				"move"
																			],
																			"variable": [
																				{
																					"key": "screenId"
																				},
																				{
																					"key": "tabId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Bad Request",
																	"code": 400,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Returned if the screen, screen tab, or field is not found or the field can't be moved to the requested position.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<token>",
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				}
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"after\": \"<uri>\",\n    \"position\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id/move",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rest",
																				"api",
																				"3",
																				"screens",
																				":screenId",
																				"tabs",
																				":tabId",
																				"fields",
																				":id",
																				"move"
																			],
																			"variable": [
																				{
																					"key": "screenId"
																				},
																				{
																					"key": "tabId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Returned if the request is successful.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<token>",
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				}
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"after\": \"<uri>\",\n    \"position\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id/move",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rest",
																				"api",
																				"3",
																				"screens",
																				":screenId",
																				"tabs",
																				":tabId",
																				"fields",
																				":id",
																				"move"
																			],
																			"variable": [
																				{
																					"key": "screenId"
																				},
																				{
																					"key": "tabId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																},
																{
																	"name": "Returned if the authentication credentials are incorrect or missing.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<token>",
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				}
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"after\": \"<uri>\",\n    \"position\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id/move",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rest",
																				"api",
																				"3",
																				"screens",
																				":screenId",
																				"tabs",
																				":tabId",
																				"fields",
																				":id",
																				"move"
																			],
																			"variable": [
																				{
																					"key": "screenId"
																				},
																				{
																					"key": "tabId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Returned if the user does not have the necessary permission.",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "<token>",
																				"description": {
																					"content": "Added as a part of security scheme: oauth2",
																					"type": "text/plain"
																				}
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n    \"after\": \"<uri>\",\n    \"position\": \"<string>\"\n}"
																		},
																		"url": {
																			"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields/:id/move",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"rest",
																				"api",
																				"3",
																				"screens",
																				":screenId",
																				"tabs",
																				":tabId",
																				"fields",
																				":id",
																				"move"
																			],
																			"variable": [
																				{
																					"key": "screenId"
																				},
																				{
																					"key": "tabId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "Get All Screen Tab Fields",
													"request": {
														"auth": {
															"type": "inherit"
														},
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields?projectKey=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId",
																"fields"
															],
															"query": [
																{
																	"key": "projectKey",
																	"value": "<string>",
																	"description": "The key of the project."
																}
															],
															"variable": [
																{
																	"key": "screenId",
																	"value": "<long>",
																	"type": "string",
																	"description": "(Required) The ID of the screen."
																},
																{
																	"key": "tabId",
																	"value": "<long>",
																	"type": "string",
																	"description": "(Required) The ID of the screen tab."
																}
															]
														},
														"description": "Returns all fields for a screen tab.\n\n**[Permissions](#permissions) required:**\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) when the project key is specified, providing that the screen is associated with the project through a Screen Scheme and Issue Type Screen Scheme."
													},
													"response": [
														{
															"name": "Returned if the user does not have the necessary permission.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields?projectKey=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"screens",
																		":screenId",
																		"tabs",
																		":tabId",
																		"fields"
																	],
																	"query": [
																		{
																			"key": "projectKey",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "screenId"
																		},
																		{
																			"key": "tabId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Returned if the request is successful.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields?projectKey=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"screens",
																		":screenId",
																		"tabs",
																		":tabId",
																		"fields"
																	],
																	"query": [
																		{
																			"key": "projectKey",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "screenId"
																		},
																		{
																			"key": "tabId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n {\n  \"id\": \"quis nisi\",\n  \"name\": \"commodo ea aliqua aute\"\n },\n {\n  \"id\": \"in occaecat sunt\",\n  \"name\": \"culpa eu do\"\n }\n]"
														},
														{
															"name": "Returned if the screen or screen tab is not found.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields?projectKey=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"screens",
																		":screenId",
																		"tabs",
																		":tabId",
																		"fields"
																	],
																	"query": [
																		{
																			"key": "projectKey",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "screenId"
																		},
																		{
																			"key": "tabId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Returned if the authentication credentials are incorrect or missing.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields?projectKey=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"screens",
																		":screenId",
																		"tabs",
																		":tabId",
																		"fields"
																	],
																	"query": [
																		{
																			"key": "projectKey",
																			"value": "<string>"
																		}
																	],
																	"variable": [
																		{
																			"key": "screenId"
																		},
																		{
																			"key": "tabId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Add Screen Tab Field",
													"request": {
														"auth": {
															"type": "inherit"
														},
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"fieldId\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId",
																"fields"
															],
															"variable": [
																{
																	"key": "screenId",
																	"value": "<long>",
																	"type": "string",
																	"description": "(Required) The ID of the screen."
																},
																{
																	"key": "tabId",
																	"value": "<long>",
																	"type": "string",
																	"description": "(Required) The ID of the screen tab."
																}
															]
														},
														"description": "Adds a field to a screen tab.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
													},
													"response": [
														{
															"name": "Returned if the authentication credentials are incorrect or missing.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fieldId\": \"summary\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"screens",
																		":screenId",
																		"tabs",
																		":tabId",
																		"fields"
																	],
																	"variable": [
																		{
																			"key": "screenId"
																		},
																		{
																			"key": "tabId"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Returned if the request is invalid.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fieldId\": \"summary\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"screens",
																		":screenId",
																		"tabs",
																		":tabId",
																		"fields"
																	],
																	"variable": [
																		{
																			"key": "screenId"
																		},
																		{
																			"key": "tabId"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Returned if the user does not have the necessary permission.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fieldId\": \"summary\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"screens",
																		":screenId",
																		"tabs",
																		":tabId",
																		"fields"
																	],
																	"variable": [
																		{
																			"key": "screenId"
																		},
																		{
																			"key": "tabId"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Returned if the request is successful.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fieldId\": \"summary\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"screens",
																		":screenId",
																		"tabs",
																		":tabId",
																		"fields"
																	],
																	"variable": [
																		{
																			"key": "screenId"
																		},
																		{
																			"key": "tabId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "\"{\\\"id\\\":\\\"summary\\\",\\\"name\\\":\\\"Summary\\\"}\""
														},
														{
															"name": "Returned if the screen, screen tab, or field is not found.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "<token>",
																		"description": {
																			"content": "Added as a part of security scheme: oauth2",
																			"type": "text/plain"
																		}
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n    \"fieldId\": \"summary\"\n}"
																},
																"url": {
																	"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/fields",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"rest",
																		"api",
																		"3",
																		"screens",
																		":screenId",
																		"tabs",
																		":tabId",
																		"fields"
																	],
																	"variable": [
																		{
																			"key": "screenId"
																		},
																		{
																			"key": "tabId"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Update Screen Tab",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"<string>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"screens",
														":screenId",
														"tabs",
														":tabId"
													],
													"variable": [
														{
															"key": "screenId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the screen."
														},
														{
															"key": "tabId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the screen tab."
														}
													]
												},
												"description": "Updates the name of a screen tab.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"id\\\":10000,\\\"name\\\":\\\"Fields Tab\\\"}\""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the user does not have the necessary permission.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the screen or screen tab is not found.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"name\": \"<string>\"\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Screen Tab",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"screens",
														":screenId",
														"tabs",
														":tabId"
													],
													"variable": [
														{
															"key": "screenId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the screen."
														},
														{
															"key": "tabId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the screen tab."
														}
													]
												},
												"description": "Deletes a screen tab.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the user does not have the necessary permission.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the screen or screen tab is not found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Move Screen Tab",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/move/:pos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"screens",
														":screenId",
														"tabs",
														":tabId",
														"move",
														":pos"
													],
													"variable": [
														{
															"key": "screenId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the screen."
														},
														{
															"key": "tabId",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the screen tab."
														},
														{
															"key": "pos",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The position of tab. The base index is 0."
														}
													]
												},
												"description": "Moves a screen tab.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the user does not have the necessary permission.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/move/:pos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId",
																"move",
																":pos"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																},
																{
																	"key": "pos"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/move/:pos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId",
																"move",
																":pos"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																},
																{
																	"key": "pos"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the screen or screen tab is not found or the position is invalid.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/move/:pos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId",
																"move",
																":pos"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																},
																{
																	"key": "pos"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/move/:pos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId",
																"move",
																":pos"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																},
																{
																	"key": "pos"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{}"
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs/:tabId/move/:pos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"screens",
																":screenId",
																"tabs",
																":tabId",
																"move",
																":pos"
															],
															"variable": [
																{
																	"key": "screenId"
																},
																{
																	"key": "tabId"
																},
																{
																	"key": "pos"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get All Screen Tabs",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs?projectKey=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId",
												"tabs"
											],
											"query": [
												{
													"key": "projectKey",
													"value": "<string>",
													"description": "The key of the project."
												}
											],
											"variable": [
												{
													"key": "screenId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the screen."
												}
											]
										},
										"description": "Returns the list of tabs for a screen.\n\n**[Permissions](#permissions) required:**\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) when the project key is specified, providing that the screen is associated with the project through a Screen Scheme and Issue Type Screen Scheme."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs?projectKey=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"screens",
														":screenId",
														"tabs"
													],
													"query": [
														{
															"key": "projectKey",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "screenId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n {\n  \"name\": \"eiusmod ut\",\n  \"id\": -24294434\n },\n {\n  \"name\": \"do elit\",\n  \"id\": 47380790\n }\n]"
										},
										{
											"name": "Returned if the screen is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs?projectKey=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"screens",
														":screenId",
														"tabs"
													],
													"query": [
														{
															"key": "projectKey",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "screenId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the screen ID is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs?projectKey=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"screens",
														":screenId",
														"tabs"
													],
													"query": [
														{
															"key": "projectKey",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "screenId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs?projectKey=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"screens",
														":screenId",
														"tabs"
													],
													"query": [
														{
															"key": "projectKey",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "screenId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs?projectKey=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"screens",
														":screenId",
														"tabs"
													],
													"query": [
														{
															"key": "projectKey",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "screenId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Create Screen Tab",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId",
												"tabs"
											],
											"variable": [
												{
													"key": "screenId",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the screen."
												}
											]
										},
										"description": "Creates a tab for a screen.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Fields Tab\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"screens",
														":screenId",
														"tabs"
													],
													"variable": [
														{
															"key": "screenId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the screen is not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Fields Tab\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"screens",
														":screenId",
														"tabs"
													],
													"variable": [
														{
															"key": "screenId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Fields Tab\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"screens",
														":screenId",
														"tabs"
													],
													"variable": [
														{
															"key": "screenId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Fields Tab\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"screens",
														":screenId",
														"tabs"
													],
													"variable": [
														{
															"key": "screenId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":10000,\\\"name\\\":\\\"Fields Tab\\\"}\""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Fields Tab\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/tabs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"screens",
														":screenId",
														"tabs"
													],
													"variable": [
														{
															"key": "screenId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Update Screen",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens/:screenId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens",
										":screenId"
									],
									"variable": [
										{
											"key": "screenId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the screen."
										}
									]
								},
								"description": "Updates a screen. Only screens used in classic projects can be updated.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Resolve Accessibility Issue Screen\",\n    \"description\": \"Enables changes to resolution and linked issues for accessibility related issues.\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Resolve Accessibility Issue Screen\",\n    \"description\": \"Enables changes to resolution and linked issues for accessibility related issues.\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"id\\\":10005,\\\"name\\\":\\\"Resolve Security Issue Screen\\\",\\\"description\\\":\\\"Enables changes to resolution and linked issues.\\\"}\""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Resolve Accessibility Issue Screen\",\n    \"description\": \"Enables changes to resolution and linked issues for accessibility related issues.\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The name is used by another screen.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the screen is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Resolve Accessibility Issue Screen\",\n    \"description\": \"Enables changes to resolution and linked issues for accessibility related issues.\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The screen was not found.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Resolve Accessibility Issue Screen\",\n    \"description\": \"Enables changes to resolution and linked issues for accessibility related issues.\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can manage screens.\\\"],\\\"errors\\\":{}}\""
								}
							]
						},
						{
							"name": "Delete Screen",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens/:screenId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens",
										":screenId"
									],
									"variable": [
										{
											"key": "screenId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the screen."
										}
									]
								},
								"description": "Deletes a screen. A screen cannot be deleted if it is used in a screen scheme, workflow, or workflow draft.\n\nOnly screens used in classic projects can be deleted."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can manage screens.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the screen is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The screen was not found.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The screen is used in a screen scheme.\\\"],\\\"errors\\\":{}}\""
								}
							]
						},
						{
							"name": "Get Available Screen Fields",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/availableFields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens",
										":screenId",
										"availableFields"
									],
									"variable": [
										{
											"key": "screenId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the screen."
										}
									]
								},
								"description": "Returns the fields that can be added to a tab on a screen.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the screen is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/availableFields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId",
												"availableFields"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/availableFields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId",
												"availableFields"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/availableFields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId",
												"availableFields"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screens/:screenId/availableFields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screens",
												":screenId",
												"availableFields"
											],
											"variable": [
												{
													"key": "screenId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"quis nisi\",\n  \"name\": \"commodo ea aliqua aute\"\n },\n {\n  \"id\": \"in occaecat sunt\",\n  \"name\": \"culpa eu do\"\n }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Get Screens",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/screens?startAt=0&maxResults=100&id=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"screens"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "100",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "id",
									"value": "<long>",
									"description": "The list of screen IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of all screens or those specified by one or more screen IDs.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens?startAt=0&maxResults=100&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "100"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens?startAt=0&maxResults=100&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "100"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens?startAt=0&maxResults=100&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "100"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/screens\\\",\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":4,\\\"isLast\\\":true,\\\"values\\\":[{\\\"id\\\":1,\\\"name\\\":\\\"Default Screen\\\",\\\"description\\\":\\\"Provides for the update all system fields.\\\"},{\\\"id\\\":2,\\\"name\\\":\\\"Workflow Screen\\\",\\\"description\\\":\\\"This screen is used in the workflow and enables you to assign issues.\\\"},{\\\"id\\\":3,\\\"name\\\":\\\"Resolve Issue Screen\\\",\\\"description\\\":\\\"Offers the ability to set resolution, change fix versions, and assign an issue.\\\"}]}\""
						}
					]
				},
				{
					"name": "Create Screen",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/screens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"screens"
							]
						},
						"description": "Creates a screen with a default field tab.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Resolve Security Issue Screen\",\n    \"description\": \"Enables changes to resolution and linked issues.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can manage screens.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Resolve Security Issue Screen\",\n    \"description\": \"Enables changes to resolution and linked issues.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":10005,\\\"name\\\":\\\"Resolve Security Issue Screen\\\",\\\"description\\\":\\\"Enables changes to resolution and linked issues.\\\"}\""
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Resolve Security Issue Screen\",\n    \"description\": \"Enables changes to resolution and linked issues.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"The name is used by another screen.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Resolve Security Issue Screen\",\n    \"description\": \"Enables changes to resolution and linked issues.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add Field To Default Screen",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/screens/addToDefault/:fieldId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"screens",
								"addToDefault",
								":fieldId"
							],
							"variable": [
								{
									"key": "fieldId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the field."
								}
							]
						},
						"description": "Adds a field to the default tab of the default screen.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens/addToDefault/:fieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens",
										"addToDefault",
										":fieldId"
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the field it not found or the field is already present.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens/addToDefault/:fieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens",
										"addToDefault",
										":fieldId"
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens/addToDefault/:fieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens",
										"addToDefault",
										":fieldId"
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screens/addToDefault/:fieldId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screens",
										"addToDefault",
										":fieldId"
									],
									"variable": [
										{
											"key": "fieldId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			]
		},
		{
			"name": "Screen Scheme",
			"item": [
				{
					"name": "Screen Scheme Id}",
					"item": [
						{
							"name": "Update Screen Scheme",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"screens\": {\n        \"type\": \"string\",\n        \"description\": \"The ID of the default screen. When specified, must include a screen ID as a default screen is required.\",\n        \"writeOnly\": true,\n        \"default\": \"<string>\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screenscheme/:screenSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screenscheme",
										":screenSchemeId"
									],
									"variable": [
										{
											"key": "screenSchemeId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the screen scheme."
										}
									]
								},
								"description": "Updates a screen scheme. Only screen schemes used in classic projects can be updated.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"screens\": {\n        \"default\": \"10018\",\n        \"create\": \"10019\"\n    },\n    \"name\": \"Employee screen scheme v2\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screenscheme/:screenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screenscheme",
												":screenSchemeId"
											],
											"variable": [
												{
													"key": "screenSchemeId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The name is used by another scheme.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"screens\": {\n        \"default\": \"10018\",\n        \"create\": \"10019\"\n    },\n    \"name\": \"Employee screen scheme v2\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screenscheme/:screenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screenscheme",
												":screenSchemeId"
											],
											"variable": [
												{
													"key": "screenSchemeId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"screens\": {\n        \"default\": \"10018\",\n        \"create\": \"10019\"\n    },\n    \"name\": \"Employee screen scheme v2\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screenscheme/:screenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screenscheme",
												":screenSchemeId"
											],
											"variable": [
												{
													"key": "screenSchemeId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if the screen scheme or a screen used as one of the screen types is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"screens\": {\n        \"default\": \"10018\",\n        \"create\": \"10019\"\n    },\n    \"name\": \"Employee screen scheme v2\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screenscheme/:screenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screenscheme",
												":screenSchemeId"
											],
											"variable": [
												{
													"key": "screenSchemeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The screen scheme was not found.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the user does not have the required permissions.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"screens\": {\n        \"default\": \"10018\",\n        \"create\": \"10019\"\n    },\n    \"name\": \"Employee screen scheme v2\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screenscheme/:screenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screenscheme",
												":screenSchemeId"
											],
											"variable": [
												{
													"key": "screenSchemeId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access screen schemes.\\\"],\\\"errors\\\":{}}\""
								}
							]
						},
						{
							"name": "Delete Screen Scheme",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screenscheme/:screenSchemeId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screenscheme",
										":screenSchemeId"
									],
									"variable": [
										{
											"key": "screenSchemeId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the screen scheme."
										}
									]
								},
								"description": "Deletes a screen scheme. A screen scheme cannot be deleted if it is used in an issue type screen scheme.\n\nOnly screens schemes used in classic projects can be deleted.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the screen scheme is deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screenscheme/:screenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screenscheme",
												":screenSchemeId"
											],
											"variable": [
												{
													"key": "screenSchemeId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screenscheme/:screenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screenscheme",
												":screenSchemeId"
											],
											"variable": [
												{
													"key": "screenSchemeId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access screen schemes.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the screen scheme is used in an issue type screen scheme.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screenscheme/:screenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screenscheme",
												":screenSchemeId"
											],
											"variable": [
												{
													"key": "screenSchemeId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The screen scheme cannot be deleted as it is in use in an issue type screen scheme.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screenscheme/:screenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screenscheme",
												":screenSchemeId"
											],
											"variable": [
												{
													"key": "screenSchemeId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the screen scheme is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/screenscheme/:screenSchemeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"screenscheme",
												":screenSchemeId"
											],
											"variable": [
												{
													"key": "screenSchemeId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The screen scheme was not found.\\\"],\\\"errors\\\":{}}\""
								}
							]
						}
					]
				},
				{
					"name": "Get Screen Schemes",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/screenscheme?startAt=0&maxResults=25&id=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"screenscheme"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "25",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "id",
									"value": "<long>",
									"description": "The list of screen scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of screen schemes.\n\nOnly screen schemes used in classic projects are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screenscheme?startAt=0&maxResults=25&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screenscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "25"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screenscheme?startAt=0&maxResults=25&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screenscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "25"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screenscheme?startAt=0&maxResults=25&id=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screenscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "25"
										},
										{
											"key": "id",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/screenscheme?maxResults=25&startAt=0\\\",\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":2,\\\"isLast\\\":true,\\\"values\\\":[{\\\"id\\\":10010,\\\"name\\\":\\\"Employee screen scheme\\\",\\\"description\\\":\\\"Manage employee data\\\",\\\"screens\\\":{\\\"default\\\":10017,\\\"edit\\\":10019,\\\"create\\\":10019,\\\"view\\\":10020}},{\\\"id\\\":10032,\\\"name\\\":\\\"Office screen scheme\\\",\\\"description\\\":\\\"Manage office data\\\",\\\"screens\\\":{\\\"default\\\":10020}}]}\""
						}
					]
				},
				{
					"name": "Create Screen Scheme",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"screens\": {\n        \"type\": \"integer\",\n        \"description\": \"The ID of the default screen. Required when creating a screen scheme.\",\n        \"default\": \"<long>\"\n    },\n    \"description\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/screenscheme",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"screenscheme"
							]
						},
						"description": "Creates a screen scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have the required permissions.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"screens\": {\n        \"default\": 10017,\n        \"view\": 10020,\n        \"edit\": 10019\n    },\n    \"name\": \"Employee screen scheme\",\n    \"description\": \"Manage employee data\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screenscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screenscheme"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access screen schemes.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if a screen used as one of the screen types in the screen scheme is not found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"screens\": {\n        \"default\": 10017,\n        \"view\": 10020,\n        \"edit\": 10019\n    },\n    \"name\": \"Employee screen scheme\",\n    \"description\": \"Manage employee data\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screenscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screenscheme"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"One or more screens assigned to screen types was not found.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the request is not valid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"screens\": {\n        \"default\": 10017,\n        \"view\": 10020,\n        \"edit\": 10019\n    },\n    \"name\": \"Employee screen scheme\",\n    \"description\": \"Manage employee data\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screenscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screenscheme"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"The name is used by another scheme.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"screens\": {\n        \"default\": 10017,\n        \"view\": 10020,\n        \"edit\": 10019\n    },\n    \"name\": \"Employee screen scheme\",\n    \"description\": \"Manage employee data\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screenscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screenscheme"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"screens\": {\n        \"default\": 10017,\n        \"view\": 10020,\n        \"edit\": 10019\n    },\n    \"name\": \"Employee screen scheme\",\n    \"description\": \"Manage employee data\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/screenscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"screenscheme"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":10001}\""
						}
					]
				}
			]
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Search For Issues Using Jql (Get)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/search?jql=project = {{jira_project}} AND component = {{jira_component}} ORDER BY Rank ASC&startAt=0&maxResults=50",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"search"
							],
							"query": [
								{
									"key": "jql",
									"value": "project = {{jira_project}} AND component = {{jira_component}} ORDER BY Rank ASC",
									"description": "The [JQL](https://confluence.atlassian.com/x/egORLQ) that defines the search. Note:\n\n *  If no JQL expression is provided, all issues are returned.\n *  `username` and `userkey` cannot be used as search terms due to privacy reasons. Use `accountId` instead.\n *  If a user has hidden their email address in their user profile, partial matches of the email address will not find the user. An exact match is required."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page. To manage page size, Jira may return fewer items per page where a large number of fields are requested. The greatest number of items returned per page is achieved when requesting `id` or `key` only."
								},
								{
									"key": "validateQuery",
									"value": "strict",
									"description": "Determines how to validate the JQL query and treat the validation results. Supported values are:\n\n *  `strict` Returns a 400 response code if any errors are found, along with a list of all errors (and warnings).\n *  `warn` Returns all errors as warnings.\n *  `none` No validation is performed.\n *  `true` *Deprecated* A legacy synonym for `strict`.\n *  `false` *Deprecated* A legacy synonym for `warn`.\n\nNote: If the JQL is not correctly formed a 400 response code is returned, regardless of the `validateQuery` value.",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "*navigable",
									"description": "A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:\n\n *  `*all` Returns all fields.\n *  `*navigable` Returns navigable fields.\n *  Any issue field, prefixed with a minus to exclude.\n\nExamples:\n\n *  `summary,comment` Returns only the summary and comments fields.\n *  `-description` Returns all navigable (default) fields except description.\n *  `*all,-comment` Returns all fields except comments.\n\nThis parameter may be specified multiple times. For example, `fields=field1,field2&fields=field3`.\n\nNote: All navigable fields are returned by default. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields.",
									"disabled": true
								},
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information about issues in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `renderedFields` Returns field values rendered in HTML format.\n *  `names` Returns the display name of each field.\n *  `schema` Returns the schema describing a field type.\n *  `transitions` Returns all possible transitions for the issue.\n *  `operations` Returns all possible operations for the issue.\n *  `editmeta` Returns information about how each field can be edited.\n *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.\n *  `versionedRepresentations` Instead of `fields`, returns `versionedRepresentations` a JSON array containing each version of a field's value, with the highest numbered item representing the most recent version.",
									"disabled": true
								},
								{
									"key": "properties",
									"value": "<string>",
									"description": "A list of issue property keys for issue properties to include in the results. This parameter accepts a comma-separated list. Multiple properties can also be provided using an ampersand separated list. For example, `properties=prop1,prop2&properties=prop3`. A maximum of 5 issue property keys can be specified.",
									"disabled": true
								},
								{
									"key": "fieldsByKeys",
									"value": "false",
									"description": "Reference fields by their key (rather than ID).",
									"disabled": true
								}
							]
						},
						"description": "Searches for issues using [JQL](https://confluence.atlassian.com/x/egORLQ).\n\nIf the JQL query expression is too large to be encoded as a query parameter, use the [POST](#api-rest-api-3-search-post) version of this resource.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** Issues are included in the response where the user has:\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if the JQL query is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/search?jql=project = HSP&startAt=0&maxResults=50&validateQuery=strict&fields=*navigable&fields=*navigable&expand=<string>&properties=<string>&properties=<string>&fieldsByKeys=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"search"
									],
									"query": [
										{
											"key": "jql",
											"value": "project = HSP"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "validateQuery",
											"value": "strict"
										},
										{
											"key": "fields",
											"value": "*navigable"
										},
										{
											"key": "fields",
											"value": "*navigable"
										},
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "properties",
											"value": "<string>"
										},
										{
											"key": "properties",
											"value": "<string>"
										},
										{
											"key": "fieldsByKeys",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/search?jql=project = HSP&startAt=0&maxResults=50&validateQuery=strict&fields=*navigable&fields=*navigable&expand=<string>&properties=<string>&properties=<string>&fieldsByKeys=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"search"
									],
									"query": [
										{
											"key": "jql",
											"value": "project = HSP"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "validateQuery",
											"value": "strict"
										},
										{
											"key": "fields",
											"value": "*navigable"
										},
										{
											"key": "fields",
											"value": "*navigable"
										},
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "properties",
											"value": "<string>"
										},
										{
											"key": "properties",
											"value": "<string>"
										},
										{
											"key": "fieldsByKeys",
											"value": "false"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/search?jql=project = HSP&startAt=0&maxResults=50&validateQuery=strict&fields=*navigable&fields=*navigable&expand=<string>&properties=<string>&properties=<string>&fieldsByKeys=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"search"
									],
									"query": [
										{
											"key": "jql",
											"value": "project = HSP"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "validateQuery",
											"value": "strict"
										},
										{
											"key": "fields",
											"value": "*navigable"
										},
										{
											"key": "fields",
											"value": "*navigable"
										},
										{
											"key": "expand",
											"value": "<string>"
										},
										{
											"key": "properties",
											"value": "<string>"
										},
										{
											"key": "properties",
											"value": "<string>"
										},
										{
											"key": "fieldsByKeys",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"expand\\\":\\\"names,schema\\\",\\\"startAt\\\":0,\\\"maxResults\\\":50,\\\"total\\\":1,\\\"issues\\\":[{\\\"expand\\\":\\\"\\\",\\\"id\\\":\\\"10002\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10002\\\",\\\"key\\\":\\\"ED-1\\\",\\\"fields\\\":{\\\"watcher\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers\\\",\\\"isWatching\\\":false,\\\"watchCount\\\":1,\\\"watchers\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false}]},\\\"attachment\\\":[{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/attachments/10000\\\",\\\"filename\\\":\\\"picture.jpg\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"created\\\":\\\"2020-12-17T01:45:40.239+0000\\\",\\\"size\\\":23123,\\\"mimeType\\\":\\\"image/jpeg\\\",\\\"content\\\":\\\"https://your-domain.atlassian.net/jira/secure/attachments/10000/picture.jpg\\\",\\\"thumbnail\\\":\\\"https://your-domain.atlassian.net/jira/secure/thumbnail/10000/picture.jpg\\\"}],\\\"sub-tasks\\\":[{\\\"id\\\":\\\"10000\\\",\\\"type\\\":{\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"\\\",\\\"inward\\\":\\\"Parent\\\",\\\"outward\\\":\\\"Sub-task\\\"},\\\"outwardIssue\\\":{\\\"id\\\":\\\"10003\\\",\\\"key\\\":\\\"ED-2\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/ED-2\\\",\\\"fields\\\":{\\\"status\\\":{\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/statuses/open.png\\\",\\\"name\\\":\\\"Open\\\"}}}}],\\\"description\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"Main order flow broken\\\"}]}]},\\\"project\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"name\\\":\\\"Example\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}},\\\"comment\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"body\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\\\"}]}]},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"created\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"updated\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"role\\\",\\\"value\\\":\\\"Administrators\\\"}}],\\\"issuelinks\\\":[{\\\"id\\\":\\\"10001\\\",\\\"type\\\":{\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Dependent\\\",\\\"inward\\\":\\\"depends on\\\",\\\"outward\\\":\\\"is depended by\\\"},\\\"outwardIssue\\\":{\\\"id\\\":\\\"10004L\\\",\\\"key\\\":\\\"PR-2\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/PR-2\\\",\\\"fields\\\":{\\\"status\\\":{\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/statuses/open.png\\\",\\\"name\\\":\\\"Open\\\"}}}},{\\\"id\\\":\\\"10002\\\",\\\"type\\\":{\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Dependent\\\",\\\"inward\\\":\\\"depends on\\\",\\\"outward\\\":\\\"is depended by\\\"},\\\"inwardIssue\\\":{\\\"id\\\":\\\"10004\\\",\\\"key\\\":\\\"PR-3\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/PR-3\\\",\\\"fields\\\":{\\\"status\\\":{\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/statuses/open.png\\\",\\\"name\\\":\\\"Open\\\"}}}}],\\\"worklog\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"comment\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"I did some work here.\\\"}]}]},\\\"updated\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"group\\\",\\\"value\\\":\\\"jira-developers\\\"},\\\"started\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"timeSpent\\\":\\\"3h 20m\\\",\\\"timeSpentSeconds\\\":12000,\\\"id\\\":\\\"100028\\\",\\\"issueId\\\":\\\"10002\\\"}],\\\"updated\\\":1,\\\"timetracking\\\":{\\\"originalEstimate\\\":\\\"10m\\\",\\\"remainingEstimate\\\":\\\"3m\\\",\\\"timeSpent\\\":\\\"6m\\\",\\\"originalEstimateSeconds\\\":600,\\\"remainingEstimateSeconds\\\":200,\\\"timeSpentSeconds\\\":400}}}],\\\"warningMessages\\\":[\\\"The value 'bar' does not exist for the field 'foo'.\\\"]}\""
						}
					]
				},
				{
					"name": "Search For Issues Using Jql (Post)",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jql\": \"<string>\",\n    \"startAt\": \"<integer>\",\n    \"maxResults\": 50,\n    \"fields\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"validateQuery\": \"<string>\",\n    \"expand\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"properties\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"fieldsByKeys\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"search"
							]
						},
						"description": "Searches for issues using [JQL](https://confluence.atlassian.com/x/egORLQ).\n\nThere is a [GET](#api-rest-api-3-search-get) version of this resource that can be used for smaller JQL query expressions.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** Issues are included in the response where the user has:\n\n *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.\n *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expand\": [\n        \"names\",\n        \"schema\",\n        \"operations\"\n    ],\n    \"jql\": \"project = HSP\",\n    \"maxResults\": 15,\n    \"fieldsByKeys\": false,\n    \"fields\": [\n        \"summary\",\n        \"status\",\n        \"assignee\"\n    ],\n    \"startAt\": 0\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"search"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"expand\\\":\\\"names,schema\\\",\\\"startAt\\\":0,\\\"maxResults\\\":50,\\\"total\\\":1,\\\"issues\\\":[{\\\"expand\\\":\\\"\\\",\\\"id\\\":\\\"10002\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10002\\\",\\\"key\\\":\\\"ED-1\\\",\\\"fields\\\":{\\\"watcher\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/EX-1/watchers\\\",\\\"isWatching\\\":false,\\\"watchCount\\\":1,\\\"watchers\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false}]},\\\"attachment\\\":[{\\\"id\\\":10000,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/attachments/10000\\\",\\\"filename\\\":\\\"picture.jpg\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"created\\\":\\\"2020-12-17T01:45:40.239+0000\\\",\\\"size\\\":23123,\\\"mimeType\\\":\\\"image/jpeg\\\",\\\"content\\\":\\\"https://your-domain.atlassian.net/jira/secure/attachments/10000/picture.jpg\\\",\\\"thumbnail\\\":\\\"https://your-domain.atlassian.net/jira/secure/thumbnail/10000/picture.jpg\\\"}],\\\"sub-tasks\\\":[{\\\"id\\\":\\\"10000\\\",\\\"type\\\":{\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"\\\",\\\"inward\\\":\\\"Parent\\\",\\\"outward\\\":\\\"Sub-task\\\"},\\\"outwardIssue\\\":{\\\"id\\\":\\\"10003\\\",\\\"key\\\":\\\"ED-2\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/ED-2\\\",\\\"fields\\\":{\\\"status\\\":{\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/statuses/open.png\\\",\\\"name\\\":\\\"Open\\\"}}}}],\\\"description\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"Main order flow broken\\\"}]}]},\\\"project\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/project/EX\\\",\\\"id\\\":\\\"10000\\\",\\\"key\\\":\\\"EX\\\",\\\"name\\\":\\\"Example\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=large&pid=10000\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=small&pid=10000\\\",\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=xsmall&pid=10000\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/projectavatar?size=medium&pid=10000\\\"},\\\"projectCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/projectCategory/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"FIRST\\\",\\\"description\\\":\\\"First Project Category\\\"},\\\"simplified\\\":false,\\\"style\\\":\\\"classic\\\",\\\"insight\\\":{\\\"totalIssueCount\\\":100,\\\"lastIssueUpdateTime\\\":\\\"2020-12-17T01:45:38.377+0000\\\"}},\\\"comment\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/comment/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"body\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eget venenatis elit. Duis eu justo eget augue iaculis fermentum. Sed semper quam laoreet nisi egestas at posuere augue semper.\\\"}]}]},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"created\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"updated\\\":\\\"2020-12-17T01:45:40.265+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"role\\\",\\\"value\\\":\\\"Administrators\\\"}}],\\\"issuelinks\\\":[{\\\"id\\\":\\\"10001\\\",\\\"type\\\":{\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Dependent\\\",\\\"inward\\\":\\\"depends on\\\",\\\"outward\\\":\\\"is depended by\\\"},\\\"outwardIssue\\\":{\\\"id\\\":\\\"10004L\\\",\\\"key\\\":\\\"PR-2\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/PR-2\\\",\\\"fields\\\":{\\\"status\\\":{\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/statuses/open.png\\\",\\\"name\\\":\\\"Open\\\"}}}},{\\\"id\\\":\\\"10002\\\",\\\"type\\\":{\\\"id\\\":\\\"10000\\\",\\\"name\\\":\\\"Dependent\\\",\\\"inward\\\":\\\"depends on\\\",\\\"outward\\\":\\\"is depended by\\\"},\\\"inwardIssue\\\":{\\\"id\\\":\\\"10004\\\",\\\"key\\\":\\\"PR-3\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/PR-3\\\",\\\"fields\\\":{\\\"status\\\":{\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/statuses/open.png\\\",\\\"name\\\":\\\"Open\\\"}}}}],\\\"worklog\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"comment\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"I did some work here.\\\"}]}]},\\\"updated\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"group\\\",\\\"value\\\":\\\"jira-developers\\\"},\\\"started\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"timeSpent\\\":\\\"3h 20m\\\",\\\"timeSpentSeconds\\\":12000,\\\"id\\\":\\\"100028\\\",\\\"issueId\\\":\\\"10002\\\"}],\\\"updated\\\":1,\\\"timetracking\\\":{\\\"originalEstimate\\\":\\\"10m\\\",\\\"remainingEstimate\\\":\\\"3m\\\",\\\"timeSpent\\\":\\\"6m\\\",\\\"originalEstimateSeconds\\\":600,\\\"remainingEstimateSeconds\\\":200,\\\"timeSpentSeconds\\\":400}}}],\\\"warningMessages\\\":[\\\"The value 'bar' does not exist for the field 'foo'.\\\"]}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expand\": [\n        \"names\",\n        \"schema\",\n        \"operations\"\n    ],\n    \"jql\": \"project = HSP\",\n    \"maxResults\": 15,\n    \"fieldsByKeys\": false,\n    \"fields\": [\n        \"summary\",\n        \"status\",\n        \"assignee\"\n    ],\n    \"startAt\": 0\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"search"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the JQL query is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expand\": [\n        \"names\",\n        \"schema\",\n        \"operations\"\n    ],\n    \"jql\": \"project = HSP\",\n    \"maxResults\": 15,\n    \"fieldsByKeys\": false,\n    \"fields\": [\n        \"summary\",\n        \"status\",\n        \"assignee\"\n    ],\n    \"startAt\": 0\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"search"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Settings Columns",
			"item": [
				{
					"name": "Get Issue Navigator Default Columns",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/settings/columns",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"settings",
								"columns"
							]
						},
						"description": "Returns the default issue navigator columns.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/settings/columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"settings",
										"columns"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/settings/columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"settings",
										"columns"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"label\\\":\\\"Key\\\",\\\"value\\\":\\\"issuekey\\\"},{\\\"label\\\":\\\"Summary\\\",\\\"value\\\":\\\"summary\\\"}]\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/settings/columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"settings",
										"columns"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Set Issue Navigator Default Columns",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "0",
									"value": "<string>",
									"description": "undefined",
									"type": "text"
								},
								{
									"key": "1",
									"value": "<string>",
									"description": "undefined",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/settings/columns",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"settings",
								"columns"
							]
						},
						"description": "Sets the default issue navigator columns.\n\nThe `columns` parameter accepts a navigable field value and is expressed as HTML form data. To specify multiple columns, pass multiple `columns` parameters. For example, in curl:\n\n`curl -X PUT -d columns=summary -d columns=description https://your-domain.atlassian.net/rest/api/3/settings/columns`\n\nIf no column details are sent, then all default columns are removed.\n\nA navigable field is one that can be used as a column on the issue navigator. Find details of navigable issue columns using [Get fields](#api-rest-api-3-field-get).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if a navigable field value is not found.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "0",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "1",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/settings/columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"settings",
										"columns"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "0",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "1",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/settings/columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"settings",
										"columns"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "0",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "1",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/settings/columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"settings",
										"columns"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "0",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "1",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/settings/columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"settings",
										"columns"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if invalid parameters are passed.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "0",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										},
										{
											"key": "1",
											"value": "<string>",
											"description": {
												"content": "undefined",
												"type": "text/plain"
											},
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/settings/columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"settings",
										"columns"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Status",
			"item": [
				{
					"name": "Get All Statuses",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"status"
							]
						},
						"description": "Returns a list of all statuses associated with workflows.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/status/10000\\\",\\\"description\\\":\\\"The issue is currently being worked on.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/progress.gif\\\",\\\"name\\\":\\\"In Progress\\\",\\\"id\\\":\\\"10000\\\",\\\"statusCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/statuscategory/1\\\",\\\"id\\\":1,\\\"key\\\":\\\"in-flight\\\",\\\"colorName\\\":\\\"yellow\\\",\\\"name\\\":\\\"In Progress\\\"}},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/status/5\\\",\\\"description\\\":\\\"The issue is closed.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/closed.gif\\\",\\\"name\\\":\\\"Closed\\\",\\\"id\\\":\\\"5\\\",\\\"statusCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/statuscategory/9\\\",\\\"id\\\":9,\\\"key\\\":\\\"completed\\\",\\\"colorName\\\":\\\"green\\\"}}]\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"status"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Status",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/status/:idOrName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"status",
								":idOrName"
							],
							"variable": [
								{
									"key": "idOrName",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID or name of the status."
								}
							]
						},
						"description": "Returns a status. The status must be associated with a workflow to be returned.\n\nIf a name is used on more than one status, only the status found first is returned. Therefore, identifying the status by its ID may be preferable.\n\nThis operation can be accessed anonymously.\n\n[Permissions](#permissions) required: None."
					},
					"response": [
						{
							"name": "Returned if:\n\n *  the status is not found.\n *  the status is not associated with a workflow.\n *  the user does not have the required permissions.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/status/:idOrName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"status",
										":idOrName"
									],
									"variable": [
										{
											"key": "idOrName"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/status/:idOrName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"status",
										":idOrName"
									],
									"variable": [
										{
											"key": "idOrName"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/status/10000\\\",\\\"description\\\":\\\"The issue is currently being worked on.\\\",\\\"iconUrl\\\":\\\"https://your-domain.atlassian.net/images/icons/progress.gif\\\",\\\"name\\\":\\\"In Progress\\\",\\\"id\\\":\\\"10000\\\",\\\"statusCategory\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/statuscategory/1\\\",\\\"id\\\":1,\\\"key\\\":\\\"in-flight\\\",\\\"colorName\\\":\\\"yellow\\\",\\\"name\\\":\\\"In Progress\\\"}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/status/:idOrName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"status",
										":idOrName"
									],
									"variable": [
										{
											"key": "idOrName"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Status Category",
			"item": [
				{
					"name": "Get All Status Categories",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/statuscategory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"statuscategory"
							]
						},
						"description": "Returns a list of all status categories.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/statuscategory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"statuscategory"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/statuscategory/1\\\",\\\"id\\\":1,\\\"key\\\":\\\"in-flight\\\",\\\"colorName\\\":\\\"yellow\\\",\\\"name\\\":\\\"In Progress\\\"},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/statuscategory/9\\\",\\\"id\\\":9,\\\"key\\\":\\\"completed\\\",\\\"colorName\\\":\\\"green\\\"}]\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/statuscategory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"statuscategory"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Status Category",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/statuscategory/:idOrKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"statuscategory",
								":idOrKey"
							],
							"variable": [
								{
									"key": "idOrKey",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID or key of the status category."
								}
							]
						},
						"description": "Returns a status category. Status categories provided a mechanism for categorizing [statuses](#api-rest-api-3-status-idOrName-get).\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/statuscategory/:idOrKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"statuscategory",
										":idOrKey"
									],
									"variable": [
										{
											"key": "idOrKey"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the status category is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/statuscategory/:idOrKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"statuscategory",
										":idOrKey"
									],
									"variable": [
										{
											"key": "idOrKey"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/statuscategory/:idOrKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"statuscategory",
										":idOrKey"
									],
									"variable": [
										{
											"key": "idOrKey"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/statuscategory/1\\\",\\\"id\\\":1,\\\"key\\\":\\\"in-flight\\\",\\\"colorName\\\":\\\"yellow\\\",\\\"name\\\":\\\"In Progress\\\"}\""
						}
					]
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Get Task",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/task/:taskId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"task",
								":taskId"
							],
							"variable": [
								{
									"key": "taskId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the task."
								}
							]
						},
						"description": "Returns the status of a [long-running asynchronous task](#async).\n\nWhen a task has finished, this operation returns the JSON blob applicable to the task. See the documentation of the operation that created the task for details. Task details are not permanently retained. As of September 2019, details are retained for 14 days although this period may change without notice.\n\n**[Permissions](#permissions) required:** either of:\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n *  Creator of the task."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/task/:taskId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"task",
										":taskId"
									],
									"variable": [
										{
											"key": "taskId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/task/:taskId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"task",
										":taskId"
									],
									"variable": [
										{
											"key": "taskId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the task is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/task/:taskId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"task",
										":taskId"
									],
									"variable": [
										{
											"key": "taskId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/task/:taskId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"task",
										":taskId"
									],
									"variable": [
										{
											"key": "taskId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/task/1\\\",\\\"id\\\":\\\"1\\\",\\\"description\\\":\\\"Task description\\\",\\\"status\\\":\\\"COMPLETE\\\",\\\"result\\\":\\\"the task result, this may be any JSON\\\",\\\"submittedBy\\\":10000,\\\"progress\\\":100,\\\"elapsedRuntime\\\":156,\\\"submitted\\\":1608169539065,\\\"started\\\":1608169539166,\\\"finished\\\":1608169539266,\\\"lastUpdate\\\":1608169539266}\""
						}
					]
				},
				{
					"name": "Cancel Task",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/task/:taskId/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"task",
								":taskId",
								"cancel"
							],
							"variable": [
								{
									"key": "taskId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the task."
								}
							]
						},
						"description": "Cancels a task.\n\n**[Permissions](#permissions) required:** either of:\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n *  Creator of the task."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/task/:taskId/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"task",
										":taskId",
										"cancel"
									],
									"variable": [
										{
											"key": "taskId"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n \"eiusmod\",\n \"Lo\"\n]"
						},
						{
							"name": "Returned if cancellation of the task is not possible.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/task/:taskId/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"task",
										":taskId",
										"cancel"
									],
									"variable": [
										{
											"key": "taskId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n \"eiusmod\",\n \"Lo\"\n]"
						},
						{
							"name": "Returned if the task is not found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/task/:taskId/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"task",
										":taskId",
										"cancel"
									],
									"variable": [
										{
											"key": "taskId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n \"eiusmod\",\n \"Lo\"\n]"
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/task/:taskId/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"task",
										":taskId",
										"cancel"
									],
									"variable": [
										{
											"key": "taskId"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/task/:taskId/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"task",
										":taskId",
										"cancel"
									],
									"variable": [
										{
											"key": "taskId"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n \"eiusmod\",\n \"Lo\"\n]"
						}
					]
				}
			]
		},
		{
			"name": "Universal Avatar",
			"item": [
				{
					"name": "Entity Id}",
					"item": [
						{
							"name": "Get Avatars",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:entityId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"universal_avatar",
										"type",
										":type",
										"owner",
										":entityId"
									],
									"variable": [
										{
											"key": "type",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The avatar type."
										},
										{
											"key": "entityId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the item the avatar is associated with."
										}
									]
								},
								"description": "Returns the system and custom avatars for a project or issue type.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
							},
							"response": [
								{
									"name": "Returned if the avatar type is invalid, the associated item ID is missing, or the item is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"universal_avatar",
												"type",
												":type",
												"owner",
												":entityId"
											],
											"variable": [
												{
													"key": "type"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"universal_avatar",
												"type",
												":type",
												"owner",
												":entityId"
											],
											"variable": [
												{
													"key": "type"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:entityId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"universal_avatar",
												"type",
												":type",
												"owner",
												":entityId"
											],
											"variable": [
												{
													"key": "type"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"system\\\":[{\\\"id\\\":\\\"1000\\\",\\\"isSystemAvatar\\\":true,\\\"isSelected\\\":false,\\\"isDeletable\\\":false,\\\"urls\\\":{\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10040&avatarType=project\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10040&avatarType=project\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10040&avatarType=project\\\",\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10040&avatarType=project\\\"}}],\\\"custom\\\":[{\\\"id\\\":\\\"1010\\\",\\\"isSystemAvatar\\\":false,\\\"isSelected\\\":false,\\\"isDeletable\\\":true,\\\"urls\\\":{\\\"16x16\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10080&avatarType=project\\\",\\\"24x24\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=small&avatarId=10080&avatarType=project\\\",\\\"32x32\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?size=medium&avatarId=10080&avatarType=project\\\",\\\"48x48\\\":\\\"https://your-domain.atlassian.net/secure/viewavatar?avatarId=10080&avatarType=project\\\"}}]}\""
								}
							]
						},
						{
							"name": "Load Avatar",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:entityId?x=0&y=0&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"universal_avatar",
										"type",
										":type",
										"owner",
										":entityId"
									],
									"query": [
										{
											"key": "x",
											"value": "0",
											"description": "The X coordinate of the top-left corner of the crop region."
										},
										{
											"key": "y",
											"value": "0",
											"description": "The Y coordinate of the top-left corner of the crop region."
										},
										{
											"key": "size",
											"value": "<integer>",
											"description": "(Required) The length of each side of the crop region."
										}
									],
									"variable": [
										{
											"key": "type",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The avatar type."
										},
										{
											"key": "entityId",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the item the avatar is associated with."
										}
									]
								},
								"description": "Loads a custom avatar for a project or issue type.\n\nSpecify the avatar's local file location in the body of the request. Also, include the following headers:\n\n *  `X-Atlassian-Token: no-check` To prevent XSRF protection blocking the request, for more information see [Special Headers](#special-request-headers).\n *  `Content-Type: image/image type` Valid image types are JPEG, GIF, or PNG.\n\nFor example:  \n`curl --request POST `\n\n`--user email@example.com:<api_token> `\n\n`--header 'X-Atlassian-Token: no-check' `\n\n`--header 'Content-Type: image/< image_type>' `\n\n`--data-binary \"<@/path/to/file/with/your/avatar>\" `\n\n`--url 'https://your-domain.atlassian.net/rest/api/3/universal_avatar/type/{type}/owner/{entityId}'`\n\nThe avatar is cropped to a square. If no crop parameters are specified, the square originates at the top left of the image. The length of the square's sides is set to the smaller of the height or width of the image.\n\nThe cropped image is then used to create avatars of 16x16, 24x24, 32x32, and 48x48 in size.\n\nAfter creating the avatar use:\n\n *  [Update issue type](#api-rest-api-3-issuetype-id-put) to set it as the issue type's displayed avatar.\n *  [Set project avatar](#api-rest-api-3-project-projectIdOrKey-avatar-put) to set it as the project's displayed avatar.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:entityId?x=0&y=0&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"universal_avatar",
												"type",
												":type",
												"owner",
												":entityId"
											],
											"query": [
												{
													"key": "x",
													"value": "0"
												},
												{
													"key": "y",
													"value": "0"
												},
												{
													"key": "size",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "type"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  an image isn't included in the request.\n *  the image type is unsupported.\n *  the crop parameters extend the crop area beyond the edge of the image.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:entityId?x=0&y=0&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"universal_avatar",
												"type",
												":type",
												"owner",
												":entityId"
											],
											"query": [
												{
													"key": "x",
													"value": "0"
												},
												{
													"key": "y",
													"value": "0"
												},
												{
													"key": "size",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "type"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:entityId?x=0&y=0&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"universal_avatar",
												"type",
												":type",
												"owner",
												":entityId"
											],
											"query": [
												{
													"key": "x",
													"value": "0"
												},
												{
													"key": "y",
													"value": "0"
												},
												{
													"key": "size",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "type"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"id\\\":\\\"1000\\\",\\\"isSystemAvatar\\\":true,\\\"isSelected\\\":false,\\\"isDeletable\\\":false,\\\"urls\\\":{\\\"16x16\\\":\\\"/secure/useravatar?size=xsmall&avatarId=10040&avatarType=project\\\",\\\"24x24\\\":\\\"/secure/useravatar?size=small&avatarId=10040&avatarType=project\\\",\\\"32x32\\\":\\\"/secure/useravatar?size=medium&avatarId=10040&avatarType=project\\\",\\\"48x48\\\":\\\"/secure/useravatar?avatarId=10040&avatarType=project\\\"}}\""
								},
								{
									"name": "Returned if the user does not have the necessary permissions.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:entityId?x=0&y=0&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"universal_avatar",
												"type",
												":type",
												"owner",
												":entityId"
											],
											"query": [
												{
													"key": "x",
													"value": "0"
												},
												{
													"key": "y",
													"value": "0"
												},
												{
													"key": "size",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "type"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the avatar type is invalid, the associated item ID is missing, or the item is not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:entityId?x=0&y=0&size=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"universal_avatar",
												"type",
												":type",
												"owner",
												":entityId"
											],
											"query": [
												{
													"key": "x",
													"value": "0"
												},
												{
													"key": "y",
													"value": "0"
												},
												{
													"key": "size",
													"value": "<integer>"
												}
											],
											"variable": [
												{
													"key": "type"
												},
												{
													"key": "entityId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Delete Avatar",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:owningObjectId/avatar/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"universal_avatar",
								"type",
								":type",
								"owner",
								":owningObjectId",
								"avatar",
								":id"
							],
							"variable": [
								{
									"key": "type",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The avatar type."
								},
								{
									"key": "owningObjectId",
									"value": "<string>",
									"type": "string",
									"description": "(Required) The ID of the item the avatar is associated with."
								},
								{
									"key": "id",
									"value": "<long>",
									"type": "string",
									"description": "(Required) The ID of the avatar."
								}
							]
						},
						"description": "Deletes an avatar from a project or issue type.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the avatar type, associated item ID, or avatar ID is invalid.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:owningObjectId/avatar/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"universal_avatar",
										"type",
										":type",
										"owner",
										":owningObjectId",
										"avatar",
										":id"
									],
									"variable": [
										{
											"key": "type"
										},
										{
											"key": "owningObjectId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:owningObjectId/avatar/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"universal_avatar",
										"type",
										":type",
										"owner",
										":owningObjectId",
										"avatar",
										":id"
									],
									"variable": [
										{
											"key": "type"
										},
										{
											"key": "owningObjectId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have permission to delete the avatar, the avatar is not deletable.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:owningObjectId/avatar/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"universal_avatar",
										"type",
										":type",
										"owner",
										":owningObjectId",
										"avatar",
										":id"
									],
									"variable": [
										{
											"key": "type"
										},
										{
											"key": "owningObjectId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/universal_avatar/type/:type/owner/:owningObjectId/avatar/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"universal_avatar",
										"type",
										":type",
										"owner",
										":owningObjectId",
										"avatar",
										":id"
									],
									"variable": [
										{
											"key": "type"
										},
										{
											"key": "owningObjectId"
										},
										{
											"key": "id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Assignable",
					"item": [
						{
							"name": "Find Users Assignable To Projects",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/assignable/multiProjectSearch?query=<string>&username=<string>&accountId=<string>&projectKeys=<string>&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"assignable",
										"multiProjectSearch"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>",
											"description": "A query string that is matched against user attributes, such as `displayName` and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `accountId` is specified."
										},
										{
											"key": "username",
											"value": "<string>",
											"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
										},
										{
											"key": "accountId",
											"value": "<string>",
											"description": "A query string that is matched exactly against user `accountId`. Required, unless `query` is specified."
										},
										{
											"key": "projectKeys",
											"value": "<string>",
											"description": "(Required) A list of project keys (case sensitive). This parameter accepts a comma-separated list."
										},
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "50",
											"description": "The maximum number of items to return per page."
										}
									]
								},
								"description": "Returns a list of users who can be assigned issues in one or more projects. The list may be restricted to users whose attributes match a string.\n\nThis operation takes the users in the range defined by `startAt` and `maxResults`, up to the thousandth user, and then returns only the users from that range that can be assigned issues in the projects. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who can be assigned issues in the projects, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
							},
							"response": [
								{
									"name": "Returned if:\n\n *  `projectKeys` is missing.\n *  `query` or `accountId` is missing.\n *  `query` and `accountId` are provided.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/assignable/multiProjectSearch?query=query&username=<string>&accountId=<string>&projectKeys=<string>&startAt=0&maxResults=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"assignable",
												"multiProjectSearch"
											],
											"query": [
												{
													"key": "query",
													"value": "query"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "projectKeys",
													"value": "<string>"
												},
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/assignable/multiProjectSearch?query=query&username=<string>&accountId=<string>&projectKeys=<string>&startAt=0&maxResults=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"assignable",
												"multiProjectSearch"
											],
											"query": [
												{
													"key": "query",
													"value": "query"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "projectKeys",
													"value": "<string>"
												},
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10ac8d82e05b22cc7d4ef5\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Emma Richards\\\",\\\"active\\\":false}]\""
								},
								{
									"name": "Returned if one or more of the projects is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/assignable/multiProjectSearch?query=query&username=<string>&accountId=<string>&projectKeys=<string>&startAt=0&maxResults=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"assignable",
												"multiProjectSearch"
											],
											"query": [
												{
													"key": "query",
													"value": "query"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "projectKeys",
													"value": "<string>"
												},
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/assignable/multiProjectSearch?query=query&username=<string>&accountId=<string>&projectKeys=<string>&startAt=0&maxResults=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"assignable",
												"multiProjectSearch"
											],
											"query": [
												{
													"key": "query",
													"value": "query"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "projectKeys",
													"value": "<string>"
												},
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Find Users Assignable To Issues",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/assignable/search?query=<string>&sessionId=<string>&username=<string>&accountId=<string>&project=<string>&issueKey=<string>&startAt=0&maxResults=50&actionDescriptorId=<integer>&recommend=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"assignable",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>",
											"description": "A query string that is matched against user attributes, such as `displayName`, and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `username` or `accountId` is specified."
										},
										{
											"key": "sessionId",
											"value": "<string>",
											"description": "The sessionId of this request. SessionId is the same until the assignee is set."
										},
										{
											"key": "username",
											"value": "<string>",
											"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
										},
										{
											"key": "accountId",
											"value": "<string>",
											"description": "A query string that is matched exactly against user `accountId`. Required, unless `query` is specified."
										},
										{
											"key": "project",
											"value": "<string>",
											"description": "The project ID or project key (case sensitive). Required, unless `issueKey` is specified."
										},
										{
											"key": "issueKey",
											"value": "<string>",
											"description": "The key of the issue. Required, unless `project` is specified."
										},
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "50",
											"description": "The maximum number of items to return. This operation may return less than the maximum number of items even if more are available. The operation fetches users up to the maximum and then, from the fetched users, returns only the users that can be assigned to the issue."
										},
										{
											"key": "actionDescriptorId",
											"value": "<integer>",
											"description": "The ID of the transition."
										},
										{
											"key": "recommend",
											"value": "false"
										}
									]
								},
								"description": "Returns a list of users that can be assigned to an issue. Use this operation to find the list of users who can be assigned to:\n\n *  a new issue, by providing the `projectKeyOrId`.\n *  an updated issue, by providing the `issueKey`.\n *  to an issue during a transition (workflow action), by providing the `issueKey` and the transition id in `actionDescriptorId`. You can obtain the IDs of an issue's valid transitions using the `transitions` option in the `expand` parameter of [ Get issue](#api-rest-api-3-issue-issueIdOrKey-get).\n\nIn all these cases, you can pass an account ID to determine if a user can be assigned to an issue. The user is returned in the response if they can be assigned to the issue or issue transition.\n\nThis operation takes the users in the range defined by `startAt` and `maxResults`, up to the thousandth user, and then returns only the users from that range that can be assigned the issue. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who can be assigned the issue, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/assignable/search?query=query&sessionId=<string>&username=<string>&accountId=<string>&project=<string>&issueKey=<string>&startAt=0&maxResults=50&actionDescriptorId=<integer>&recommend=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"assignable",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "query"
												},
												{
													"key": "sessionId",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "project",
													"value": "<string>"
												},
												{
													"key": "issueKey",
													"value": "<string>"
												},
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "actionDescriptorId",
													"value": "<integer>"
												},
												{
													"key": "recommend",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"groups\\\":{\\\"size\\\":3,\\\"items\\\":[]},\\\"applicationRoles\\\":{\\\"size\\\":1,\\\"items\\\":[]}}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/assignable/search?query=query&sessionId=<string>&username=<string>&accountId=<string>&project=<string>&issueKey=<string>&startAt=0&maxResults=50&actionDescriptorId=<integer>&recommend=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"assignable",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "query"
												},
												{
													"key": "sessionId",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "project",
													"value": "<string>"
												},
												{
													"key": "issueKey",
													"value": "<string>"
												},
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "actionDescriptorId",
													"value": "<integer>"
												},
												{
													"key": "recommend",
													"value": "false"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the project, issue, or transition is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/assignable/search?query=query&sessionId=<string>&username=<string>&accountId=<string>&project=<string>&issueKey=<string>&startAt=0&maxResults=50&actionDescriptorId=<integer>&recommend=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"assignable",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "query"
												},
												{
													"key": "sessionId",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "project",
													"value": "<string>"
												},
												{
													"key": "issueKey",
													"value": "<string>"
												},
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "actionDescriptorId",
													"value": "<integer>"
												},
												{
													"key": "recommend",
													"value": "false"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  `issueKey` or `project` is missing.\n *  `query` or `accountId` is missing.\n *  `query` and `accountId` are provided.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/assignable/search?query=query&sessionId=<string>&username=<string>&accountId=<string>&project=<string>&issueKey=<string>&startAt=0&maxResults=50&actionDescriptorId=<integer>&recommend=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"assignable",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "query"
												},
												{
													"key": "sessionId",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "project",
													"value": "<string>"
												},
												{
													"key": "issueKey",
													"value": "<string>"
												},
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "actionDescriptorId",
													"value": "<integer>"
												},
												{
													"key": "recommend",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Bulk",
					"item": [
						{
							"name": "Bulk Get Users",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/bulk?startAt=0&maxResults=10&username=<string>&username=<string>&key=<string>&key=<string>&accountId=<string>&accountId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"bulk"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "10",
											"description": "The maximum number of items to return per page."
										},
										{
											"key": "username",
											"value": "<string>",
											"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
										},
										{
											"key": "username",
											"value": "<string>",
											"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
										},
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) The account ID of a user. To specify multiple users, pass multiple `accountId` parameters. For example, `accountId=5b10a2844c20165700ede21g&accountId=5b10ac8d82e05b22cc7d4ef5`."
										},
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) The account ID of a user. To specify multiple users, pass multiple `accountId` parameters. For example, `accountId=5b10a2844c20165700ede21g&accountId=5b10ac8d82e05b22cc7d4ef5`."
										}
									]
								},
								"description": "Returns a [paginated](#pagination) list of the users specified by one or more account IDs.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/bulk?startAt=0&maxResults=10&username=<string>&username=<string>&key=<string>&key=<string>&accountId=5b10ac8d82e05b22cc7d4ef5&accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"bulk"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "10"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"maxResults\\\":100,\\\"startAt\\\":0,\\\"total\\\":1,\\\"isLast\\\":true,\\\"values\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"groups\\\":{\\\"size\\\":3,\\\"items\\\":[]},\\\"applicationRoles\\\":{\\\"size\\\":1,\\\"items\\\":[]}}]}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/bulk?startAt=0&maxResults=10&username=<string>&username=<string>&key=<string>&key=<string>&accountId=5b10ac8d82e05b22cc7d4ef5&accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"bulk"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "10"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if `accountID` is missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/bulk?startAt=0&maxResults=10&username=<string>&username=<string>&key=<string>&key=<string>&accountId=5b10ac8d82e05b22cc7d4ef5&accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"bulk"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "10"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Account Ids For Users",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/bulk/migration?startAt=0&maxResults=10&username=<string>&username=<string>&key=<string>&key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"bulk",
										"migration"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "10",
											"description": "The maximum number of items to return per page."
										},
										{
											"key": "username",
											"value": "<string>",
											"description": "Username of a user. To specify multiple users, pass multiple copies of this parameter. For example, `username=fred&username=barney`. Required if `key` isn't provided. Cannot be provided if `key` is present."
										},
										{
											"key": "username",
											"value": "<string>",
											"description": "Username of a user. To specify multiple users, pass multiple copies of this parameter. For example, `username=fred&username=barney`. Required if `key` isn't provided. Cannot be provided if `key` is present."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "Key of a user. To specify multiple users, pass multiple copies of this parameter. For example, `key=fred&key=barney`. Required if `username` isn't provided. Cannot be provided if `username` is present."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "Key of a user. To specify multiple users, pass multiple copies of this parameter. For example, `key=fred&key=barney`. Required if `username` isn't provided. Cannot be provided if `username` is present."
										}
									]
								},
								"description": "Returns the account IDs for the users specified in the `key` or `username` parameters. Note that multiple `key` or `username` parameters can be specified.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/bulk/migration?startAt=0&maxResults=10&username=<string>&username=<string>&key=<string>&key=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"bulk",
												"migration"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "10"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/bulk/migration?startAt=0&maxResults=10&username=<string>&username=<string>&key=<string>&key=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"bulk",
												"migration"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "10"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"[{\\\"username\\\":\\\"mia\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\"},{\\\"username\\\":\\\"emma\\\",\\\"accountId\\\":\\\"5b10ac8d82e05b22cc7d4ef5\\\"}]\""
								},
								{
									"name": "Returned if `key` or `username`",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/bulk/migration?startAt=0&maxResults=10&username=<string>&username=<string>&key=<string>&key=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"bulk",
												"migration"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "10"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "key",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Columns",
					"item": [
						{
							"name": "Get User Default Columns",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=<string>&username=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"columns"
									],
									"query": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*."
										},
										{
											"key": "username",
											"value": "<string>",
											"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
										}
									]
								},
								"description": "Returns the default [issue table columns](https://confluence.atlassian.com/x/XYdKLg) for the user. If `accountId` is not passed in the request, the calling user's details are returned.\n\n**[Permissions](#permissions) required:**\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLgl), to get the column details for any user.\n *  Permission to access Jira, to get the calling user's column details."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"columns"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission or is not accessing their user record.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"columns"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the requested user is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"columns"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"columns"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"label\": \"ut cillum ipsum in\",\n  \"value\": \"sunt quis\"\n },\n {\n  \"label\": \"in\",\n  \"value\": \"officia ea in in\"\n }\n]"
								}
							]
						},
						{
							"name": "Set User Default Columns",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "0",
											"value": "<string>",
											"description": "undefined",
											"type": "text"
										},
										{
											"key": "1",
											"value": "<string>",
											"description": "undefined",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"columns"
									],
									"query": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*."
										}
									]
								},
								"description": "Sets the default [ issue table columns](https://confluence.atlassian.com/x/XYdKLg) for the user. If an account ID is not passed, the calling user's default columns are set. If no column details are sent, then all default columns are removed.\n\nThe parameters for this resource are expressed as HTML form data. For example, in curl:\n\n`curl -X PUT -d columns=summary -d columns=description https://your-domain.atlassian.net/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5'`\n\n**[Permissions](#permissions) required:**\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set the columns on any user.\n *  Permission to access Jira, to set the calling user's columns."
							},
							"response": [
								{
									"name": "Returned if an invalid issue table column ID is sent.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "0",
													"value": "<string>",
													"description": {
														"content": "undefined",
														"type": "text/plain"
													},
													"type": "text"
												},
												{
													"key": "1",
													"value": "<string>",
													"description": {
														"content": "undefined",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"columns"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the requested user is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "0",
													"value": "<string>",
													"description": {
														"content": "undefined",
														"type": "text/plain"
													},
													"type": "text"
												},
												{
													"key": "1",
													"value": "<string>",
													"description": {
														"content": "undefined",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"columns"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "0",
													"value": "<string>",
													"description": {
														"content": "undefined",
														"type": "text/plain"
													},
													"type": "text"
												},
												{
													"key": "1",
													"value": "<string>",
													"description": {
														"content": "undefined",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"columns"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "0",
													"value": "<string>",
													"description": {
														"content": "undefined",
														"type": "text/plain"
													},
													"type": "text"
												},
												{
													"key": "1",
													"value": "<string>",
													"description": {
														"content": "undefined",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"columns"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission or is not accessing their user record.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "0",
													"value": "<string>",
													"description": {
														"content": "undefined",
														"type": "text/plain"
													},
													"type": "text"
												},
												{
													"key": "1",
													"value": "<string>",
													"description": {
														"content": "undefined",
														"type": "text/plain"
													},
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"columns"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Reset User Default Columns",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=<string>&username=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"columns"
									],
									"query": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*."
										},
										{
											"key": "username",
											"value": "<string>",
											"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
										}
									]
								},
								"description": "Resets the default [ issue table columns](https://confluence.atlassian.com/x/XYdKLg) for the user to the system default. If `accountId` is not passed, the calling user's default columns are reset.\n\n**[Permissions](#permissions) required:**\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set the columns on any user.\n *  Permission to access Jira, to set the calling user's columns."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"columns"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission or is not accessing their user record.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"columns"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/columns?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"columns"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Email",
					"item": [
						{
							"name": "Get User Email",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/email?accountId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"email"
									],
									"query": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, `5b10ac8d82e05b22cc7d4ef5`."
										}
									]
								},
								"description": "Returns a user's email address. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603)."
							},
							"response": [
								{
									"name": "Returned if the calling app is not approved to use this API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/email?accountId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"email"
											],
											"query": [
												{
													"key": "accountId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if a user with the given `accountId` doesn't exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/email?accountId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"email"
											],
											"query": [
												{
													"key": "accountId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing from the request (for example if a user is trying to access this API).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/email?accountId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"email"
											],
											"query": [
												{
													"key": "accountId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Indicates the API is not currently enabled",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/email?accountId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"email"
											],
											"query": [
												{
													"key": "accountId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/email?accountId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"email"
											],
											"query": [
												{
													"key": "accountId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"name@example.com\""
								}
							]
						},
						{
							"name": "Get User Email Bulk",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/email/bulk?accountId=<string>&accountId=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"email",
										"bulk"
									],
									"query": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) The account IDs of the users for which emails are required. An `accountId` is an identifier that uniquely identifies the user across all Atlassian products. For example, `5b10ac8d82e05b22cc7d4ef5`. Note, this should be treated as an opaque identifier (that is, do not assume any structure in the value)."
										},
										{
											"key": "accountId",
											"value": "<string>",
											"description": "(Required) The account IDs of the users for which emails are required. An `accountId` is an identifier that uniquely identifies the user across all Atlassian products. For example, `5b10ac8d82e05b22cc7d4ef5`. Note, this should be treated as an opaque identifier (that is, do not assume any structure in the value)."
										}
									]
								},
								"description": "Returns a user's email address. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603)."
							},
							"response": [
								{
									"name": "Indicates the API is not currently enabled.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/email/bulk?accountId=<string>&accountId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"email",
												"bulk"
											],
											"query": [
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/email/bulk?accountId=<string>&accountId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"email",
												"bulk"
											],
											"query": [
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"accountId\": \"sint\",\n \"email\": \"est irure\"\n}"
								},
								{
									"name": "Returned if the authentication credentials are incorrect, or missing from the request (for example if a user is trying to access this API).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/email/bulk?accountId=<string>&accountId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"email",
												"bulk"
											],
											"query": [
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the calling app is not approved to use this API.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/email/bulk?accountId=<string>&accountId=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"email",
												"bulk"
											],
											"query": [
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Properties",
					"item": [
						{
							"name": "Property Key}",
							"item": [
								{
									"name": "Get User Property",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=<string>&userKey=<string>&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"properties",
												":propertyKey"
											],
											"query": [
												{
													"key": "accountId",
													"value": "<string>",
													"description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*."
												},
												{
													"key": "userKey",
													"value": "<string>",
													"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
												},
												{
													"key": "username",
													"value": "<string>",
													"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
												}
											],
											"variable": [
												{
													"key": "propertyKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The key of the user's property."
												}
											]
										},
										"description": "Returns the value of a user's property. If no property key is provided [Get user property keys](#api-rest-api-3-user-properties-get) is called.\n\nNote: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.\n\n**[Permissions](#permissions) required:**\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to get a property from any user.\n *  Access to Jira, to get a property from the calling user's record."
									},
									"response": [
										{
											"name": "Returned if `accountId` is missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the necessary permission or is not accessing their user record.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"key\\\":\\\"issue.support\\\",\\\"value\\\":{\\\"system.conversation.id\\\":\\\"b1bf38be-5e94-4b40-a3b8-9278735ee1e6\\\",\\\"system.support.time\\\":\\\"1m\\\"}}\""
										},
										{
											"name": "Returned if the user is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set User Property",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=<string>&userKey=<string>&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"properties",
												":propertyKey"
											],
											"query": [
												{
													"key": "accountId",
													"value": "<string>",
													"description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*."
												},
												{
													"key": "userKey",
													"value": "<string>",
													"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
												},
												{
													"key": "username",
													"value": "<string>",
													"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
												}
											],
											"variable": [
												{
													"key": "propertyKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The key of the user's property. The maximum length is 255 characters."
												}
											]
										},
										"description": "Sets the value of a user's property. Use this resource to store custom data against a user.\n\nNote: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.\n\n**[Permissions](#permissions) required:**\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to set a property on any user.\n *  Access to Jira, to set a property on the calling user's record."
									},
									"response": [
										{
											"name": "Returned if `accountId` is missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the property key is not specified.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user property is updated.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Returned if the user property is created.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{}"
										},
										{
											"name": "Returned if the user does not have the necessary permission or is not accessing their user record.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete User Property",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=<string>&userKey=<string>&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"properties",
												":propertyKey"
											],
											"query": [
												{
													"key": "accountId",
													"value": "<string>",
													"description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*."
												},
												{
													"key": "userKey",
													"value": "<string>",
													"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
												},
												{
													"key": "username",
													"value": "<string>",
													"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
												}
											],
											"variable": [
												{
													"key": "propertyKey",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The key of the user's property."
												}
											]
										},
										"description": "Deletes a property from a user.\n\nNote: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.\n\n**[Permissions](#permissions) required:**\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to delete a property from any user.\n *  Access to Jira, to delete a property from the calling user's record."
									},
									"response": [
										{
											"name": "Returned if the user property is deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if `accountId` is missing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user or the property is not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the necessary permission or is not accessing their user record.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/properties/:propertyKey?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"properties",
														":propertyKey"
													],
													"query": [
														{
															"key": "accountId",
															"value": "5b10ac8d82e05b22cc7d4ef5"
														},
														{
															"key": "userKey",
															"value": "<string>"
														},
														{
															"key": "username",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "propertyKey"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get User Property Keys",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/properties?accountId=<string>&userKey=<string>&username=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"properties"
									],
									"query": [
										{
											"key": "accountId",
											"value": "<string>",
											"description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*."
										},
										{
											"key": "userKey",
											"value": "<string>",
											"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
										},
										{
											"key": "username",
											"value": "<string>",
											"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
										}
									]
								},
								"description": "Returns the keys of all properties for a user.\n\nNote: This operation does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.\n\n**[Permissions](#permissions) required:**\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to access the property keys on any user.\n *  Access to Jira, to access the calling user's property keys."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/properties?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"properties"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "userKey",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"keys\\\":[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/EX-2/properties/issue.support\\\",\\\"key\\\":\\\"issue.support\\\"}]}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/properties?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"properties"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "userKey",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if `accountId` is missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/properties?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"properties"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "userKey",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/properties?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"properties"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "userKey",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission or is not accessing their user record.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/properties?accountId=5b10ac8d82e05b22cc7d4ef5&userKey=<string>&username=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"properties"
											],
											"query": [
												{
													"key": "accountId",
													"value": "5b10ac8d82e05b22cc7d4ef5"
												},
												{
													"key": "userKey",
													"value": "<string>"
												},
												{
													"key": "username",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Search",
					"item": [
						{
							"name": "Query",
							"item": [
								{
									"name": "Find Users By Query",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/search/query?query=<string>&startAt=0&maxResults=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"search",
												"query"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>",
													"description": "(Required) The search query."
												},
												{
													"key": "startAt",
													"value": "0",
													"description": "The index of the first item to return in a page of results (page offset)."
												},
												{
													"key": "maxResults",
													"value": "100",
													"description": "The maximum number of items to return per page."
												}
											]
										},
										"description": "Finds users with a structured query and returns a [paginated](#pagination) list of user details.\n\nThis operation takes the users in the range defined by `startAt` and `maxResults`, up to the thousandth user, and then returns only the users from that range that match the structured query. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who match the structured query, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.\n\n**[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n\nThe query statements are:\n\n *  `is assignee of PROJ` Returns the users that are assignees of at least one issue in project *PROJ*.\n *  `is assignee of (PROJ-1, PROJ-2)` Returns users that are assignees on the issues *PROJ-1* or *PROJ-2*.\n *  `is reporter of (PROJ-1, PROJ-2)` Returns users that are reporters on the issues *PROJ-1* or *PROJ-2*.\n *  `is watcher of (PROJ-1, PROJ-2)` Returns users that are watchers on the issues *PROJ-1* or *PROJ-2*.\n *  `is voter of (PROJ-1, PROJ-2)` Returns users that are voters on the issues *PROJ-1* or *PROJ-2*.\n *  `is commenter of (PROJ-1, PROJ-2)` Returns users that have posted a comment on the issues *PROJ-1* or *PROJ-2*.\n *  `is transitioner of (PROJ-1, PROJ-2)` Returns users that have performed a transition on issues *PROJ-1* or *PROJ-2*.\n *  `[propertyKey].entity.property.path is \"property value\"` Returns users with the entity property value.\n\nThe list of issues can be extended as needed, as in *(PROJ-1, PROJ-2, ... PROJ-n)*. Statements can be combined using the `AND` and `OR` operators to form more complex queries. For example:\n\n`is assignee of PROJ AND [propertyKey].entity.property.path is \"property value\"`"
									},
									"response": [
										{
											"name": "Returned if the search is timed out.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/search/query?query=<string>&startAt=0&maxResults=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"search",
														"query"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "100"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/search/query?query=<string>&startAt=0&maxResults=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"search",
														"query"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "100"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"self\": \"http://FRMCNcZdLHdZQoGioEKdL.tylpqWTBBP.SfEGEtEdYrTQryjs6E7LjXBNqMGe5z8Wqt1lybXIkYKK1oujEN-.pW\",\n \"nextPage\": \"https://evUNQfmwcrh.tdoVs,oV+Bx2iiEWJOLfnedqgLk9IajzIktVfatPYzgkAiZVeDYJ3.\",\n \"maxResults\": 28307979,\n \"startAt\": 92589336,\n \"total\": 28947857,\n \"isLast\": false,\n \"values\": [\n  {\n   \"self\": \"https://WBSFeJHGtSz.pkxOixh4,wf+BWlh3q7BuwOJ5+lfxiMMwvK5deSuWojfeX+rx0\",\n   \"key\": \"<string>\",\n   \"accountId\": \"<string>\",\n   \"accountType\": \"unknown\",\n   \"name\": \"<string>\",\n   \"emailAddress\": \"Excepteur in\",\n   \"avatarUrls\": {\n    \"16x16\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"24x24\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"32x32\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"48x48\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"displayName\": \"consequat culpa ad sit\",\n   \"active\": true,\n   \"timeZone\": \"non eu ad\",\n   \"locale\": \"esse nostrud ut do voluptate\",\n   \"groups\": {\n    \"size\": -13341815,\n    \"items\": [\n     {\n      \"name\": \"<string>\"\n     },\n     {\n      \"name\": \"<string>\"\n     }\n    ],\n    \"pagingCallback\": {},\n    \"callback\": {},\n    \"max-results\": -7549249\n   },\n   \"applicationRoles\": {\n    \"size\": -26476401,\n    \"items\": [\n     {\n      \"key\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groups\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultGroups\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"selectedByDefault\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defined\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"numberOfSeats\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remainingSeats\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userCount\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userCountDescription\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasUnlimitedSeats\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"platform\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"key\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groups\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultGroups\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"selectedByDefault\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defined\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"numberOfSeats\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remainingSeats\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userCount\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userCountDescription\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasUnlimitedSeats\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"platform\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"pagingCallback\": {},\n    \"callback\": {},\n    \"max-results\": -71097026\n   },\n   \"expand\": \"veniam ex\"\n  },\n  {\n   \"self\": \"https://tBvgzFo.vnvujFs3-iBRFRTW3uAoWxxCDoyviSlyD8NEkVUWfetpnIJFQiStC\",\n   \"key\": \"<string>\",\n   \"accountId\": \"<string>\",\n   \"accountType\": \"app\",\n   \"name\": \"<string>\",\n   \"emailAddress\": \"amet tempor ullamco\",\n   \"avatarUrls\": {\n    \"16x16\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"24x24\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"32x32\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"48x48\": {\n     \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n   },\n   \"displayName\": \"conse\",\n   \"active\": false,\n   \"timeZone\": \"nisi\",\n   \"locale\": \"aliquip Ut\",\n   \"groups\": {\n    \"size\": -88980590,\n    \"items\": [\n     {\n      \"name\": \"<string>\"\n     },\n     {\n      \"name\": \"<string>\"\n     }\n    ],\n    \"pagingCallback\": {},\n    \"callback\": {},\n    \"max-results\": -49870963\n   },\n   \"applicationRoles\": {\n    \"size\": -73701622,\n    \"items\": [\n     {\n      \"key\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groups\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultGroups\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"selectedByDefault\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defined\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"numberOfSeats\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remainingSeats\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userCount\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userCountDescription\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasUnlimitedSeats\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"platform\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"key\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groups\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultGroups\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"selectedByDefault\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defined\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"numberOfSeats\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remainingSeats\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userCount\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userCountDescription\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasUnlimitedSeats\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"platform\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ],\n    \"pagingCallback\": {},\n    \"callback\": {},\n    \"max-results\": -52403192\n   },\n   \"expand\": \"fugiat eiusmod ea mollit ali\"\n  }\n ]\n}"
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/search/query?query=<string>&startAt=0&maxResults=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"search",
														"query"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "100"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the query is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/search/query?query=<string>&startAt=0&maxResults=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"search",
														"query"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "100"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/search/query?query=<string>&startAt=0&maxResults=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"search",
														"query"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "100"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Find User Keys By Query",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/search/query/key?query=<string>&startAt=0&maxResults=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"search",
												"query",
												"key"
											],
											"query": [
												{
													"key": "query",
													"value": "<string>",
													"description": "(Required) The search query."
												},
												{
													"key": "startAt",
													"value": "0",
													"description": "The index of the first item to return in a page of results (page offset)."
												},
												{
													"key": "maxResults",
													"value": "100",
													"description": "The maximum number of items to return per page."
												}
											]
										},
										"description": "Finds users with a structured query and returns a [paginated](#pagination) list of user keys.\n\nThis operation takes the users in the range defined by `startAt` and `maxResults`, up to the thousandth user, and then returns only the users from that range that match the structured query. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who match the structured query, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.\n\n**[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n\nThe query statements are:\n\n *  `is assignee of PROJ` Returns the users that are assignees of at least one issue in project *PROJ*.\n *  `is assignee of (PROJ-1, PROJ-2)` Returns users that are assignees on the issues *PROJ-1* or *PROJ-2*.\n *  `is reporter of (PROJ-1, PROJ-2)` Returns users that are reporters on the issues *PROJ-1* or *PROJ-2*.\n *  `is watcher of (PROJ-1, PROJ-2)` Returns users that are watchers on the issues *PROJ-1* or *PROJ-2*.\n *  `is voter of (PROJ-1, PROJ-2)` Returns users that are voters on the issues *PROJ-1* or *PROJ-2*.\n *  `is commenter of (PROJ-1, PROJ-2)` Returns users that have posted a comment on the issues *PROJ-1* or *PROJ-2*.\n *  `is transitioner of (PROJ-1, PROJ-2)` Returns users that have performed a transition on issues *PROJ-1* or *PROJ-2*.\n *  `[propertyKey].entity.property.path is \"property value\"` Returns users with the entity property value.\n\nThe list of issues can be extended as needed, as in *(PROJ-1, PROJ-2, ... PROJ-n)*. Statements can be combined using the `AND` and `OR` operators to form more complex queries. For example:\n\n`is assignee of PROJ AND [propertyKey].entity.property.path is \"property value\"`"
									},
									"response": [
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/search/query/key?query=<string>&startAt=0&maxResults=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"search",
														"query",
														"key"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "100"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the search is timed out.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/search/query/key?query=<string>&startAt=0&maxResults=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"search",
														"query",
														"key"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "100"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the query is invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/search/query/key?query=<string>&startAt=0&maxResults=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"search",
														"query",
														"key"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "100"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/search/query/key?query=<string>&startAt=0&maxResults=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"search",
														"query",
														"key"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "100"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/user/search/query/key?query=<string>&startAt=0&maxResults=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"user",
														"search",
														"query",
														"key"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>"
														},
														{
															"key": "startAt",
															"value": "0"
														},
														{
															"key": "maxResults",
															"value": "100"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"self\": \"https://ILvdtWkwDFi.cfgofeDf5IodEsc+7hjNB4taL-b4G51UI5Z9bUkq9hn-pAeiSFG,Xycv.QcMEzjNMMlBQ,V\",\n \"nextPage\": \"http://zUMxXfwSvLPCbHmVUjkTR.fvqR6fohT.lmad6UMQtML9FqY78WFbG\",\n \"maxResults\": 44094572,\n \"startAt\": -75873103,\n \"total\": 86826483,\n \"isLast\": true,\n \"values\": [\n  {\n   \"key\": \"dolore Excepteur\",\n   \"accountId\": \"m\"\n  },\n  {\n   \"key\": \"veniam\",\n   \"accountId\": \"cup\"\n  }\n ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Find Users",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/search?query=<string>&username=<string>&accountId=<string>&startAt=0&maxResults=50&property=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>",
											"description": "A query string that is matched against user attributes ( `displayName`, and `emailAddress`) to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `accountId` or `property` is specified."
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>",
											"description": "A query string that is matched exactly against a user `accountId`. Required, unless `query` or `property` is specified."
										},
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "50",
											"description": "The maximum number of items to return per page."
										},
										{
											"key": "property",
											"value": "<string>",
											"description": "A query string used to search properties. Property keys are specified by path, so property keys containing dot (.) or equals (=) characters cannot be used. The query string cannot be specified using a JSON object. Example: To search for the value of `nested` from `{\"something\":{\"nested\":1,\"other\":2}}` use `thepropertykey.something.nested=1`. Required, unless `accountId` or `query` is specified."
										}
									]
								},
								"description": "Returns a list of users that match the search string and property.\n\nThis operation takes the users in the range defined by `startAt` and `maxResults`, up to the thousandth user, and then returns only the users from that range that match the search string and property. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who match the search string and property, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Anonymous calls or calls by users without the required permission return empty search results."
							},
							"response": [
								{
									"name": "Returned if:\n\n *  `accountId`, `query` or `property` is missing.\n *  `query` and `accountId` are provided.\n *  `property` parameter is not valid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/search?query=query&username=<string>&accountId=<string>&startAt=0&maxResults=50&property=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "query"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "property",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/search?query=query&username=<string>&accountId=<string>&startAt=0&maxResults=50&property=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "query"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "property",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10ac8d82e05b22cc7d4ef5\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Emma Richards\\\",\\\"active\\\":false}]\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/user/search?query=query&username=<string>&accountId=<string>&startAt=0&maxResults=50&property=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"user",
												"search"
											],
											"query": [
												{
													"key": "query",
													"value": "query"
												},
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "accountId",
													"value": "<string>"
												},
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "50"
												},
												{
													"key": "property",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get User",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/user?accountId=<string>&username=<string>&key=<string>&expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"user"
							],
							"query": [
								{
									"key": "accountId",
									"value": "<string>",
									"description": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required."
								},
								{
									"key": "username",
									"value": "<string>",
									"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide) for details."
								},
								{
									"key": "key",
									"value": "<string>",
									"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide) for details."
								},
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information about users in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `groups` includes all groups and nested groups to which the user belongs.\n *  `applicationRoles` includes details of all the applications to which the user has access."
								}
							]
						},
						"description": "Returns a user.\n\n**[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>&key=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user"
									],
									"query": [
										{
											"key": "accountId",
											"value": "5b10ac8d82e05b22cc7d4ef5"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"groups\\\":{\\\"size\\\":3,\\\"items\\\":[]},\\\"applicationRoles\\\":{\\\"size\\\":1,\\\"items\\\":[]}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>&key=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user"
									],
									"query": [
										{
											"key": "accountId",
											"value": "5b10ac8d82e05b22cc7d4ef5"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the calling user does not have the *Browse users and groups* global permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>&key=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user"
									],
									"query": [
										{
											"key": "accountId",
											"value": "5b10ac8d82e05b22cc7d4ef5"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  `accountId` is missing.\n *  the user is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>&key=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user"
									],
									"query": [
										{
											"key": "accountId",
											"value": "5b10ac8d82e05b22cc7d4ef5"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create User",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"displayName\": \"<string>\",\n    \"emailAddress\": \"<string>\",\n    \"key\": \"<string>\",\n    \"name\": \"<string>\",\n    \"password\": \"<string>\",\n    \"notification\": \"<string>\",\n    \"applicationKeys\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"user"
							]
						},
						"description": "Creates a user. This resource is retained for legacy compatibility. As soon as a more suitable alternative is available this resource will be deprecated.\n\nThe option is provided to set or generate a password for the user. When using the option to generate a password, by omitting `password` from the request, include `\"notification\": \"true\"` to ensure the user is sent an email advising them that their account is created. This email includes a link for the user to set their password. If the notification isn't sent for a generated password, the user will need to be sent a reset password request from Jira.\n\nIf the user exists and has access to Jira, the operation returns a 201 status. If the user exists but does not have access to Jira, the operation returns a 400 status.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"abracadabra\",\n    \"emailAddress\": \"mia@atlassian.com\",\n    \"displayName\": \"Mia Krystof\",\n    \"name\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"groups\\\":{\\\"size\\\":3,\\\"items\\\":[]},\\\"applicationRoles\\\":{\\\"size\\\":1,\\\"items\\\":[]}}\""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"abracadabra\",\n    \"emailAddress\": \"mia@atlassian.com\",\n    \"displayName\": \"Mia Krystof\",\n    \"name\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid or the number of licensed users is exceeded.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"abracadabra\",\n    \"emailAddress\": \"mia@atlassian.com\",\n    \"displayName\": \"Mia Krystof\",\n    \"name\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"abracadabra\",\n    \"emailAddress\": \"mia@atlassian.com\",\n    \"displayName\": \"Mia Krystof\",\n    \"name\": \"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/user?accountId=<string>&username=<string>&key=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"user"
							],
							"query": [
								{
									"key": "accountId",
									"value": "<string>",
									"description": "(Required) The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*."
								},
								{
									"key": "username",
									"value": "<string>",
									"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
								},
								{
									"key": "key",
									"value": "<string>",
									"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
								}
							]
						},
						"description": "Deletes a user.\n\n**[Permissions](#permissions) required:** Site administration (that is, membership of the *site-admin* [group](https://confluence.atlassian.com/x/24xjL))."
					},
					"response": [
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>&key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user"
									],
									"query": [
										{
											"key": "accountId",
											"value": "5b10ac8d82e05b22cc7d4ef5"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>&key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user"
									],
									"query": [
										{
											"key": "accountId",
											"value": "5b10ac8d82e05b22cc7d4ef5"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user cannot be removed.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>&key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user"
									],
									"query": [
										{
											"key": "accountId",
											"value": "5b10ac8d82e05b22cc7d4ef5"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  `accountId` is missing.\n *  the user is not found.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>&key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user"
									],
									"query": [
										{
											"key": "accountId",
											"value": "5b10ac8d82e05b22cc7d4ef5"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic <credentials>",
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>&key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user"
									],
									"query": [
										{
											"key": "accountId",
											"value": "5b10ac8d82e05b22cc7d4ef5"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get User Groups",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/user/groups?accountId=<string>&username=<string>&key=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"user",
								"groups"
							],
							"query": [
								{
									"key": "accountId",
									"value": "<string>",
									"description": "(Required) The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*."
								},
								{
									"key": "username",
									"value": "<string>",
									"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
								},
								{
									"key": "key",
									"value": "<string>",
									"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
								}
							]
						},
						"description": "Returns the groups to which a user belongs.\n\n**[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/groups?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>&key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"groups"
									],
									"query": [
										{
											"key": "accountId",
											"value": "5b10ac8d82e05b22cc7d4ef5"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"name\\\":\\\"jira-administrators\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/group?groupname=jira-administrators\\\"}\""
						},
						{
							"name": "Returned if the calling user does not have the *Browse users and groups* global permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/groups?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>&key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"groups"
									],
									"query": [
										{
											"key": "accountId",
											"value": "5b10ac8d82e05b22cc7d4ef5"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  `accountId` is missing.\n *  the user is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/groups?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>&key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"groups"
									],
									"query": [
										{
											"key": "accountId",
											"value": "5b10ac8d82e05b22cc7d4ef5"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/groups?accountId=5b10ac8d82e05b22cc7d4ef5&username=<string>&key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"groups"
									],
									"query": [
										{
											"key": "accountId",
											"value": "5b10ac8d82e05b22cc7d4ef5"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "key",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Find Users With Permissions",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/user/permission/search?query=<string>&username=<string>&accountId=<string>&permissions=<string>&issueKey=<string>&projectKey=<string>&startAt=0&maxResults=50",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"user",
								"permission",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>",
									"description": "A query string that is matched against user attributes, such as `displayName` and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `accountId` is specified."
								},
								{
									"key": "username",
									"value": "<string>",
									"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
								},
								{
									"key": "accountId",
									"value": "<string>",
									"description": "A query string that is matched exactly against user `accountId`. Required, unless `query` is specified."
								},
								{
									"key": "permissions",
									"value": "<string>",
									"description": "(Required) A comma separated list of permissions. Permissions can be specified as any:\n\n *  permission returned by [Get all permissions](#api-rest-api-3-permissions-get).\n *  custom project permission added by Connect apps.\n *  (deprecated) one of the following:\n    \n     *  ASSIGNABLE\\_USER\n     *  ASSIGN\\_ISSUE\n     *  ATTACHMENT\\_DELETE\\_ALL\n     *  ATTACHMENT\\_DELETE\\_OWN\n     *  BROWSE\n     *  CLOSE\\_ISSUE\n     *  COMMENT\\_DELETE\\_ALL\n     *  COMMENT\\_DELETE\\_OWN\n     *  COMMENT\\_EDIT\\_ALL\n     *  COMMENT\\_EDIT\\_OWN\n     *  COMMENT\\_ISSUE\n     *  CREATE\\_ATTACHMENT\n     *  CREATE\\_ISSUE\n     *  DELETE\\_ISSUE\n     *  EDIT\\_ISSUE\n     *  LINK\\_ISSUE\n     *  MANAGE\\_WATCHER\\_LIST\n     *  MODIFY\\_REPORTER\n     *  MOVE\\_ISSUE\n     *  PROJECT\\_ADMIN\n     *  RESOLVE\\_ISSUE\n     *  SCHEDULE\\_ISSUE\n     *  SET\\_ISSUE\\_SECURITY\n     *  TRANSITION\\_ISSUE\n     *  VIEW\\_VERSION\\_CONTROL\n     *  VIEW\\_VOTERS\\_AND\\_WATCHERS\n     *  VIEW\\_WORKFLOW\\_READONLY\n     *  WORKLOG\\_DELETE\\_ALL\n     *  WORKLOG\\_DELETE\\_OWN\n     *  WORKLOG\\_EDIT\\_ALL\n     *  WORKLOG\\_EDIT\\_OWN\n     *  WORK\\_ISSUE"
								},
								{
									"key": "issueKey",
									"value": "<string>",
									"description": "The issue key for the issue."
								},
								{
									"key": "projectKey",
									"value": "<string>",
									"description": "The project key for the project (case sensitive)."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								}
							]
						},
						"description": "Returns a list of users who fulfill these criteria:\n\n *  their user attributes match a search string.\n *  they have a set of permissions for a project or issue.\n\nIf no search string is provided, a list of all users with the permissions is returned.\n\nThis operation takes the users in the range defined by `startAt` and `maxResults`, up to the thousandth user, and then returns only the users from that range that match the search string and have permission for the project or issue. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who match the search string and have permission for the project or issue, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:**\n\n *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg), to get users for any project.\n *  *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for a project, to get users for that project."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/permission/search?query=query&username=<string>&accountId=<string>&permissions=<string>&issueKey=<string>&projectKey=<string>&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"permission",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "query"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "permissions",
											"value": "<string>"
										},
										{
											"key": "issueKey",
											"value": "<string>"
										},
										{
											"key": "projectKey",
											"value": "<string>"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10ac8d82e05b22cc7d4ef5\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Emma Richards\\\",\\\"active\\\":false}]\""
						},
						{
							"name": "Returned if the issue or project is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/permission/search?query=query&username=<string>&accountId=<string>&permissions=<string>&issueKey=<string>&projectKey=<string>&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"permission",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "query"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "permissions",
											"value": "<string>"
										},
										{
											"key": "issueKey",
											"value": "<string>"
										},
										{
											"key": "projectKey",
											"value": "<string>"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/permission/search?query=query&username=<string>&accountId=<string>&permissions=<string>&issueKey=<string>&projectKey=<string>&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"permission",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "query"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "permissions",
											"value": "<string>"
										},
										{
											"key": "issueKey",
											"value": "<string>"
										},
										{
											"key": "projectKey",
											"value": "<string>"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  `issueKey` or `projectKey` is missing.\n *  `query` or `accountId` is missing.\n *  `query` and `accountId` are provided.\n *  `permissions` is empty or contains an invalid entry.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/permission/search?query=query&username=<string>&accountId=<string>&permissions=<string>&issueKey=<string>&projectKey=<string>&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"permission",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "query"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "permissions",
											"value": "<string>"
										},
										{
											"key": "issueKey",
											"value": "<string>"
										},
										{
											"key": "projectKey",
											"value": "<string>"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/permission/search?query=query&username=<string>&accountId=<string>&permissions=<string>&issueKey=<string>&projectKey=<string>&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"permission",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "query"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "permissions",
											"value": "<string>"
										},
										{
											"key": "issueKey",
											"value": "<string>"
										},
										{
											"key": "projectKey",
											"value": "<string>"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Find Users For Picker",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/user/picker?query=<string>&maxResults=50&showAvatar=false&exclude=<string>&exclude=<string>&excludeAccountIds=<string>&excludeAccountIds=<string>&avatarSize=<string>&excludeConnectUsers=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"user",
								"picker"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>",
									"description": "(Required) A query string that is matched against user attributes, such as `displayName`, and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return. The total number of matched users is returned in `total`."
								},
								{
									"key": "showAvatar",
									"value": "false",
									"description": "Include the URI to the user's avatar."
								},
								{
									"key": "exclude",
									"value": "<string>",
									"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
								},
								{
									"key": "exclude",
									"value": "<string>",
									"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
								},
								{
									"key": "excludeAccountIds",
									"value": "<string>",
									"description": "A list of account IDs to exclude from the search results. This parameter accepts a comma-separated list. Multiple account IDs can also be provided using an ampersand-separated list. For example, `excludeAccountIds=5b10a2844c20165700ede21g,5b10a0effa615349cb016cd8&excludeAccountIds=5b10ac8d82e05b22cc7d4ef5`. Cannot be provided with `exclude`."
								},
								{
									"key": "excludeAccountIds",
									"value": "<string>",
									"description": "A list of account IDs to exclude from the search results. This parameter accepts a comma-separated list. Multiple account IDs can also be provided using an ampersand-separated list. For example, `excludeAccountIds=5b10a2844c20165700ede21g,5b10a0effa615349cb016cd8&excludeAccountIds=5b10ac8d82e05b22cc7d4ef5`. Cannot be provided with `exclude`."
								},
								{
									"key": "avatarSize",
									"value": "<string>"
								},
								{
									"key": "excludeConnectUsers",
									"value": "false"
								}
							]
						},
						"description": "Returns a list of users whose attributes match the query term. The returned object includes the `html` field where the matched query term is highlighted with the HTML strong tag. A list of account IDs can be provided to exclude users from the results.\n\nThis operation takes the users in the range defined by `maxResults`, up to the thousandth user, and then returns only the users from that range that match the query term. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who match the query term, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Anonymous calls and calls by users without the required permission return search results for an exact name match only."
					},
					"response": [
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/picker?query=<string>&maxResults=50&showAvatar=false&exclude=<string>&exclude=<string>&excludeAccountIds=<string>&excludeAccountIds=<string>&avatarSize=<string>&excludeConnectUsers=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"picker"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "showAvatar",
											"value": "false"
										},
										{
											"key": "exclude",
											"value": "<string>"
										},
										{
											"key": "exclude",
											"value": "<string>"
										},
										{
											"key": "excludeAccountIds",
											"value": "<string>"
										},
										{
											"key": "excludeAccountIds",
											"value": "<string>"
										},
										{
											"key": "avatarSize",
											"value": "<string>"
										},
										{
											"key": "excludeConnectUsers",
											"value": "false"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if `exclude` and `excludeAccountIds` are provided.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/picker?query=<string>&maxResults=50&showAvatar=false&exclude=<string>&exclude=<string>&excludeAccountIds=<string>&excludeAccountIds=<string>&avatarSize=<string>&excludeConnectUsers=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"picker"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "showAvatar",
											"value": "false"
										},
										{
											"key": "exclude",
											"value": "<string>"
										},
										{
											"key": "exclude",
											"value": "<string>"
										},
										{
											"key": "excludeAccountIds",
											"value": "<string>"
										},
										{
											"key": "excludeAccountIds",
											"value": "<string>"
										},
										{
											"key": "avatarSize",
											"value": "<string>"
										},
										{
											"key": "excludeConnectUsers",
											"value": "false"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/picker?query=<string>&maxResults=50&showAvatar=false&exclude=<string>&exclude=<string>&excludeAccountIds=<string>&excludeAccountIds=<string>&avatarSize=<string>&excludeConnectUsers=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"picker"
									],
									"query": [
										{
											"key": "query",
											"value": "<string>"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "showAvatar",
											"value": "false"
										},
										{
											"key": "exclude",
											"value": "<string>"
										},
										{
											"key": "exclude",
											"value": "<string>"
										},
										{
											"key": "excludeAccountIds",
											"value": "<string>"
										},
										{
											"key": "excludeAccountIds",
											"value": "<string>"
										},
										{
											"key": "avatarSize",
											"value": "<string>"
										},
										{
											"key": "excludeConnectUsers",
											"value": "false"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"users\\\":[{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"accountType\\\":\\\"atlassian\\\",\\\"name\\\":\\\"mia\\\",\\\"key\\\":\\\"mia\\\",\\\"html\\\":\\\"<strong>Mi</strong>a Krystof - <strong>mi</strong>a@example.com (<strong>mi</strong>a)\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"avatarUrl\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\"}],\\\"total\\\":25,\\\"header\\\":\\\"Showing 20 of 25 matching groups\\\"}\""
						}
					]
				},
				{
					"name": "Find Users With Browse Permission",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/user/viewissue/search?query=<string>&username=<string>&accountId=<string>&issueKey=<string>&projectKey=<string>&startAt=0&maxResults=50",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"user",
								"viewissue",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>",
									"description": "A query string that is matched against user attributes, such as `displayName` and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `accountId` is specified."
								},
								{
									"key": "username",
									"value": "<string>",
									"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
								},
								{
									"key": "accountId",
									"value": "<string>",
									"description": "A query string that is matched exactly against user `accountId`. Required, unless `query` is specified."
								},
								{
									"key": "issueKey",
									"value": "<string>",
									"description": "The issue key for the issue. Required, unless `projectKey` is specified."
								},
								{
									"key": "projectKey",
									"value": "<string>",
									"description": "The project key for the project (case sensitive). Required, unless `issueKey` is specified."
								},
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								}
							]
						},
						"description": "Returns a list of users who fulfill these criteria:\n\n *  their user attributes match a search string.\n *  they have permission to browse issues.\n\nUse this resource to find users who can browse:\n\n *  an issue, by providing the `issueKey`.\n *  any issue in a project, by providing the `projectKey`.\n\nThis operation takes the users in the range defined by `startAt` and `maxResults`, up to the thousandth user, and then returns only the users from that range that match the search string and have permission to browse issues. This means the operation usually returns fewer users than specified in `maxResults`. To get all the users who match the search string and have permission to browse issues, use [Get all users](#api-rest-api-3-users-search-get) and filter the records in your code.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg). Anonymous calls and calls by users without the required permission return empty search results."
					},
					"response": [
						{
							"name": "Returned if the issue or project is not found.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/viewissue/search?query=query&username=<string>&accountId=<string>&issueKey=<string>&projectKey=<string>&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"viewissue",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "query"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "issueKey",
											"value": "<string>"
										},
										{
											"key": "projectKey",
											"value": "<string>"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/viewissue/search?query=query&username=<string>&accountId=<string>&issueKey=<string>&projectKey=<string>&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"viewissue",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "query"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "issueKey",
											"value": "<string>"
										},
										{
											"key": "projectKey",
											"value": "<string>"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  `issueKey` or `projectKey` is missing.\n *  `query` or `accountId` is missing.\n *  `query` and `accountId` are provided.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/viewissue/search?query=query&username=<string>&accountId=<string>&issueKey=<string>&projectKey=<string>&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"viewissue",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "query"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "issueKey",
											"value": "<string>"
										},
										{
											"key": "projectKey",
											"value": "<string>"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/user/viewissue/search?query=query&username=<string>&accountId=<string>&issueKey=<string>&projectKey=<string>&startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"user",
										"viewissue",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "query"
										},
										{
											"key": "username",
											"value": "<string>"
										},
										{
											"key": "accountId",
											"value": "<string>"
										},
										{
											"key": "issueKey",
											"value": "<string>"
										},
										{
											"key": "projectKey",
											"value": "<string>"
										},
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10ac8d82e05b22cc7d4ef5\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Emma Richards\\\",\\\"active\\\":false}]\""
						}
					]
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users Default",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/users?startAt=0&maxResults=50",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"users"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return."
								}
							]
						},
						"description": "Returns a list of all (active and inactive) users.\n\n**[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request takes longer than 10 seconds or is interrupted.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/users?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"users"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user doesn't have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/users?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"users"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/users?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"users"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/users?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"users"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10ac8d82e05b22cc7d4ef5\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Emma Richards\\\",\\\"active\\\":false}]\""
						}
					]
				},
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/users/search?startAt=0&maxResults=50",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"users",
								"search"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return."
								}
							]
						},
						"description": "Returns a list of all (active and inactive) users.\n\n**[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request takes longer than 10 seconds or is interrupted.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/users/search?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"users",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/users/search?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"users",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10ac8d82e05b22cc7d4ef5\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10ac8d82e05b22cc7d4ef5\\\",\\\"name\\\":\\\"\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/AA-3.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Emma Richards\\\",\\\"active\\\":false}]\""
						},
						{
							"name": "Returned if the user doesn't have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/users/search?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"users",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/users/search?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"users",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Version",
			"item": [
				{
					"name": "Id}",
					"item": [
						{
							"name": "Get Version",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/version/:id?expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"version",
										":id"
									],
									"query": [
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use [expand](#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property represents the number of issues with a status other than *to do*, *in progress*, and *done*."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the version."
										}
									]
								},
								"description": "Returns a project version.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the version."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the version is not found or the user does not have the necessary permission.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id?expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id"
											],
											"query": [
												{
													"key": "expand",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/version/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"description\\\":\\\"An excellent version\\\",\\\"name\\\":\\\"New Version 1\\\",\\\"archived\\\":false,\\\"released\\\":true,\\\"releaseDate\\\":\\\"2010-07-06\\\",\\\"overdue\\\":true,\\\"userReleaseDate\\\":\\\"6/Jul/2010\\\",\\\"projectId\\\":10000}\""
								}
							]
						},
						{
							"name": "Update Version",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expand\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"archived\": \"<boolean>\",\n    \"released\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"releaseDate\": \"<date>\",\n    \"project\": \"<string>\",\n    \"projectId\": \"<long>\",\n    \"moveUnfixedIssuesTo\": \"<uri>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/version/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"version",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the version."
										}
									]
								},
								"description": "Updates a project version.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that contains the version."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"archived\": false,\n    \"overdue\": true,\n    \"releaseDate\": \"2010-07-06\",\n    \"name\": \"New Version 1\",\n    \"self\": \"https://your-domain.atlassian.net/rest/api/~ver~/version/10000\",\n    \"description\": \"An excellent version\",\n    \"userReleaseDate\": \"6/Jul/2010\",\n    \"id\": \"10000\",\n    \"projectId\": 10000,\n    \"released\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/version/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"description\\\":\\\"An excellent version\\\",\\\"name\\\":\\\"New Version 1\\\",\\\"archived\\\":false,\\\"released\\\":true,\\\"releaseDate\\\":\\\"2010-07-06\\\",\\\"userReleaseDate\\\":\\\"6/Jul/2010\\\",\\\"project\\\":\\\"PXA\\\",\\\"projectId\\\":10000}\""
								},
								{
									"name": "Returned if the version is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"archived\": false,\n    \"overdue\": true,\n    \"releaseDate\": \"2010-07-06\",\n    \"name\": \"New Version 1\",\n    \"self\": \"https://your-domain.atlassian.net/rest/api/~ver~/version/10000\",\n    \"description\": \"An excellent version\",\n    \"userReleaseDate\": \"6/Jul/2010\",\n    \"id\": \"10000\",\n    \"projectId\": 10000,\n    \"released\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"archived\": false,\n    \"overdue\": true,\n    \"releaseDate\": \"2010-07-06\",\n    \"name\": \"New Version 1\",\n    \"self\": \"https://your-domain.atlassian.net/rest/api/~ver~/version/10000\",\n    \"description\": \"An excellent version\",\n    \"userReleaseDate\": \"6/Jul/2010\",\n    \"id\": \"10000\",\n    \"projectId\": 10000,\n    \"released\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  the request is invalid.\n *  the user does not have the required permissions.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"archived\": false,\n    \"overdue\": true,\n    \"releaseDate\": \"2010-07-06\",\n    \"name\": \"New Version 1\",\n    \"self\": \"https://your-domain.atlassian.net/rest/api/~ver~/version/10000\",\n    \"description\": \"An excellent version\",\n    \"userReleaseDate\": \"6/Jul/2010\",\n    \"id\": \"10000\",\n    \"projectId\": 10000,\n    \"released\": true\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete Version",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/version/:id?moveFixIssuesTo=<string>&moveAffectedIssuesTo=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"version",
										":id"
									],
									"query": [
										{
											"key": "moveFixIssuesTo",
											"value": "<string>",
											"description": "The ID of the version to update `fixVersion` to when the field contains the deleted version. The replacement version must be in the same project as the version being deleted and cannot be the version being deleted."
										},
										{
											"key": "moveAffectedIssuesTo",
											"value": "<string>",
											"description": "The ID of the version to update `affectedVersion` to when the field contains the deleted version. The replacement version must be in the same project as the version being deleted and cannot be the version being deleted."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the version."
										}
									]
								},
								"description": "Deletes a project version.\n\nDeprecated, use [ Delete and replace version](#api-rest-api-3-version-id-removeAndSwap-post) that supports swapping version values in custom fields, in addition to the swapping for `fixVersion` and `affectedVersion` provided in this resource.\n\nAlternative versions can be provided to update issues that use the deleted version in `fixVersion` or `affectedVersion`. If alternatives are not provided, occurrences of `fixVersion` and `affectedVersion` that contain the deleted version are cleared.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that contains the version."
							},
							"response": [
								{
									"name": "Returned if:\n\n *  the authentication credentials are incorrect.\n *  the user does not have the required permissions.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id?moveFixIssuesTo=<string>&moveAffectedIssuesTo=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id"
											],
											"query": [
												{
													"key": "moveFixIssuesTo",
													"value": "<string>"
												},
												{
													"key": "moveAffectedIssuesTo",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the version is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id?moveFixIssuesTo=<string>&moveAffectedIssuesTo=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id"
											],
											"query": [
												{
													"key": "moveFixIssuesTo",
													"value": "<string>"
												},
												{
													"key": "moveAffectedIssuesTo",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id?moveFixIssuesTo=<string>&moveAffectedIssuesTo=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id"
											],
											"query": [
												{
													"key": "moveFixIssuesTo",
													"value": "<string>"
												},
												{
													"key": "moveAffectedIssuesTo",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the version is deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id?moveFixIssuesTo=<string>&moveAffectedIssuesTo=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id"
											],
											"query": [
												{
													"key": "moveFixIssuesTo",
													"value": "<string>"
												},
												{
													"key": "moveAffectedIssuesTo",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Merge Versions",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/version/:id/mergeto/:moveIssuesTo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"version",
										":id",
										"mergeto",
										":moveIssuesTo"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the version to delete."
										},
										{
											"key": "moveIssuesTo",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the version to merge into."
										}
									]
								},
								"description": "Merges two project versions. The merge is completed by deleting the version specified in `id` and replacing any occurrences of its ID in `fixVersion` with the version ID specified in `moveIssuesTo`.\n\nConsider using [ Delete and replace version](#api-rest-api-3-version-id-removeAndSwap-post) instead. This resource supports swapping version values in `fixVersion`, `affectedVersion`, and custom fields.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that contains the version."
							},
							"response": [
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/mergeto/:moveIssuesTo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"mergeto",
												":moveIssuesTo"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "moveIssuesTo"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the version is deleted.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/mergeto/:moveIssuesTo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"mergeto",
												":moveIssuesTo"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "moveIssuesTo"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if:\n\n *  the authentication credentials are incorrect or missing.\n *  the user does not have the required permissions.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/mergeto/:moveIssuesTo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"mergeto",
												":moveIssuesTo"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "moveIssuesTo"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the version to be deleted or the version to merge to are not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/mergeto/:moveIssuesTo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"mergeto",
												":moveIssuesTo"
											],
											"variable": [
												{
													"key": "id"
												},
												{
													"key": "moveIssuesTo"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Move Version",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"after\": \"<uri>\",\n    \"position\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/version/:id/move",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"version",
										":id",
										"move"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the version to be moved."
										}
									]
								},
								"description": "Modifies the version's sequence within the project, which affects the display order of the versions in Jira.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse projects* project permission for the project that contains the version."
							},
							"response": [
								{
									"name": "Returned if:\n\n *  the authentication credentials are incorrect or missing\n *  the user does not have the required commissions.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"after\": \"https://your-domain.atlassian.net/rest/api/~ver~/version/10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/move",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"move"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the version or move after version are not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"after\": \"https://your-domain.atlassian.net/rest/api/~ver~/version/10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/move",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"move"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  no body parameters are provided.\n *  `after` and `position` are provided.\n *  `position` is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"after\": \"https://your-domain.atlassian.net/rest/api/~ver~/version/10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/move",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"move"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"after\": \"https://your-domain.atlassian.net/rest/api/~ver~/version/10000\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/move",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"move"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/version/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"description\\\":\\\"An excellent version\\\",\\\"name\\\":\\\"New Version 1\\\",\\\"archived\\\":false,\\\"released\\\":true,\\\"releaseDate\\\":\\\"2010-07-06\\\",\\\"overdue\\\":true,\\\"userReleaseDate\\\":\\\"6/Jul/2010\\\",\\\"projectId\\\":10000}\""
								}
							]
						},
						{
							"name": "Get Version's Related Issues Count",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/version/:id/relatedIssueCounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"version",
										":id",
										"relatedIssueCounts"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the version."
										}
									]
								},
								"description": "Returns the following counts for a version:\n\n *  Number of issues where the `fixVersion` is set to the version.\n *  Number of issues where the `affectedVersion` is set to the version.\n *  Number of issues where a version custom field is set to the version.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse projects* project permission for the project that contains the version."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/relatedIssueCounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"relatedIssueCounts"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  the version is not found.\n *  the user does not have the required permissions.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/relatedIssueCounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"relatedIssueCounts"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/relatedIssueCounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"relatedIssueCounts"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/version/10000\\\",\\\"issuesFixedCount\\\":23,\\\"issuesAffectedCount\\\":101,\\\"issueCountWithCustomFieldsShowingVersion\\\":54,\\\"customFieldUsage\\\":[{\\\"fieldName\\\":\\\"Field1\\\",\\\"customFieldId\\\":10000,\\\"issueCountWithVersionInCustomField\\\":2},{\\\"fieldName\\\":\\\"Field2\\\",\\\"customFieldId\\\":10010,\\\"issueCountWithVersionInCustomField\\\":3}]}\""
								}
							]
						},
						{
							"name": "Delete And Replace Version",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"moveFixIssuesTo\": \"<long>\",\n    \"moveAffectedIssuesTo\": \"<long>\",\n    \"customFieldReplacementList\": [\n        {\n            \"customFieldId\": \"<long>\",\n            \"moveTo\": \"<long>\"\n        },\n        {\n            \"customFieldId\": \"<long>\",\n            \"moveTo\": \"<long>\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/version/:id/removeAndSwap",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"version",
										":id",
										"removeAndSwap"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the version."
										}
									]
								},
								"description": "Deletes a project version.\n\nAlternative versions can be provided to update issues that use the deleted version in `fixVersion`, `affectedVersion`, or any version picker custom fields. If alternatives are not provided, occurrences of `fixVersion`, `affectedVersion`, and any version picker custom field, that contain the deleted version, are cleared. Any replacement version must be in the same project as the version being deleted and cannot be the version being deleted.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that contains the version."
							},
							"response": [
								{
									"name": "Returned if:\n\n *  the version to delete is not found.\n *  the user does not have the required permissions.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"moveFixIssuesTo\": \"<long>\",\n    \"moveAffectedIssuesTo\": \"<long>\",\n    \"customFieldReplacementList\": [\n        {\n            \"customFieldId\": \"<long>\",\n            \"moveTo\": \"<long>\"\n        },\n        {\n            \"customFieldId\": \"<long>\",\n            \"moveTo\": \"<long>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/removeAndSwap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"removeAndSwap"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the version is deleted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"moveFixIssuesTo\": \"<long>\",\n    \"moveAffectedIssuesTo\": \"<long>\",\n    \"customFieldReplacementList\": [\n        {\n            \"customFieldId\": \"<long>\",\n            \"moveTo\": \"<long>\"\n        },\n        {\n            \"customFieldId\": \"<long>\",\n            \"moveTo\": \"<long>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/removeAndSwap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"removeAndSwap"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"moveFixIssuesTo\": \"<long>\",\n    \"moveAffectedIssuesTo\": \"<long>\",\n    \"customFieldReplacementList\": [\n        {\n            \"customFieldId\": \"<long>\",\n            \"moveTo\": \"<long>\"\n        },\n        {\n            \"customFieldId\": \"<long>\",\n            \"moveTo\": \"<long>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/removeAndSwap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"removeAndSwap"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"moveFixIssuesTo\": \"<long>\",\n    \"moveAffectedIssuesTo\": \"<long>\",\n    \"customFieldReplacementList\": [\n        {\n            \"customFieldId\": \"<long>\",\n            \"moveTo\": \"<long>\"\n        },\n        {\n            \"customFieldId\": \"<long>\",\n            \"moveTo\": \"<long>\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/removeAndSwap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"removeAndSwap"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get Version's Unresolved Issues Count",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/version/:id/unresolvedIssueCount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"version",
										":id",
										"unresolvedIssueCount"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of the version."
										}
									]
								},
								"description": "Returns counts of the issues and unresolved issues for the project version.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse projects* project permission for the project that contains the version."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/unresolvedIssueCount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"unresolvedIssueCount"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/version/10000\\\",\\\"issuesUnresolvedCount\\\":23,\\\"issuesCount\\\":30}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/unresolvedIssueCount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"unresolvedIssueCount"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if:\n\n *  the version is not found.\n *  the user does not have the required permissions.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/version/:id/unresolvedIssueCount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"version",
												":id",
												"unresolvedIssueCount"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Create Version",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"expand\": \"<string>\",\n    \"description\": \"<string>\",\n    \"name\": \"<string>\",\n    \"archived\": \"<boolean>\",\n    \"released\": \"<boolean>\",\n    \"startDate\": \"<date>\",\n    \"releaseDate\": \"<date>\",\n    \"project\": \"<string>\",\n    \"projectId\": \"<long>\",\n    \"moveUnfixedIssuesTo\": \"<uri>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"version"
							]
						},
						"description": "Creates a project version.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) or *Administer Projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project the version is added to."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"archived\": false,\n    \"releaseDate\": \"2010-07-06\",\n    \"name\": \"New Version 1\",\n    \"description\": \"An excellent version\",\n    \"projectId\": 10000,\n    \"released\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"version"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/version/10000\\\",\\\"id\\\":\\\"10000\\\",\\\"description\\\":\\\"An excellent version\\\",\\\"name\\\":\\\"New Version 1\\\",\\\"archived\\\":false,\\\"released\\\":true,\\\"releaseDate\\\":\\\"2010-07-06\\\",\\\"userReleaseDate\\\":\\\"6/Jul/2010\\\",\\\"project\\\":\\\"PXA\\\",\\\"projectId\\\":10000}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"archived\": false,\n    \"releaseDate\": \"2010-07-06\",\n    \"name\": \"New Version 1\",\n    \"description\": \"An excellent version\",\n    \"projectId\": 10000,\n    \"released\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"version"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if:\n\n *  the project is not found.\n *  the user does not have the required permissions.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"archived\": false,\n    \"releaseDate\": \"2010-07-06\",\n    \"name\": \"New Version 1\",\n    \"description\": \"An excellent version\",\n    \"projectId\": 10000,\n    \"released\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"version"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"archived\": false,\n    \"releaseDate\": \"2010-07-06\",\n    \"name\": \"New Version 1\",\n    \"description\": \"An excellent version\",\n    \"projectId\": 10000,\n    \"released\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"version"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Webhook",
			"item": [
				{
					"name": "Get Dynamic Webhooks For App",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/webhook?startAt=0&maxResults=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"webhook"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "100",
									"description": "The maximum number of items to return per page."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of the webhooks registered by the calling app.\n\n**[Permissions](#permissions) required:** Only [Connect apps](https://developer.atlassian.com/cloud/jira/platform/integrating-with-jira-cloud/#atlassian-connect) can use this operation."
					},
					"response": [
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook?startAt=0&maxResults=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "100"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the caller is not a Connect app.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook?startAt=0&maxResults=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "100"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook?startAt=0&maxResults=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":2,\\\"startAt\\\":0,\\\"total\\\":100,\\\"isLast\\\":false,\\\"values\\\":[{\\\"id\\\":10000,\\\"jqlFilter\\\":\\\"project = PRJ\\\",\\\"events\\\":[\\\"jira:issue_updated\\\",\\\"jira:issue_created\\\"],\\\"expirationDate\\\":\\\"2019-06-01T12:42:30.000+0000\\\"},{\\\"id\\\":10001,\\\"jqlFilter\\\":\\\"issuetype = Bug\\\",\\\"events\\\":[\\\"jira:issue_created\\\"],\\\"expirationDate\\\":\\\"2019-06-01T12:42:30.000+0000\\\"}]}\""
						}
					]
				},
				{
					"name": "Register Dynamic Webhooks",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"url\": \"<string>\",\n    \"webhooks\": [\n        {\n            \"events\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"jqlFilter\": \"<string>\"\n        },\n        {\n            \"events\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"jqlFilter\": \"<string>\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/webhook",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"webhook"
							]
						},
						"description": "Registers webhooks.\n\n**[Permissions](#permissions) required:** Only [Connect apps](https://developer.atlassian.com/cloud/jira/platform/integrating-with-jira-cloud/#atlassian-connect) can use this operation."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhooks\": [\n        {\n            \"jqlFilter\": \"project = PROJ\",\n            \"events\": [\n                \"jira:issue_created\",\n                \"jira:issue_updated\"\n            ]\n        },\n        {\n            \"jqlFilter\": \"project IN (PROJ, EXP) AND status = done\",\n            \"events\": [\n                \"jira:issue_deleted\"\n            ]\n        }\n    ],\n    \"url\": \"https://your-app.example.com/webhook-received\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"webhookRegistrationResult\\\":[{\\\"createdWebhookId\\\":1000},{\\\"errors\\\":[\\\"The clause watchCount is unsupported\\\"]},{\\\"createdWebhookId\\\":1001}]}\""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhooks\": [\n        {\n            \"jqlFilter\": \"project = PROJ\",\n            \"events\": [\n                \"jira:issue_created\",\n                \"jira:issue_updated\"\n            ]\n        },\n        {\n            \"jqlFilter\": \"project IN (PROJ, EXP) AND status = done\",\n            \"events\": [\n                \"jira:issue_deleted\"\n            ]\n        }\n    ],\n    \"url\": \"https://your-app.example.com/webhook-received\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the caller is not a Connect app.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhooks\": [\n        {\n            \"jqlFilter\": \"project = PROJ\",\n            \"events\": [\n                \"jira:issue_created\",\n                \"jira:issue_updated\"\n            ]\n        },\n        {\n            \"jqlFilter\": \"project IN (PROJ, EXP) AND status = done\",\n            \"events\": [\n                \"jira:issue_deleted\"\n            ]\n        }\n    ],\n    \"url\": \"https://your-app.example.com/webhook-received\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						}
					]
				},
				{
					"name": "Delete Webhooks By Id",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"webhookIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/webhook",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"webhook"
							]
						},
						"description": "Removes webhooks by ID. Only webhooks registered by the calling Connect app are removed. If webhooks created by other apps are specified, they are ignored.\n\n**[Permissions](#permissions) required:** Only [Connect apps](https://developer.atlassian.com/cloud/jira/platform/integrating-with-jira-cloud/#atlassian-connect) can use this operation."
					},
					"response": [
						{
							"name": "Returned if the list of webhook IDs is missing.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhookIds\": [\n        10000,\n        10001,\n        10042\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the caller is not a Connect app.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhookIds\": [\n        10000,\n        10001,\n        10042\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhookIds\": [\n        10000,\n        10001,\n        10042\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Failed Webhooks",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/webhook/failed?maxResults=<integer>&after=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"webhook",
								"failed"
							],
							"query": [
								{
									"key": "maxResults",
									"value": "<integer>",
									"description": "The maximum number of webhooks to return per page. If obeying the maxResults directive would result in records with the same failure time being split across pages, the directive is ignored and all records with the same failure time included on the page."
								},
								{
									"key": "after",
									"value": "<long>",
									"description": "The time after which any webhook failure must have occurred for the record to be returned, expressed as milliseconds since the UNIX epoch."
								}
							]
						},
						"description": "Returns webhooks that have recently failed to be delivered to the requesting app after the maximum number of retries.\n\nAfter 72 hours the failure may no longer be returned by this operation.\n\nThe oldest failure is returned first.\n\nThis method uses a cursor-based pagination. To request the next page use the failure time of the last webhook on the list as the `failedAfter` value or use the URL provided in `next`.\n\n**[Permissions](#permissions) required:** Only [Connect apps](https://developer.atlassian.com/cloud/jira/platform/integrating-with-jira-cloud/#atlassian-connect) can use this operation."
					},
					"response": [
						{
							"name": "Returned if the caller is not a Connect app.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook/failed?maxResults=<integer>&after=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook",
										"failed"
									],
									"query": [
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "after",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "400 response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook/failed?maxResults=<integer>&after=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook",
										"failed"
									],
									"query": [
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "after",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook/failed?maxResults=<integer>&after=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook",
										"failed"
									],
									"query": [
										{
											"key": "maxResults",
											"value": "<integer>"
										},
										{
											"key": "after",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"values\\\":[{\\\"id\\\":\\\"1\\\",\\\"body\\\":\\\"{\\\\\\\"data\\\\\\\":\\\\\\\"webhook data\\\\\\\"}\\\",\\\"url\\\":\\\"https://example.com\\\",\\\"failureTime\\\":1573118132000},{\\\"id\\\":\\\"2\\\",\\\"url\\\":\\\"https://example.com\\\",\\\"failureTime\\\":1573540473480}],\\\"maxResults\\\":100,\\\"next\\\":\\\"https://your-domain.atlassian.net/rest/api/3/webhook/failed?failedAfter=1573540473480&maxResults=100\\\"}\""
						}
					]
				},
				{
					"name": "Extend Webhook Life",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"webhookIds\": [\n        \"<long>\",\n        \"<long>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/webhook/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"webhook",
								"refresh"
							]
						},
						"description": "Webhooks registered through the REST API expire after 30 days. Call this resource periodically to keep them alive.\n\nUnrecognized webhook IDs (nonexistent or belonging to other apps) are ignored.\n\n**[Permissions](#permissions) required:** Only [Connect apps](https://developer.atlassian.com/cloud/jira/platform/integrating-with-jira-cloud/#atlassian-connect) can use this operation."
					},
					"response": [
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhookIds\": [\n        10000,\n        10001,\n        10042\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook/refresh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook",
										"refresh"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhookIds\": [\n        10000,\n        10001,\n        10042\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook/refresh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook",
										"refresh"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"expirationDate\\\":\\\"2019-06-01T12:42:30.000+0000\\\"}\""
						},
						{
							"name": "Returned if the caller is not a Connect app.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhookIds\": [\n        10000,\n        10001,\n        10042\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/webhook/refresh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"webhook",
										"refresh"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
						}
					]
				}
			]
		},
		{
			"name": "Workflow",
			"item": [
				{
					"name": "Rule/config",
					"item": [
						{
							"name": "Get Workflow Transition Rule Configurations",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflow/rule/config?startAt=0&maxResults=10&types=<string>&keys=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflow",
										"rule",
										"config"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0",
											"description": "The index of the first item to return in a page of results (page offset)."
										},
										{
											"key": "maxResults",
											"value": "10",
											"description": "The maximum number of items to return per page."
										},
										{
											"key": "types",
											"value": "<string>",
											"description": "(Required) The types of the transition rules to return."
										},
										{
											"key": "keys",
											"value": "<string>",
											"description": "The transition rule class keys, as defined in the Connect app descriptor, of the transition rules to return."
										},
										{
											"key": "expand",
											"value": "<string>",
											"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts `transition`, which, for each rule, returns information about the transition the rule is assigned to."
										}
									]
								},
								"description": "Returns a [paginated](#pagination) list of workflows with transition rules. The workflows can be filtered to return only those containing workflow transition rules:\n\n *  of one or more transition rule types, such as [workflow post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/).\n *  matching one or more transition rule keys.\n\nOnly workflows containing transition rules created by the calling Connect app are returned. However, if a workflow is returned all transition rules that match the filters are returned for that workflow.\n\nDue to server-side optimizations, workflows with an empty list of rules may be returned; these workflows can be ignored.\n\n**[Permissions](#permissions) required:** Only Connect apps can use this operation."
							},
							"response": [
								{
									"name": "Returned if the any transition rule type is not supported.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/rule/config?startAt=0&maxResults=10&types=<string>&keys=<string>&expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"rule",
												"config"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "10"
												},
												{
													"key": "types",
													"value": "<string>"
												},
												{
													"key": "keys",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/rule/config?startAt=0&maxResults=10&types=<string>&keys=<string>&expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"rule",
												"config"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "10"
												},
												{
													"key": "types",
													"value": "<string>"
												},
												{
													"key": "keys",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/rule/config?startAt=0&maxResults=10&types=<string>&keys=<string>&expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"rule",
												"config"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "10"
												},
												{
													"key": "types",
													"value": "<string>"
												},
												{
													"key": "keys",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": "<string>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"maxResults\\\":10,\\\"startAt\\\":0,\\\"total\\\":1,\\\"isLast\\\":true,\\\"values\\\":[{\\\"workflowId\\\":{\\\"name\\\":\\\"My Workflow name\\\",\\\"draft\\\":false},\\\"postFunctions\\\":[{\\\"id\\\":\\\"b4d6cbdc-59f5-11e9-8647-d663bd873d93\\\",\\\"key\\\":\\\"postfunction-key\\\",\\\"configuration\\\":{\\\"value\\\":\\\"{ \\\\\\\"color\\\\\\\": \\\\\\\"red\\\\\\\" }\\\"},\\\"transition\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Open\\\"}}],\\\"conditions\\\":[{\\\"id\\\":\\\"d663bd873d93-59f5-11e9-8647-b4d6cbdc\\\",\\\"key\\\":\\\"condition-key\\\",\\\"configuration\\\":{\\\"value\\\":\\\"{ \\\\\\\"size\\\\\\\": \\\\\\\"medium\\\\\\\" }\\\"},\\\"transition\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Open\\\"}}],\\\"validators\\\":[{\\\"id\\\":\\\"11e9-59f5-b4d6cbdc-8647-d663bd873d93\\\",\\\"key\\\":\\\"validator-key\\\",\\\"configuration\\\":{\\\"value\\\":\\\"\\\\\\\"{ \\\\\\\\\\\\\\\"shape\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"square\\\\\\\\\\\\\\\" }\\\\\\\"\\\"},\\\"transition\\\":{\\\"id\\\":1,\\\"name\\\":\\\"Open\\\"}}]}]}\""
								},
								{
									"name": "Returned if the caller is not a Connect app.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/rule/config?startAt=0&maxResults=10&types=<string>&keys=<string>&expand=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"rule",
												"config"
											],
											"query": [
												{
													"key": "startAt",
													"value": "0"
												},
												{
													"key": "maxResults",
													"value": "10"
												},
												{
													"key": "types",
													"value": "<string>"
												},
												{
													"key": "keys",
													"value": "<string>"
												},
												{
													"key": "expand",
													"value": "<string>"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
								}
							]
						},
						{
							"name": "Update Workflow Transition Rule Configurations",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "null"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflow/rule/config",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflow",
										"rule",
										"config"
									]
								},
								"description": "Updates configuration of workflow transition rules. The following rule types are supported:\n\n *  [post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/)\n *  [conditions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-condition/)\n *  [validators](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-validator/)\n\nOnly rules created by the calling Connect app can be updated.\n\n**[Permissions](#permissions) required:** Only Connect apps can use this operation."
							},
							"response": [
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"workflows\": [\n        {\n            \"postFunctions\": [\n                {\n                    \"configuration\": {\n                        \"value\": \"{ \\\"color\\\": \\\"red\\\" }\"\n                    },\n                    \"id\": \"b4d6cbdc-59f5-11e9-8647-d663bd873d93\"\n                }\n            ],\n            \"validators\": [\n                {\n                    \"configuration\": {\n                        \"value\": \"{ \\\"shape\\\": \\\"square\\\" }\"\n                    },\n                    \"id\": \"11e9-59f5-b4d6cbdc-8647-d663bd873d93\"\n                }\n            ],\n            \"conditions\": [\n                {\n                    \"configuration\": {\n                        \"value\": \"{ \\\"size\\\": \\\"medium\\\" }\"\n                    },\n                    \"id\": \"d663bd873d93-59f5-11e9-8647-b4d6cbdc\"\n                }\n            ],\n            \"workflowId\": {\n                \"draft\": false,\n                \"name\": \"My Workflow name\"\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/rule/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"rule",
												"config"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"workflows\": [\n        {\n            \"postFunctions\": [\n                {\n                    \"configuration\": {\n                        \"value\": \"{ \\\"color\\\": \\\"red\\\" }\"\n                    },\n                    \"id\": \"b4d6cbdc-59f5-11e9-8647-d663bd873d93\"\n                }\n            ],\n            \"validators\": [\n                {\n                    \"configuration\": {\n                        \"value\": \"{ \\\"shape\\\": \\\"square\\\" }\"\n                    },\n                    \"id\": \"11e9-59f5-b4d6cbdc-8647-d663bd873d93\"\n                }\n            ],\n            \"conditions\": [\n                {\n                    \"configuration\": {\n                        \"value\": \"{ \\\"size\\\": \\\"medium\\\" }\"\n                    },\n                    \"id\": \"d663bd873d93-59f5-11e9-8647-b4d6cbdc\"\n                }\n            ],\n            \"workflowId\": {\n                \"draft\": false,\n                \"name\": \"My Workflow name\"\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/rule/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"rule",
												"config"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"updateResults\\\":[{\\\"workflowId\\\":{\\\"name\\\":\\\"Workflow with one rule not updated\\\",\\\"draft\\\":false},\\\"ruleUpdateErrors\\\":{\\\"example-rule-id\\\":[\\\"The rule with this id does not exist: example-rule-id\\\"]},\\\"updateErrors\\\":[]},{\\\"workflowId\\\":{\\\"name\\\":\\\"Workflow with all rules successfully updated\\\",\\\"draft\\\":true},\\\"ruleUpdateErrors\\\":{},\\\"updateErrors\\\":[]},{\\\"workflowId\\\":{\\\"name\\\":\\\"Non-existing workflow\\\",\\\"draft\\\":false},\\\"ruleUpdateErrors\\\":{},\\\"updateErrors\\\":[\\\"Workflow not found: WorkflowIdBean{name=Non-existing workflow, draft=false}\\\"]}]}\""
								},
								{
									"name": "Returned if the caller is not a Connect app.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic <credentials>",
												"description": {
													"content": "Added as a part of security scheme: basic",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"workflows\": [\n        {\n            \"postFunctions\": [\n                {\n                    \"configuration\": {\n                        \"value\": \"{ \\\"color\\\": \\\"red\\\" }\"\n                    },\n                    \"id\": \"b4d6cbdc-59f5-11e9-8647-d663bd873d93\"\n                }\n            ],\n            \"validators\": [\n                {\n                    \"configuration\": {\n                        \"value\": \"{ \\\"shape\\\": \\\"square\\\" }\"\n                    },\n                    \"id\": \"11e9-59f5-b4d6cbdc-8647-d663bd873d93\"\n                }\n            ],\n            \"conditions\": [\n                {\n                    \"configuration\": {\n                        \"value\": \"{ \\\"size\\\": \\\"medium\\\" }\"\n                    },\n                    \"id\": \"d663bd873d93-59f5-11e9-8647-b4d6cbdc\"\n                }\n            ],\n            \"workflowId\": {\n                \"draft\": false,\n                \"name\": \"My Workflow name\"\n            }\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/rule/config",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"rule",
												"config"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
								}
							]
						}
					]
				},
				{
					"name": "Transitions/transition Id}/properties",
					"item": [
						{
							"name": "Get Workflow Transition Properties",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?includeReservedKeys=false&key=<string>&workflowName=<string>&workflowMode=live",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflow",
										"transitions",
										":transitionId",
										"properties"
									],
									"query": [
										{
											"key": "includeReservedKeys",
											"value": "false",
											"description": "Some properties with keys that have the *jira.* prefix are reserved, which means they are not editable. To include these properties in the results, set this parameter to *true*."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "The key of the property being returned, also known as the name of the property. If this parameter is not specified, all properties on the transition are returned."
										},
										{
											"key": "workflowName",
											"value": "<string>",
											"description": "(Required) The name of the workflow that the transition belongs to."
										},
										{
											"key": "workflowMode",
											"value": "live",
											"description": "The workflow status. Set to *live* for active and inactive workflows, or *draft* for draft workflows."
										}
									],
									"variable": [
										{
											"key": "transitionId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the transition. To get the ID, view the workflow in text mode in the Jira administration console. The ID is shown next to the transition."
										}
									]
								},
								"description": "Returns the properties on a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the workflow transition or property is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?includeReservedKeys=false&key=<string>&workflowName=<string>&workflowMode=live",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "includeReservedKeys",
													"value": "false"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "live"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "200 response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?includeReservedKeys=false&key=<string>&workflowName=<string>&workflowMode=live",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "includeReservedKeys",
													"value": "false"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "live"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"[{\\\"key\\\":\\\"jira.i18n.title\\\",\\\"value\\\":\\\"some.title\\\",\\\"id\\\":\\\"jira.i18n.title\\\"},{\\\"key\\\":\\\"jira.permission\\\",\\\"value\\\":\\\"createissue\\\",\\\"id\\\":\\\"jira.permission\\\"}]\""
								},
								{
									"name": "Returned if the user does not have admin permission",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?includeReservedKeys=false&key=<string>&workflowName=<string>&workflowMode=live",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "includeReservedKeys",
													"value": "false"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "live"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?includeReservedKeys=false&key=<string>&workflowName=<string>&workflowMode=live",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "includeReservedKeys",
													"value": "false"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "live"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?includeReservedKeys=false&key=<string>&workflowName=<string>&workflowMode=live",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "includeReservedKeys",
													"value": "false"
												},
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "live"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Workflow Transition Property",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflow",
										"transitions",
										":transitionId",
										"properties"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) The key of the property being updated, also known as the name of the property. Set this to the same value as the `key` defined in the request body."
										},
										{
											"key": "workflowName",
											"value": "<string>",
											"description": "(Required) The name of the workflow that the transition belongs to."
										},
										{
											"key": "workflowMode",
											"value": "<string>",
											"description": "The workflow status. Set to `live` for inactive workflows or `draft` for draft workflows. Active workflows cannot be edited."
										}
									],
									"variable": [
										{
											"key": "transitionId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the transition. To get the ID, view the workflow in text mode in the Jira admin settings. The ID is shown next to the transition."
										}
									]
								},
								"description": "Updates a workflow transition by changing the property value. Trying to update a property that does not exist results in a new property being added to the transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"createissue\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "200 response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"createissue\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"key\\\":\\\"jira.i18n.title\\\",\\\"value\\\":\\\"some.title\\\",\\\"id\\\":\\\"jira.i18n.title\\\"}\""
								},
								{
									"name": "Returned if no changes were made by the request. For example, attempting to update a property with its current value.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"createissue\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Not Modified",
									"code": 304,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"createissue\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the workflow transition is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"createissue\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"createissue\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Workflow Transition Property",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=live",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflow",
										"transitions",
										":transitionId",
										"properties"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) The key of the property being added, also known as the name of the property. Set this to the same value as the `key` defined in the request body."
										},
										{
											"key": "workflowName",
											"value": "<string>",
											"description": "(Required) The name of the workflow that the transition belongs to."
										},
										{
											"key": "workflowMode",
											"value": "live",
											"description": "The workflow status. Set to *live* for inactive workflows or *draft* for draft workflows. Active workflows cannot be edited."
										}
									],
									"variable": [
										{
											"key": "transitionId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the transition. To get the ID, view the workflow in text mode in the Jira admin settings. The ID is shown next to the transition."
										}
									]
								},
								"description": "Adds a property to a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"createissue\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=live",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "live"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if a workflow property with the same key is present on the transition.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"createissue\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=live",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "live"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the workflow transition is not found.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"createissue\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=live",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "live"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"createissue\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=live",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "live"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "200 response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"createissue\""
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=live",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "live"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"key\\\":\\\"jira.i18n.title\\\",\\\"value\\\":\\\"some.title\\\",\\\"id\\\":\\\"jira.i18n.title\\\"}\""
								}
							]
						},
						{
							"name": "Delete Workflow Transition Property",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflow",
										"transitions",
										":transitionId",
										"properties"
									],
									"query": [
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) The name of the transition property to delete, also known as the name of the property."
										},
										{
											"key": "workflowName",
											"value": "<string>",
											"description": "(Required) The name of the workflow that the transition belongs to."
										},
										{
											"key": "workflowMode",
											"value": "<string>",
											"description": "The workflow status. Set to `live` for inactive workflows or `draft` for draft workflows. Active workflows cannot be edited."
										}
									],
									"variable": [
										{
											"key": "transitionId",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the transition. To get the ID, view the workflow in text mode in the Jira admin settings. The ID is shown next to the transition."
										}
									]
								},
								"description": "Deletes a property from a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if no changes were made by the request. For example, trying to delete a property that cannot be found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Not Modified",
									"code": 304,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the workflow transition is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "200 response",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflow/transitions/:transitionId/properties?key=<string>&workflowName=<string>&workflowMode=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflow",
												"transitions",
												":transitionId",
												"properties"
											],
											"query": [
												{
													"key": "key",
													"value": "<string>"
												},
												{
													"key": "workflowName",
													"value": "<string>"
												},
												{
													"key": "workflowMode",
													"value": "<string>"
												}
											],
											"variable": [
												{
													"key": "transitionId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get All Workflows",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/workflow?workflowName=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"workflow"
							],
							"query": [
								{
									"key": "workflowName",
									"value": "<string>",
									"description": "The name of the workflow to be returned. Only one workflow can be specified."
								}
							]
						},
						"description": "Returns all workflows in Jira or a workflow. Deprecated, use [Get workflows paginated](#api-rest-api-3-workflow-search-get).\n\nIf the `workflowName` parameter is specified, the workflow is returned as an object (not in an array). Otherwise, an array of workflow objects is returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflow?workflowName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflow"
									],
									"query": [
										{
											"key": "workflowName",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"name\\\":\\\"classic workflow\\\",\\\"description\\\":\\\"A classic Jira workflow\\\",\\\"lastModifiedDate\\\":\\\"01-01-2011\\\",\\\"lastModifiedUser\\\":\\\"admin\\\",\\\"lastModifiedUserAccountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"steps\\\":5,\\\"default\\\":true}]\""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflow?workflowName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflow"
									],
									"query": [
										{
											"key": "workflowName",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Workflows Paginated",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/workflow/search?startAt=0&maxResults=50&workflowName=<string>&expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"workflow",
								"search"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								},
								{
									"key": "workflowName",
									"value": "<string>",
									"description": "The name of a workflow to return."
								},
								{
									"key": "expand",
									"value": "<string>",
									"description": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `transitions` For each workflow, returns information about the transitions inside the workflow.\n *  `transitions.rules` For each workflow transition, returns information about its rules. Transitions are included automatically if this expand is requested.\n *  `statuses` For each workflow, returns information about the statuses inside the workflow.\n *  `statuses.properties` For each workflow status, returns information about its properties. Statuses are included automatically if this expand is requested."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of published classic workflows. When workflow names are specified, details of those workflows are returned. Otherwise, all published classic workflows are returned.\n\nThis operation does not return next-gen workflows.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflow/search?startAt=0&maxResults=50&workflowName=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflow",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "workflowName",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":1,\\\"startAt\\\":0,\\\"total\\\":5,\\\"isLast\\\":false,\\\"values\\\":[{\\\"id\\\":{\\\"name\\\":\\\"SCRUM Workflow\\\"},\\\"description\\\":\\\"A workflow used for Software projects in the SCRUM methodology\\\",\\\"transitions\\\":[{\\\"id\\\":\\\"5\\\",\\\"name\\\":\\\"In Progress\\\",\\\"description\\\":\\\"Start working on the issue.\\\",\\\"from\\\":[\\\"10\\\",\\\"13\\\"],\\\"to\\\":\\\"14\\\",\\\"type\\\":\\\"directed\\\",\\\"screen\\\":{\\\"id\\\":\\\"10000\\\"},\\\"rules\\\":{\\\"conditions\\\":[{\\\"type\\\":\\\"PermissionCondition\\\",\\\"configuration\\\":{\\\"permissionKey\\\":\\\"WORK_ON_ISSUES\\\"}}],\\\"validators\\\":[{\\\"type\\\":\\\"FieldRequiredValidator\\\",\\\"configuration\\\":{\\\"ignoreContext\\\":true,\\\"errorMessage\\\":\\\"A custom error message\\\",\\\"fields\\\":[\\\"description\\\",\\\"assignee\\\"]}}],\\\"postFunctions\\\":[{\\\"type\\\":\\\"UpdateIssueStatusFunction\\\"},{\\\"type\\\":\\\"GenerateChangeHistoryFunction\\\"},{\\\"type\\\":\\\"FireIssueEventFunction\\\"}]}}],\\\"statuses\\\":[{\\\"id\\\":\\\"3\\\",\\\"name\\\":\\\"In Progress\\\",\\\"properties\\\":{\\\"issueEditable\\\":false}}]}]}\""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflow/search?startAt=0&maxResults=50&workflowName=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflow",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "workflowName",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access workflows.\\\"],\\\"errors\\\":{}}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflow/search?startAt=0&maxResults=50&workflowName=<string>&expand=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflow",
										"search"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										},
										{
											"key": "workflowName",
											"value": "<string>"
										},
										{
											"key": "expand",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Workflow Scheme",
			"item": [
				{
					"name": "Project",
					"item": [
						{
							"name": "Get Workflow Scheme Project Associations",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflowscheme/project?projectId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflowscheme",
										"project"
									],
									"query": [
										{
											"key": "projectId",
											"value": "<long>",
											"description": "(Required) The ID of a project to return the workflow schemes for. To include multiple projects, provide an ampersand-Jim: oneseparated list. For example, `projectId=10000&projectId=10001`."
										}
									]
								},
								"description": "Returns a list of the workflow schemes associated with a list of projects. Each returned workflow scheme includes a list of the requested projects associated with it. Any next-gen or non-existent projects in the request are ignored and no errors are returned.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/project?projectId=10010",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												"project"
											],
											"query": [
												{
													"key": "projectId",
													"value": "10010"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/project?projectId=10010",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												"project"
											],
											"query": [
												{
													"key": "projectId",
													"value": "10010"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access workflow scheme associations.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/project?projectId=10010",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												"project"
											],
											"query": [
												{
													"key": "projectId",
													"value": "10010"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"values\\\":[{\\\"projectIds\\\":[\\\"10010\\\",\\\"10020\\\"],\\\"workflowScheme\\\":{\\\"id\\\":101010,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"jira\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"scrum workflow\\\",\\\"10001\\\":\\\"builds workflow\\\"},\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\\\"}}]}\""
								},
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/project?projectId=10010",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												"project"
											],
											"query": [
												{
													"key": "projectId",
													"value": "10010"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[],\\\"errors\\\":{\\\"projectId\\\":\\\"The ID of a project has to be provided.\\\"}}\""
								}
							]
						},
						{
							"name": "Assign Workflow Scheme To Project",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"projectId\": \"<string>\",\n    \"workflowSchemeId\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflowscheme/project",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflowscheme",
										"project"
									]
								},
								"description": "Assigns a workflow scheme to a project. This operation is performed only when there are no issues in the project.\n\nWorkflow schemes can only be assigned to classic projects.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"workflowSchemeId\": \"10032\",\n    \"projectId\": \"10001\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												"project"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "Returned if the workflow scheme or the project are not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"workflowSchemeId\": \"10032\",\n    \"projectId\": \"10001\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												"project"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"The workflow scheme was not found.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the request is not valid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"workflowSchemeId\": \"10032\",\n    \"projectId\": \"10001\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												"project"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"Only classic projects can have workflow schemes assigned.\\\"],\\\"errors\\\":{}}\""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"workflowSchemeId\": \"10032\",\n    \"projectId\": \"10001\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												"project"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the required permissions.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"workflowSchemeId\": \"10032\",\n    \"projectId\": \"10001\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												"project"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"errorMessages\\\":[\\\"Only Jira administrators can access workflow scheme associations.\\\"],\\\"errors\\\":{}}\""
								}
							]
						}
					]
				},
				{
					"name": "Id}",
					"item": [
						{
							"name": "Default",
							"item": [
								{
									"name": "Get Default Workflow",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default?returnDraftIfExists=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"default"
											],
											"query": [
												{
													"key": "returnDraftIfExists",
													"value": "false",
													"description": "Set to `true` to return the default workflow for the workflow scheme's draft rather than scheme itself. If the workflow scheme does not have a draft, then the default workflow for the workflow scheme is returned."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the workflow scheme."
												}
											]
										},
										"description": "Returns the default workflow for a workflow scheme. The default workflow is the workflow that is assigned any issue types that have not been mapped to any other workflow. The default workflow has *All Unassigned Issue Types* listed in its issue types for the workflow scheme in Jira.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default?returnDraftIfExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"query": [
														{
															"key": "returnDraftIfExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default?returnDraftIfExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"query": [
														{
															"key": "returnDraftIfExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the workflow scheme is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default?returnDraftIfExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"query": [
														{
															"key": "returnDraftIfExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default?returnDraftIfExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"query": [
														{
															"key": "returnDraftIfExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"workflow\\\":\\\"jira\\\"}\""
										}
									]
								},
								{
									"name": "Update Default Workflow",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"workflow\": \"<string>\",\n    \"updateDraftIfNeeded\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"default"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the workflow scheme."
												}
											]
										},
										"description": "Sets the default workflow for a workflow scheme.\n\nNote that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` in the request object and a draft workflow scheme is created or updated with the new default workflow. The draft workflow scheme can be published in Jira.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the workflow scheme cannot be edited and `updateDraftIfNeeded` is not `true`.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the workflow scheme is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":101010,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"jira\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"scrum workflow\\\",\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":false,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\\\"}\""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Default Workflow",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default?updateDraftIfNeeded=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"default"
											],
											"query": [
												{
													"key": "updateDraftIfNeeded",
													"value": "<boolean>",
													"description": "Set to true to create or update the draft of a workflow scheme and delete the mapping from the draft, when the workflow scheme cannot be edited. Defaults to `false`."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the workflow scheme."
												}
											]
										},
										"description": "Resets the default workflow for a workflow scheme. That is, the default workflow is set to Jira's system workflow (the *jira* workflow).\n\nNote that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` and a draft workflow scheme is created or updated with the default workflow reset. The draft workflow scheme can be published in Jira.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default?updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"query": [
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the workflow scheme is not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default?updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"query": [
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default?updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"query": [
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":101010,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"jira\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"scrum workflow\\\",\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":false,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\\\"}\""
										},
										{
											"name": "Returned if the workflow scheme cannot be edited and `updateDraftIfNeeded` is not `true`.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default?updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"query": [
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/default?updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"default"
													],
													"query": [
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Draft",
							"item": [
								{
									"name": "Default",
									"item": [
										{
											"name": "Get Draft Default Workflow",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft",
														"default"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the workflow scheme that the draft belongs to."
														}
													]
												},
												"description": "Returns the default workflow for a workflow scheme's draft. The default workflow is the workflow that is assigned any issue types that have not been mapped to any other workflow. The default workflow has *All Unassigned Issue Types* listed in its issue types for the workflow scheme in Jira.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"default"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"default"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"workflow\\\":\\\"jira\\\"}\""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"default"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the user does not have the necessary permission..",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"default"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update Draft Default Workflow",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"workflow\": \"<string>\",\n    \"updateDraftIfNeeded\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft",
														"default"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the workflow scheme that the draft belongs to."
														}
													]
												},
												"description": "Sets the default workflow for a workflow scheme's draft.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"default"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the user does not have the necessary permission.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"default"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"default"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"default"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"id\\\":17218781,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"scrum workflow\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"jira\\\",\\\"10001\\\":\\\"jira\\\"},\\\"originalDefaultWorkflow\\\":\\\"jira\\\",\\\"originalIssueTypeMappings\\\":{\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":true,\\\"lastModifiedUser\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"groups\\\":{\\\"size\\\":3,\\\"items\\\":[]},\\\"applicationRoles\\\":{\\\"size\\\":1,\\\"items\\\":[]}},\\\"lastModified\\\":\\\"Today 6:38 PM\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\\\"}\""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"default"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Draft Default Workflow",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft",
														"default"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the workflow scheme that the draft belongs to."
														}
													]
												},
												"description": "Resets the default workflow for a workflow scheme's draft. That is, the default workflow is set to Jira's system workflow (the *jira* workflow).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"default"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the user does not have the necessary permission.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"default"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"default"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/default",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"default"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"id\\\":17218781,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"scrum workflow\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"jira\\\",\\\"10001\\\":\\\"jira\\\"},\\\"originalDefaultWorkflow\\\":\\\"jira\\\",\\\"originalIssueTypeMappings\\\":{\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":true,\\\"lastModifiedUser\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"groups\\\":{\\\"size\\\":3,\\\"items\\\":[]},\\\"applicationRoles\\\":{\\\"size\\\":1,\\\"items\\\":[]}},\\\"lastModified\\\":\\\"Today 6:38 PM\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\\\"}\""
												}
											]
										}
									]
								},
								{
									"name": "Issuetype/issue Type}",
									"item": [
										{
											"name": "Get Workflow For Issue Type In Draft Workflow Scheme",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft",
														"issuetype",
														":issueType"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the workflow scheme that the draft belongs to."
														},
														{
															"key": "issueType",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the issue type."
														}
													]
												},
												"description": "Returns the issue type-workflow mapping for an issue type in a workflow scheme's draft.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the user does not have the necessary permission.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"issuetype",
																":issueType"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issueType"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the workflow scheme or issue type is not found.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"issuetype",
																":issueType"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issueType"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"issuetype",
																":issueType"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issueType"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"issueType\\\":\\\"10000\\\",\\\"workflow\\\":\\\"jira\\\"}\""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"issuetype",
																":issueType"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issueType"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set Workflow For Issue Type In Draft Workflow Scheme",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueType\": \"<string>\",\n    \"workflow\": \"<string>\",\n    \"updateDraftIfNeeded\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft",
														"issuetype",
														":issueType"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the workflow scheme that the draft belongs to."
														},
														{
															"key": "issueType",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the issue type."
														}
													]
												},
												"description": "Sets the workflow for an issue type in a workflow scheme's draft.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"issueType\": \"10000\",\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"issuetype",
																":issueType"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issueType"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"id\\\":17218781,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"scrum workflow\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"jira\\\",\\\"10001\\\":\\\"jira\\\"},\\\"originalDefaultWorkflow\\\":\\\"jira\\\",\\\"originalIssueTypeMappings\\\":{\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":true,\\\"lastModifiedUser\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"groups\\\":{\\\"size\\\":3,\\\"items\\\":[]},\\\"applicationRoles\\\":{\\\"size\\\":1,\\\"items\\\":[]}},\\\"lastModified\\\":\\\"Today 6:38 PM\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\\\"}\""
												},
												{
													"name": "Returned if the workflow scheme or issue type is not found.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"issueType\": \"10000\",\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"issuetype",
																":issueType"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issueType"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"issueType\": \"10000\",\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"issuetype",
																":issueType"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issueType"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the user does not have the necessary permission.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"issueType\": \"10000\",\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"issuetype",
																":issueType"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issueType"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"issueType\": \"10000\",\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"issuetype",
																":issueType"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issueType"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Workflow For Issue Type In Draft Workflow Scheme",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft",
														"issuetype",
														":issueType"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the workflow scheme that the draft belongs to."
														},
														{
															"key": "issueType",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the issue type."
														}
													]
												},
												"description": "Deletes the issue type-workflow mapping for an issue type in a workflow scheme's draft.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"issuetype",
																":issueType"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issueType"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"id\\\":17218781,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"scrum workflow\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"jira\\\",\\\"10001\\\":\\\"jira\\\"},\\\"originalDefaultWorkflow\\\":\\\"jira\\\",\\\"originalIssueTypeMappings\\\":{\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":true,\\\"lastModifiedUser\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"groups\\\":{\\\"size\\\":3,\\\"items\\\":[]},\\\"applicationRoles\\\":{\\\"size\\\":1,\\\"items\\\":[]}},\\\"lastModified\\\":\\\"Today 6:38 PM\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\\\"}\""
												},
												{
													"name": "Returned if the user does not have the necessary permission.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"issuetype",
																":issueType"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issueType"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the workflow scheme or issue type is not found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"issuetype",
																":issueType"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issueType"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"issuetype",
																":issueType"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issueType"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Workflow",
									"item": [
										{
											"name": "Get Issue Types For Workflows In Draft Workflow Scheme",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>",
															"description": "The name of a workflow in the scheme. Limits the results to the workflow-issue type mapping for the specified workflow."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the workflow scheme that the draft belongs to."
														}
													]
												},
												"description": "Returns the workflow-issue type mappings for a workflow scheme's draft.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the user does not have the necessary permission.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"workflow"
															],
															"query": [
																{
																	"key": "workflowName",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"workflow"
															],
															"query": [
																{
																	"key": "workflowName",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"workflow\\\":\\\"jira\\\",\\\"issueTypes\\\":[\\\"10000\\\",\\\"10001\\\"],\\\"defaultMapping\\\":false}\""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"workflow"
															],
															"query": [
																{
																	"key": "workflowName",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if either the workflow scheme or workflow (if specified) is not found. session.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"workflow"
															],
															"query": [
																{
																	"key": "workflowName",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set Issue Types For Workflow In Workflow Scheme",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"workflow\": \"<string>\",\n    \"issueTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"defaultMapping\": \"<boolean>\",\n    \"updateDraftIfNeeded\": \"<boolean>\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>",
															"description": "(Required) The name of the workflow."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the workflow scheme that the draft belongs to."
														}
													]
												},
												"description": "Sets the issue types for a workflow in a workflow scheme's draft. The workflow can also be set as the default workflow for the draft workflow scheme. Unmapped issues types are mapped to the default workflow.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": true,\n    \"issueTypes\": [\n        \"10000\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"workflow"
															],
															"query": [
																{
																	"key": "workflowName",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "\"{\\\"id\\\":101010,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"jira\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"scrum workflow\\\",\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":false,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\\\"}\""
												},
												{
													"name": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft.\n *  The workflow is not found.\n *  The workflow is not specified.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": true,\n    \"issueTypes\": [\n        \"10000\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"workflow"
															],
															"query": [
																{
																	"key": "workflowName",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": true,\n    \"issueTypes\": [\n        \"10000\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"workflow"
															],
															"query": [
																{
																	"key": "workflowName",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the user does not have the necessary permission.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": true,\n    \"issueTypes\": [\n        \"10000\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"workflow"
															],
															"query": [
																{
																	"key": "workflowName",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": true,\n    \"issueTypes\": [\n        \"10000\"\n    ]\n}"
														},
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"workflow"
															],
															"query": [
																{
																	"key": "workflowName",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Delete Issue Types For Workflow In Draft Workflow Scheme",
											"request": {
												"auth": {
													"type": "inherit"
												},
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>",
															"description": "(Required) The name of the workflow."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"type": "string",
															"description": "(Required) The ID of the workflow scheme that the draft belongs to."
														}
													]
												},
												"description": "Deletes the workflow-issue type mapping for a workflow in a workflow scheme's draft.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
											},
											"response": [
												{
													"name": "Returned if the user does not have the necessary permission.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"workflow"
															],
															"query": [
																{
																	"key": "workflowName",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the request is successful.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"workflow"
															],
															"query": [
																{
																	"key": "workflowName",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if the authentication credentials are incorrect or missing.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"workflow"
															],
															"query": [
																{
																	"key": "workflowName",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft.\n *  The workflow is not found.\n *  The workflow is not specified.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "<token>",
																"description": {
																	"content": "Added as a part of security scheme: oauth2",
																	"type": "text/plain"
																}
															}
														],
														"url": {
															"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft/workflow?workflowName=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"rest",
																"api",
																"3",
																"workflowscheme",
																":id",
																"draft",
																"workflow"
															],
															"query": [
																{
																	"key": "workflowName",
																	"value": "<string>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Draft Workflow Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"draft"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the active workflow scheme that the draft was created from."
												}
											]
										},
										"description": "Returns the draft workflow scheme for an active workflow scheme. Draft workflow schemes allow changes to be made to the active workflow schemes: When an active workflow scheme is updated, a draft copy is created. The draft is modified, then the changes in the draft are copied back to the active workflow scheme. See [Configuring workflow schemes](https://confluence.atlassian.com/x/tohKLg) for more information.  \nNote that:\n\n *  Only active workflow schemes can have draft workflow schemes.\n *  An active workflow scheme can only have one draft workflow scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":17218781,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"scrum workflow\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"jira\\\",\\\"10001\\\":\\\"jira\\\"},\\\"originalDefaultWorkflow\\\":\\\"jira\\\",\\\"originalIssueTypeMappings\\\":{\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":true,\\\"lastModifiedUser\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"groups\\\":{\\\"size\\\":3,\\\"items\\\":[]},\\\"applicationRoles\\\":{\\\"size\\\":1,\\\"items\\\":[]}},\\\"lastModified\\\":\\\"Today 6:38 PM\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\\\"}\""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if:\n\n *  the original active workflow scheme is not found.\n *  the original active workflow scheme does not have a draft.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update Draft Workflow Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"defaultWorkflow\": \"<string>\",\n    \"issueTypeMappings\": \"<object>\",\n    \"updateDraftIfNeeded\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"draft"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the active workflow scheme that the draft was created from."
												}
											]
										},
										"description": "Updates a draft workflow scheme. If a draft workflow scheme does not exist for the active workflow scheme, then a draft is created. Note that an active workflow scheme can only have one draft workflow scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"updateDraftIfNeeded\": false,\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":17218781,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"scrum workflow\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"jira\\\",\\\"10001\\\":\\\"jira\\\"},\\\"originalDefaultWorkflow\\\":\\\"jira\\\",\\\"originalIssueTypeMappings\\\":{\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":true,\\\"lastModifiedUser\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"groups\\\":{\\\"size\\\":3,\\\"items\\\":[]},\\\"applicationRoles\\\":{\\\"size\\\":1,\\\"items\\\":[]}},\\\"lastModified\\\":\\\"Today 6:38 PM\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\\\"}\""
										},
										{
											"name": "Returned if the request is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"updateDraftIfNeeded\": false,\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if:\n\n *  the original active workflow scheme is not found.\n *  the original active workflow scheme does not have a draft.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"updateDraftIfNeeded\": false,\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"updateDraftIfNeeded\": false,\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"updateDraftIfNeeded\": false,\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\"\n    }\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Draft Workflow Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"draft"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the active workflow scheme that the draft was created from."
												}
											]
										},
										"description": "Deletes a draft workflow scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if:\n\n *  the original active workflow scheme is not found.\n *  the original active workflow scheme does not have a draft.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the necessary permission..",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/draft",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"draft"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Issuetype/issue Type}",
							"item": [
								{
									"name": "Get Workflow For Issue Type In Workflow Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType?returnDraftIfExists=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"issuetype",
												":issueType"
											],
											"query": [
												{
													"key": "returnDraftIfExists",
													"value": "false",
													"description": "Returns the mapping from the workflow scheme's draft rather than the workflow scheme, if set to true. If no draft exists, the mapping from the workflow scheme is returned."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the workflow scheme."
												},
												{
													"key": "issueType",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the issue type."
												}
											]
										},
										"description": "Returns the issue type-workflow mapping for an issue type in a workflow scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType?returnDraftIfExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"query": [
														{
															"key": "returnDraftIfExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"issueType\\\":\\\"10000\\\",\\\"workflow\\\":\\\"jira\\\"}\""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType?returnDraftIfExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"query": [
														{
															"key": "returnDraftIfExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the workflow scheme or issue type is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType?returnDraftIfExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"query": [
														{
															"key": "returnDraftIfExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType?returnDraftIfExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"query": [
														{
															"key": "returnDraftIfExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Workflow For Issue Type In Workflow Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"issueType\": \"<string>\",\n    \"workflow\": \"<string>\",\n    \"updateDraftIfNeeded\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"issuetype",
												":issueType"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the workflow scheme."
												},
												{
													"key": "issueType",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the issue type."
												}
											]
										},
										"description": "Sets the workflow for an issue type in a workflow scheme.\n\nNote that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` in the request body and a draft workflow scheme is created or updated with the new issue type-workflow mapping. The draft workflow scheme can be published in Jira.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueType\": \"10000\",\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":101010,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"jira\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"scrum workflow\\\",\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":false,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\\\"}\""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueType\": \"10000\",\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueType\": \"10000\",\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the workflow cannot be edited and `updateDraftIfNeeded` is false.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueType\": \"10000\",\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the workflow scheme or issue type is not found.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"issueType\": \"10000\",\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": false\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete Workflow For Issue Type In Workflow Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType?updateDraftIfNeeded=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"issuetype",
												":issueType"
											],
											"query": [
												{
													"key": "updateDraftIfNeeded",
													"value": "<boolean>",
													"description": "Set to true to create or update the draft of a workflow scheme and update the mapping in the draft, when the workflow scheme cannot be edited. Defaults to `false`."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the workflow scheme."
												},
												{
													"key": "issueType",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of the issue type."
												}
											]
										},
										"description": "Deletes the issue type-workflow mapping for an issue type in a workflow scheme.\n\nNote that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` and a draft workflow scheme is created or updated with the issue type-workflow mapping deleted. The draft workflow scheme can be published in Jira.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the workflow scheme or issue type is not found.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType?updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"query": [
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the workflow cannot be edited and `updateDraftIfNeeded` is false.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType?updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"query": [
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType?updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"query": [
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":101010,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"jira\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"scrum workflow\\\",\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":false,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\\\"}\""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType?updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"query": [
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/issuetype/:issueType?updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"issuetype",
														":issueType"
													],
													"query": [
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "issueType"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Workflow",
							"item": [
								{
									"name": "Get Issue Types For Workflows In Workflow Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>&returnDraftIfExists=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"workflow"
											],
											"query": [
												{
													"key": "workflowName",
													"value": "<string>",
													"description": "The name of a workflow in the scheme. Limits the results to the workflow-issue type mapping for the specified workflow."
												},
												{
													"key": "returnDraftIfExists",
													"value": "false",
													"description": "Returns the mapping from the workflow scheme's draft rather than the workflow scheme, if set to true. If no draft exists, the mapping from the workflow scheme is returned."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the workflow scheme."
												}
											]
										},
										"description": "Returns the workflow-issue type mappings for a workflow scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>&returnDraftIfExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														},
														{
															"key": "returnDraftIfExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if either the workflow scheme or workflow is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>&returnDraftIfExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														},
														{
															"key": "returnDraftIfExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>&returnDraftIfExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														},
														{
															"key": "returnDraftIfExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"workflow\\\":\\\"jira\\\",\\\"issueTypes\\\":[\\\"10000\\\",\\\"10001\\\"],\\\"defaultMapping\\\":false}\""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>&returnDraftIfExists=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														},
														{
															"key": "returnDraftIfExists",
															"value": "false"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Set Issue Types For Workflow In Workflow Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"workflow\": \"<string>\",\n    \"issueTypes\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"defaultMapping\": \"<boolean>\",\n    \"updateDraftIfNeeded\": \"<boolean>\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"workflow"
											],
											"query": [
												{
													"key": "workflowName",
													"value": "<string>",
													"description": "(Required) The name of the workflow."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the workflow scheme."
												}
											]
										},
										"description": "Sets the issue types for a workflow in a workflow scheme. The workflow can also be set as the default workflow for the workflow scheme. Unmapped issues types are mapped to the default workflow.\n\nNote that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` in the request body and a draft workflow scheme is created or updated with the new workflow-issue types mappings. The draft workflow scheme can be published in Jira.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow is not found.\n *  The workflow is not specified.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": true,\n    \"issueTypes\": [\n        \"10000\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": true,\n    \"issueTypes\": [\n        \"10000\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": true,\n    \"issueTypes\": [\n        \"10000\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": true,\n    \"issueTypes\": [\n        \"10000\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"workflow\": \"jira\",\n    \"updateDraftIfNeeded\": true,\n    \"issueTypes\": [\n        \"10000\"\n    ]\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "\"{\\\"id\\\":101010,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"jira\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"scrum workflow\\\",\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":false,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\\\"}\""
										}
									]
								},
								{
									"name": "Delete Issue Types For Workflow In Workflow Scheme",
									"request": {
										"auth": {
											"type": "inherit"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>&updateDraftIfNeeded=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"workflow"
											],
											"query": [
												{
													"key": "workflowName",
													"value": "<string>",
													"description": "(Required) The name of the workflow."
												},
												{
													"key": "updateDraftIfNeeded",
													"value": "<boolean>",
													"description": "Set to true to create or update the draft of a workflow scheme and delete the mapping from the draft, when the workflow scheme cannot be edited. Defaults to `false`."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"type": "string",
													"description": "(Required) The ID of the workflow scheme."
												}
											]
										},
										"description": "Deletes the workflow-issue type mapping for a workflow in a workflow scheme.\n\nNote that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` and a draft workflow scheme is created or updated with the workflow-issue type mapping deleted. The draft workflow scheme can be published in Jira.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
									},
									"response": [
										{
											"name": "Returned if the request is successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>&updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														},
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the user does not have the necessary permission.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>&updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														},
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the authentication credentials are incorrect or missing.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>&updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														},
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow is not found.\n *  The workflow is not specified.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>&updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														},
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Returned if the workflow cannot be edited and `updateDraftIfNeeded` is not true.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": {
															"content": "Added as a part of security scheme: oauth2",
															"type": "text/plain"
														}
													}
												],
												"url": {
													"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/workflow?workflowName=<string>&updateDraftIfNeeded=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"rest",
														"api",
														"3",
														"workflowscheme",
														":id",
														"workflow"
													],
													"query": [
														{
															"key": "workflowName",
															"value": "<string>"
														},
														{
															"key": "updateDraftIfNeeded",
															"value": "<boolean>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Workflow Scheme",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id?returnDraftIfExists=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflowscheme",
										":id"
									],
									"query": [
										{
											"key": "returnDraftIfExists",
											"value": "false",
											"description": "Returns the workflow scheme's draft rather than scheme itself, if set to true. If the workflow scheme does not have a draft, then the workflow scheme is returned."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in Jira. The ID is shown in the URL as `schemeId`. For example, *schemeId=10301*."
										}
									]
								},
								"description": "Returns a workflow scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id?returnDraftIfExists=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"query": [
												{
													"key": "returnDraftIfExists",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id?returnDraftIfExists=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"query": [
												{
													"key": "returnDraftIfExists",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"id\\\":101010,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"jira\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"scrum workflow\\\",\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":false,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\\\"}\""
								},
								{
									"name": "Returned if the workflow scheme is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id?returnDraftIfExists=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"query": [
												{
													"key": "returnDraftIfExists",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id?returnDraftIfExists=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"query": [
												{
													"key": "returnDraftIfExists",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update Workflow Scheme",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"defaultWorkflow\": \"<string>\",\n    \"issueTypeMappings\": \"<object>\",\n    \"updateDraftIfNeeded\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflowscheme",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in Jira. The ID is shown in the URL as `schemeId`. For example, *schemeId=10301*."
										}
									]
								},
								"description": "Updates a workflow scheme, including the name, default workflow, issue type to project mappings, and more. If the workflow scheme is active (that is, being used by at least one project), then a draft workflow scheme is created or updated instead, provided that `updateDraftIfNeeded` is set to `true`.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the workflow scheme is not found.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"updateDraftIfNeeded\": false,\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"updateDraftIfNeeded\": false,\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"updateDraftIfNeeded\": false,\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"updateDraftIfNeeded\": false,\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"updateDraftIfNeeded\": false,\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\"\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"id\\\":101010,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"jira\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"scrum workflow\\\",\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":false,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\\\"}\""
								}
							]
						},
						{
							"name": "Delete Workflow Scheme",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflowscheme",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in Jira. The ID is shown in the URL as `schemeId`. For example, *schemeId=10301*."
										}
									]
								},
								"description": "Deletes a workflow scheme. Note that a workflow scheme cannot be deleted if it is active (that is, being used by at least one project).\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the workflow scheme is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the scheme is active.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create Draft Workflow Scheme",
							"request": {
								"auth": {
									"type": "inherit"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/createdraft",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflowscheme",
										":id",
										"createdraft"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"type": "string",
											"description": "(Required) The ID of the active workflow scheme that the draft is created from."
										}
									]
								},
								"description": "Create a draft workflow scheme from an active workflow scheme, by copying the active workflow scheme. Note that an active workflow scheme can only have one draft workflow scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
							},
							"response": [
								{
									"name": "Returned if the request is successful.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/createdraft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"createdraft"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "\"{\\\"id\\\":17218781,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"scrum workflow\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"jira\\\",\\\"10001\\\":\\\"jira\\\"},\\\"originalDefaultWorkflow\\\":\\\"jira\\\",\\\"originalIssueTypeMappings\\\":{\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":true,\\\"lastModifiedUser\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"groups\\\":{\\\"size\\\":3,\\\"items\\\":[]},\\\"applicationRoles\\\":{\\\"size\\\":1,\\\"items\\\":[]}},\\\"lastModified\\\":\\\"Today 6:38 PM\\\",\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/17218781/draft\\\"}\""
								},
								{
									"name": "Returned if the user does not have the necessary permission.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/createdraft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"createdraft"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the authentication credentials are incorrect or missing.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/createdraft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"createdraft"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned if the request is invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": {
													"content": "Added as a part of security scheme: oauth2",
													"type": "text/plain"
												}
											}
										],
										"url": {
											"raw": "{{baseUrl}}/rest/api/3/workflowscheme/:id/createdraft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"rest",
												"api",
												"3",
												"workflowscheme",
												":id",
												"createdraft"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get All Workflow Schemes",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/workflowscheme?startAt=0&maxResults=50",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"workflowscheme"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0",
									"description": "The index of the first item to return in a page of results (page offset)."
								},
								{
									"key": "maxResults",
									"value": "50",
									"description": "The maximum number of items to return per page."
								}
							]
						},
						"description": "Returns a [paginated](#pagination) list of all workflow schemes, not including draft workflow schemes.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflowscheme?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflowscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"maxResults\\\":50,\\\"startAt\\\":0,\\\"total\\\":2,\\\"isLast\\\":true,\\\"values\\\":[{\\\"id\\\":101010,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"jira\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"scrum workflow\\\",\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":false,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\\\"},{\\\"id\\\":101011,\\\"name\\\":\\\"Another example workflow scheme\\\",\\\"description\\\":\\\"The description of the another example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"jira\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"scrum workflow\\\",\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":false,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101011\\\"}]}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflowscheme?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflowscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflowscheme?startAt=0&maxResults=50",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflowscheme"
									],
									"query": [
										{
											"key": "startAt",
											"value": "0"
										},
										{
											"key": "maxResults",
											"value": "50"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Workflow Scheme",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"defaultWorkflow\": \"<string>\",\n    \"issueTypeMappings\": \"<object>\",\n    \"updateDraftIfNeeded\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/workflowscheme",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"workflowscheme"
							]
						},
						"description": "Creates a workflow scheme.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
					},
					"response": [
						{
							"name": "Returned if the user does not have the necessary permission.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\",\n        \"10001\": \"builds workflow\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflowscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflowscheme"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\",\n        \"10001\": \"builds workflow\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflowscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflowscheme"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\",\n        \"10001\": \"builds workflow\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflowscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflowscheme"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"id\\\":101010,\\\"name\\\":\\\"Example workflow scheme\\\",\\\"description\\\":\\\"The description of the example workflow scheme.\\\",\\\"defaultWorkflow\\\":\\\"jira\\\",\\\"issueTypeMappings\\\":{\\\"10000\\\":\\\"scrum workflow\\\",\\\"10001\\\":\\\"builds workflow\\\"},\\\"draft\\\":false,\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/workflowscheme/101010\\\"}\""
						},
						{
							"name": "Returned if the request is invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultWorkflow\": \"jira\",\n    \"name\": \"Example workflow scheme\",\n    \"description\": \"The description of the example workflow scheme.\",\n    \"issueTypeMappings\": {\n        \"10000\": \"scrum workflow\",\n        \"10001\": \"builds workflow\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/workflowscheme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"workflowscheme"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Worklog",
			"item": [
				{
					"name": "Get Ids Of Deleted Worklogs",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/worklog/deleted?since=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"worklog",
								"deleted"
							],
							"query": [
								{
									"key": "since",
									"value": "0",
									"description": "The date and time, as a UNIX timestamp in milliseconds, after which deleted worklogs are returned."
								}
							]
						},
						"description": "Returns a list of IDs and delete timestamps for worklogs deleted after a date and time.\n\nThis resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to youngest. If the number of items in the date range exceeds 1000, `until` indicates the timestamp of the youngest item on the page. Also, `nextPage` provides the URL for the next page of worklogs. The `lastPage` parameter is set to true on the last page of worklogs.\n\nThis resource does not return worklogs deleted during the minute preceding the request.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/worklog/deleted?since=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"worklog",
										"deleted"
									],
									"query": [
										{
											"key": "since",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"values\\\":[{\\\"worklogId\\\":103,\\\"updatedTime\\\":1438013671562,\\\"properties\\\":[]},{\\\"worklogId\\\":104,\\\"updatedTime\\\":1438013672165,\\\"properties\\\":[]},{\\\"worklogId\\\":105,\\\"updatedTime\\\":1438013693136,\\\"properties\\\":[]}],\\\"since\\\":1438013671562,\\\"until\\\":1438013693136,\\\"self\\\":\\\"https://your-domain.atlassian.net/api/~ver~/worklog/deleted?since=1438013671562\\\",\\\"nextPage\\\":\\\"https://your-domain.atlassian.net/api/~ver~/worklog/deleted?since=1438013693136\\\",\\\"lastPage\\\":true}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/worklog/deleted?since=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"worklog",
										"deleted"
									],
									"query": [
										{
											"key": "since",
											"value": "0"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Worklogs",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ids\": [\n        \"<long>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/worklog/list?expand=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"worklog",
								"list"
							],
							"query": [
								{
									"key": "expand",
									"value": "",
									"description": "Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts `properties` that returns the properties of each worklog."
								}
							]
						},
						"description": "Returns worklog details for a list of worklog IDs.\n\nThe returned list of worklogs is limited to 1000 items.\n\n**[Permissions](#permissions) required:** Permission to access Jira, however, worklogs are only returned where either of the following is true:\n\n *  the worklog is set as *Viewable by All Users*.\n *  the user is a member of a project role or group with permission to view the worklog."
					},
					"response": [
						{
							"name": "Returned if the request contains more than 1000 worklog IDs or is empty.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        1,\n        2,\n        5,\n        10\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/worklog/list?expand=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"worklog",
										"list"
									],
									"query": [
										{
											"key": "expand",
											"value": ""
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        1,\n        2,\n        5,\n        10\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/worklog/list?expand=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"worklog",
										"list"
									],
									"query": [
										{
											"key": "expand",
											"value": ""
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\n        1,\n        2,\n        5,\n        10\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/worklog/list?expand=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"worklog",
										"list"
									],
									"query": [
										{
											"key": "expand",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"[{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/issue/10010/worklog/10000\\\",\\\"author\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"updateAuthor\\\":{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":false},\\\"comment\\\":{\\\"type\\\":\\\"doc\\\",\\\"version\\\":1,\\\"content\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"content\\\":[{\\\"type\\\":\\\"text\\\",\\\"text\\\":\\\"I did some work here.\\\"}]}]},\\\"updated\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"visibility\\\":{\\\"type\\\":\\\"group\\\",\\\"value\\\":\\\"jira-developers\\\"},\\\"started\\\":\\\"2020-12-17T01:45:40.269+0000\\\",\\\"timeSpent\\\":\\\"3h 20m\\\",\\\"timeSpentSeconds\\\":12000,\\\"id\\\":\\\"100028\\\",\\\"issueId\\\":\\\"10002\\\"}]\""
						}
					]
				},
				{
					"name": "Get Ids Of Updated Worklogs",
					"request": {
						"auth": {
							"type": "inherit"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/worklog/updated?since=0&expand=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"worklog",
								"updated"
							],
							"query": [
								{
									"key": "since",
									"value": "0",
									"description": "The date and time, as a UNIX timestamp in milliseconds, after which updated worklogs are returned."
								},
								{
									"key": "expand",
									"value": "",
									"description": "Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts `properties` that returns the properties of each worklog."
								}
							]
						},
						"description": "Returns a list of IDs and update timestamps for worklogs updated after a date and time.\n\nThis resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to youngest. If the number of items in the date range exceeds 1000, `until` indicates the timestamp of the youngest item on the page. Also, `nextPage` provides the URL for the next page of worklogs. The `lastPage` parameter is set to true on the last page of worklogs.\n\nThis resource does not return worklogs updated during the minute preceding the request.\n\n**[Permissions](#permissions) required:** Permission to access Jira, however, worklogs are only returned where either of the following is true:\n\n *  the worklog is set as *Viewable by All Users*.\n *  the user is a member of a project role or group with permission to view the worklog."
					},
					"response": [
						{
							"name": "Returned if the request is successful.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/worklog/updated?since=0&expand=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"worklog",
										"updated"
									],
									"query": [
										{
											"key": "since",
											"value": "0"
										},
										{
											"key": "expand",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"{\\\"values\\\":[{\\\"worklogId\\\":103,\\\"updatedTime\\\":1438013671562,\\\"properties\\\":[]},{\\\"worklogId\\\":104,\\\"updatedTime\\\":1438013672165,\\\"properties\\\":[]},{\\\"worklogId\\\":105,\\\"updatedTime\\\":1438013693136,\\\"properties\\\":[]}],\\\"since\\\":1438013671562,\\\"until\\\":1438013693136,\\\"self\\\":\\\"https://your-domain.atlassian.net/api/~ver~/worklog/updated?since=1438013671562\\\",\\\"nextPage\\\":\\\"https://your-domain.atlassian.net/api/~ver~/worklog/updated?since=1438013693136\\\",\\\"lastPage\\\":true}\""
						},
						{
							"name": "Returned if the authentication credentials are incorrect or missing.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<token>",
										"description": {
											"content": "Added as a part of security scheme: oauth2",
											"type": "text/plain"
										}
									}
								],
								"url": {
									"raw": "{{baseUrl}}/rest/api/3/worklog/updated?since=0&expand=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest",
										"api",
										"3",
										"worklog",
										"updated"
									],
									"query": [
										{
											"key": "since",
											"value": "0"
										},
										{
											"key": "expand",
											"value": ""
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Get Jira Instance Info",
			"request": {
				"auth": {
					"type": "inherit"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rest/api/3/serverInfo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"serverInfo"
					]
				},
				"description": "Returns information about the Jira instance.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
			},
			"response": [
				{
					"name": "Returned if the authentication credentials are incorrect.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/serverInfo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"serverInfo"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returned if the request is successful.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/serverInfo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"serverInfo"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"{\\\"baseUrl\\\":\\\"https://your-domain.atlassian.net/jira\\\",\\\"version\\\":\\\"1001.0.0-SNAPSHOT\\\",\\\"versionNumbers\\\":[5,0,0],\\\"buildNumber\\\":582,\\\"buildDate\\\":\\\"2020-12-17T01:45:38.991+0000\\\",\\\"serverTime\\\":\\\"2020-12-17T01:45:38.991+0000\\\",\\\"scmInfo\\\":\\\"1f51473f5c7b75c1a69a0090f4832cdc5053702a\\\",\\\"serverTitle\\\":\\\"My Jira instance\\\",\\\"defaultLocale\\\":{\\\"locale\\\":\\\"en_AU\\\"}}\""
				}
			]
		},
		{
			"name": "Get Issue Security Level",
			"request": {
				"auth": {
					"type": "inherit"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rest/api/3/securitylevel/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"securitylevel",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<string>",
							"type": "string",
							"description": "(Required) The ID of the issue security level."
						}
					]
				},
				"description": "Returns details of an issue security level.\n\nUse [Get issue security scheme](#api-rest-api-3-issuesecurityschemes-id-get) to obtain the IDs of issue security levels associated with the issue security scheme.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
			},
			"response": [
				{
					"name": "Returned if the issue security level is not found.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/securitylevel/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"securitylevel",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returned if the authentication credentials are incorrect.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/securitylevel/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"securitylevel",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returned if the request is successful.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/securitylevel/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"securitylevel",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/securitylevel/10021\\\",\\\"id\\\":\\\"10021\\\",\\\"description\\\":\\\"Only the reporter and internal staff can see this issue.\\\",\\\"name\\\":\\\"Reporter Only\\\"}\""
				}
			]
		},
		{
			"name": "Get Current User",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rest/api/3/myself",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"myself"
					],
					"query": [
						{
							"key": "expand",
							"value": "<string>",
							"description": "Use [expand](#expansion) to include additional information about user in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `groups` Returns all groups, including nested groups, the user belongs to.\n *  `applicationRoles` Returns the application roles the user is assigned to.",
							"disabled": true
						}
					]
				},
				"description": "Returns details for the current user.\n\n**[Permissions](#permissions) required:** Permission to access Jira."
			},
			"response": [
				{
					"name": "Returned if the authentication credentials are incorrect or missing.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/myself?expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"myself"
							],
							"query": [
								{
									"key": "expand",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returned if the request is successful.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/myself?expand=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"myself"
							],
							"query": [
								{
									"key": "expand",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/user?accountId=5b10a2844c20165700ede21g\\\",\\\"key\\\":\\\"\\\",\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"name\\\":\\\"\\\",\\\"emailAddress\\\":\\\"mia@example.com\\\",\\\"avatarUrls\\\":{\\\"48x48\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=48&s=48\\\",\\\"24x24\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=24&s=24\\\",\\\"16x16\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\",\\\"32x32\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=32&s=32\\\"},\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"active\\\":true,\\\"timeZone\\\":\\\"Australia/Sydney\\\",\\\"groups\\\":{\\\"size\\\":3,\\\"items\\\":[]},\\\"applicationRoles\\\":{\\\"size\\\":1,\\\"items\\\":[]}}\""
				}
			]
		},
		{
			"name": "Get My Permissions",
			"request": {
				"auth": {
					"type": "inherit"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rest/api/3/mypermissions?projectKey=<string>&projectId=<string>&issueKey=<string>&issueId=<string>&permissions=<string>&projectUuid=<string>&projectConfigurationUuid=<string>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"mypermissions"
					],
					"query": [
						{
							"key": "projectKey",
							"value": "<string>",
							"description": "The key of project. Ignored if `projectId` is provided."
						},
						{
							"key": "projectId",
							"value": "<string>",
							"description": "The ID of project."
						},
						{
							"key": "issueKey",
							"value": "<string>",
							"description": "The key of the issue. Ignored if `issueId` is provided."
						},
						{
							"key": "issueId",
							"value": "<string>",
							"description": "The ID of the issue."
						},
						{
							"key": "permissions",
							"value": "<string>",
							"description": "A list of permission keys. (Required) This parameter accepts a comma-separated list. To get the list of available permissions, use [Get all permissions](#api-rest-api-3-permissions-get)."
						},
						{
							"key": "projectUuid",
							"value": "<string>"
						},
						{
							"key": "projectConfigurationUuid",
							"value": "<string>"
						}
					]
				},
				"description": "Returns a list of permissions indicating which permissions the user has. Details of the user's permissions can be obtained in a global, project, or issue context.\n\nThe user is reported as having a project permission:\n\n *  in the global context, if the user has the project permission in any project.\n *  for a project, where the project permission is determined using issue data, if the user meets the permission's criteria for any issue in the project. Otherwise, if the user has the project permission in the project.\n *  for an issue, where a project permission is determined using issue data, if the user has the permission in the issue. Otherwise, if the user has the project permission in the project containing the issue.\n\nThis means that users may be shown as having an issue permission (such as EDIT\\_ISSUES) in the global context or a project context but may not have the permission for any or all issues. For example, if Reporters have the EDIT\\_ISSUES permission a user would be shown as having this permission in the global context or the context of a project, because any user can be a reporter. However, if they are not the user who reported the issue queried they would not have EDIT\\_ISSUES permission for that issue.\n\nGlobal permissions are unaffected by context.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
			},
			"response": [
				{
					"name": "Returned if `permissions` is empty or the permission key it contains is not found or deprecated.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/mypermissions?projectKey=<string>&projectId=<string>&issueKey=<string>&issueId=<string>&permissions=BROWSE_PROJECTS,EDIT_ISSUES&projectUuid=<string>&projectConfigurationUuid=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"mypermissions"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "<string>"
								},
								{
									"key": "projectId",
									"value": "<string>"
								},
								{
									"key": "issueKey",
									"value": "<string>"
								},
								{
									"key": "issueId",
									"value": "<string>"
								},
								{
									"key": "permissions",
									"value": "BROWSE_PROJECTS,EDIT_ISSUES"
								},
								{
									"key": "projectUuid",
									"value": "<string>"
								},
								{
									"key": "projectConfigurationUuid",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
				},
				{
					"name": "Returned if the request is successful.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/mypermissions?projectKey=<string>&projectId=<string>&issueKey=<string>&issueId=<string>&permissions=BROWSE_PROJECTS,EDIT_ISSUES&projectUuid=<string>&projectConfigurationUuid=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"mypermissions"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "<string>"
								},
								{
									"key": "projectId",
									"value": "<string>"
								},
								{
									"key": "issueKey",
									"value": "<string>"
								},
								{
									"key": "issueId",
									"value": "<string>"
								},
								{
									"key": "permissions",
									"value": "BROWSE_PROJECTS,EDIT_ISSUES"
								},
								{
									"key": "projectUuid",
									"value": "<string>"
								},
								{
									"key": "projectConfigurationUuid",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"{\\\"permissions\\\":{\\\"EDIT_ISSUES\\\":{\\\"id\\\":\\\"12\\\",\\\"key\\\":\\\"EDIT_ISSUES\\\",\\\"name\\\":\\\"Edit Issues\\\",\\\"type\\\":\\\"PROJECT\\\",\\\"description\\\":\\\"Ability to edit issues.\\\",\\\"havePermission\\\":true}}}\""
				},
				{
					"name": "Returned if the authentication credentials are incorrect or missing.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/mypermissions?projectKey=<string>&projectId=<string>&issueKey=<string>&issueId=<string>&permissions=BROWSE_PROJECTS,EDIT_ISSUES&projectUuid=<string>&projectConfigurationUuid=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"mypermissions"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "<string>"
								},
								{
									"key": "projectId",
									"value": "<string>"
								},
								{
									"key": "issueKey",
									"value": "<string>"
								},
								{
									"key": "issueId",
									"value": "<string>"
								},
								{
									"key": "permissions",
									"value": "BROWSE_PROJECTS,EDIT_ISSUES"
								},
								{
									"key": "projectUuid",
									"value": "<string>"
								},
								{
									"key": "projectConfigurationUuid",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
				},
				{
					"name": "Returned if the project or issue is not found or the user does not have permission to view the project or issue.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/mypermissions?projectKey=<string>&projectId=<string>&issueKey=<string>&issueId=<string>&permissions=BROWSE_PROJECTS,EDIT_ISSUES&projectUuid=<string>&projectConfigurationUuid=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"mypermissions"
							],
							"query": [
								{
									"key": "projectKey",
									"value": "<string>"
								},
								{
									"key": "projectId",
									"value": "<string>"
								},
								{
									"key": "issueKey",
									"value": "<string>"
								},
								{
									"key": "issueId",
									"value": "<string>"
								},
								{
									"key": "permissions",
									"value": "BROWSE_PROJECTS,EDIT_ISSUES"
								},
								{
									"key": "projectUuid",
									"value": "<string>"
								},
								{
									"key": "projectConfigurationUuid",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorMessages\": [\n  \"Excepteur cillum aute ut proident\",\n  \"non ut\"\n ],\n \"errors\": {},\n \"status\": 47113707\n}"
				}
			]
		},
		{
			"name": "Get Custom Field Option",
			"request": {
				"auth": {
					"type": "inherit"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rest/api/3/customFieldOption/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"customFieldOption",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<string>",
							"type": "string",
							"description": "(Required) The ID of the custom field option."
						}
					]
				},
				"description": "Returns a custom field option. For example, an option in a select list.\n\nNote that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource**, it cannot be used with issue field select list options created by Connect apps.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** The custom field option is returned as follows:\n\n *  if the user has the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n *  if the user has the *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for at least one project the custom field is used in, and the field is visible in at least one layout the user has permission to view."
			},
			"response": [
				{
					"name": "Returned if the request is successful.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/customFieldOption/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"customFieldOption",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"{\\\"self\\\":\\\"https://your-domain.atlassian.net/rest/api/3/customFieldOption/10000\\\",\\\"value\\\":\\\"To Do\\\"}\""
				},
				{
					"name": "Returned if:\n\n *  the custom field option is not found.\n *  the user does not have permission to view the custom field.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/customFieldOption/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"customFieldOption",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returned if the authentication credentials are incorrect or missing.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/customFieldOption/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"customFieldOption",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get Audit Records",
			"request": {
				"auth": {
					"type": "inherit"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rest/api/3/auditing/record?offset=0&limit=1000&filter=<string>&from=<dateTime>&to=<dateTime>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"auditing",
						"record"
					],
					"query": [
						{
							"key": "offset",
							"value": "0",
							"description": "The number of records to skip before returning the first result."
						},
						{
							"key": "limit",
							"value": "1000",
							"description": "The maximum number of results to return."
						},
						{
							"key": "filter",
							"value": "<string>",
							"description": "The query string."
						},
						{
							"key": "from",
							"value": "<dateTime>",
							"description": "The date and time on or after which returned audit records must have been created. If `to` is provided `from` must be before `to` or no audit records are returned."
						},
						{
							"key": "to",
							"value": "<dateTime>",
							"description": "The date and time on or before which returned audit results must have been created. If `from` is provided `to` must be after `from` or no audit records are returned."
						}
					]
				},
				"description": "Returns a list of audit records. The list can be filtered to include items:\n\n *  containing a string in at least one field. For example, providing *up* will return all audit records where one or more fields contains words such as *update*.\n *  created on or after a date and time.\n *  created or or before a date and time.\n *  created during a time period.\n\n**[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg)."
			},
			"response": [
				{
					"name": "Returned if:\n\n *  the user does not have the required permissions.\n *  all Jira products are on free plans. Audit logs are available when at least one Jira product is on a paid plan.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/auditing/record?offset=0&limit=1000&filter=<string>&from=<dateTime>&to=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"auditing",
								"record"
							],
							"query": [
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "1000"
								},
								{
									"key": "filter",
									"value": "<string>"
								},
								{
									"key": "from",
									"value": "<dateTime>"
								},
								{
									"key": "to",
									"value": "<dateTime>"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returned if the authentication credentials are incorrect or missing.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/auditing/record?offset=0&limit=1000&filter=<string>&from=<dateTime>&to=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"auditing",
								"record"
							],
							"query": [
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "1000"
								},
								{
									"key": "filter",
									"value": "<string>"
								},
								{
									"key": "from",
									"value": "<dateTime>"
								},
								{
									"key": "to",
									"value": "<dateTime>"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returned if the request is successful.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/auditing/record?offset=0&limit=1000&filter=<string>&from=<dateTime>&to=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"auditing",
								"record"
							],
							"query": [
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "1000"
								},
								{
									"key": "filter",
									"value": "<string>"
								},
								{
									"key": "from",
									"value": "<dateTime>"
								},
								{
									"key": "to",
									"value": "<dateTime>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"{\\\"offset\\\":0,\\\"limit\\\":1000,\\\"total\\\":1,\\\"records\\\":[{\\\"id\\\":1,\\\"summary\\\":\\\"User created\\\",\\\"remoteAddress\\\":\\\"192.168.1.1\\\",\\\"authorKey\\\":\\\"administrator\\\",\\\"authorAccountId\\\":\\\"5ab8f18d741e9c2c7e9d4538\\\",\\\"created\\\":\\\"2014-03-19T18:45:42.967+0000\\\",\\\"category\\\":\\\"user management\\\",\\\"eventSource\\\":\\\"Jira Connect Plugin\\\",\\\"description\\\":\\\"Optional description\\\",\\\"objectItem\\\":{\\\"id\\\":\\\"user\\\",\\\"name\\\":\\\"user\\\",\\\"typeName\\\":\\\"USER\\\",\\\"parentId\\\":\\\"1\\\",\\\"parentName\\\":\\\"Jira Internal Directory\\\"},\\\"changedValues\\\":[{\\\"fieldName\\\":\\\"email\\\",\\\"changedFrom\\\":\\\"user@atlassian.com\\\",\\\"changedTo\\\":\\\"newuser@atlassian.com\\\"}],\\\"associatedItems\\\":[{\\\"id\\\":\\\"jira-software-users\\\",\\\"name\\\":\\\"jira-software-users\\\",\\\"typeName\\\":\\\"GROUP\\\",\\\"parentId\\\":\\\"1\\\",\\\"parentName\\\":\\\"Jira Internal Directory\\\"}]}]}\""
				}
			]
		},
		{
			"name": "Get System Avatars By Type",
			"request": {
				"auth": {
					"type": "inherit"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rest/api/3/avatar/:type/system",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"avatar",
						":type",
						"system"
					],
					"variable": [
						{
							"key": "type",
							"value": "<string>",
							"type": "string",
							"description": "(Required) The avatar type."
						}
					]
				},
				"description": "Returns a list of system avatar details by owner type, where the owner types are issue type, project, or user.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** None."
			},
			"response": [
				{
					"name": "Returned if the authentication credentials are incorrect or missing.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/avatar/:type/system",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"avatar",
								":type",
								"system"
							],
							"variable": [
								{
									"key": "type"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returned if the request is successful.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/avatar/:type/system",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"avatar",
								":type",
								"system"
							],
							"variable": [
								{
									"key": "type"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"{\\\"system\\\":[{\\\"id\\\":\\\"1000\\\",\\\"isSystemAvatar\\\":true,\\\"isSelected\\\":false,\\\"isDeletable\\\":false,\\\"urls\\\":{\\\"16x16\\\":\\\"/secure/useravatar?size=xsmall&avatarId=10040&avatarType=project\\\",\\\"24x24\\\":\\\"/secure/useravatar?size=small&avatarId=10040&avatarType=project\\\",\\\"32x32\\\":\\\"/secure/useravatar?size=medium&avatarId=10040&avatarType=project\\\",\\\"48x48\\\":\\\"/secure/useravatar?avatarId=10040&avatarType=project\\\"}}]}\""
				},
				{
					"name": "Returned if an error occurs while retrieving the list of avatars.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/avatar/:type/system",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"avatar",
								":type",
								"system"
							],
							"variable": [
								{
									"key": "type"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Find Groups",
			"request": {
				"auth": {
					"type": "inherit"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rest/api/3/groups/picker?accountId=<string>&query=<string>&exclude=<string>&exclude=<string>&maxResults=<integer>&userName=<string>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"groups",
						"picker"
					],
					"query": [
						{
							"key": "accountId",
							"value": "<string>",
							"description": "This parameter is deprecated, setting it does not affect the results. To find groups containing a particular user, use [Get user groups](#api-rest-api-3-user-groups-get)."
						},
						{
							"key": "query",
							"value": "<string>",
							"description": "The string to find in group names."
						},
						{
							"key": "exclude",
							"value": "<string>",
							"description": "A group to exclude from the result. To exclude multiple groups, provide an ampersand-separated list. For example, `exclude=group1&exclude=group2`."
						},
						{
							"key": "exclude",
							"value": "<string>",
							"description": "A group to exclude from the result. To exclude multiple groups, provide an ampersand-separated list. For example, `exclude=group1&exclude=group2`."
						},
						{
							"key": "maxResults",
							"value": "<integer>",
							"description": "The maximum number of groups to return. The maximum number of groups that can be returned is limited by the system property `jira.ajax.autocomplete.limit`."
						},
						{
							"key": "userName",
							"value": "<string>",
							"description": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details."
						}
					]
				},
				"description": "Returns a list of groups whose names contain a query string. A list of group names can be provided to exclude groups from the results.\n\nThe primary use case for this resource is to populate a group picker suggestions list. To this end, the returned object includes the `html` field where the matched query term is highlighted in the group name with the HTML strong tag. Also, the groups list is wrapped in a response object that contains a header for use in the picker, specifically *Showing X of Y matching groups*.\n\nThe list returns with the groups sorted. If no groups match the list criteria, an empty list is returned.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg). Anonymous calls and calls by users without the required permission return an empty list."
			},
			"response": [
				{
					"name": "Returned if the request is successful.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/groups/picker?accountId=<string>&query=query&exclude=<string>&exclude=<string>&maxResults=<integer>&userName=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"groups",
								"picker"
							],
							"query": [
								{
									"key": "accountId",
									"value": "<string>"
								},
								{
									"key": "query",
									"value": "query"
								},
								{
									"key": "exclude",
									"value": "<string>"
								},
								{
									"key": "exclude",
									"value": "<string>"
								},
								{
									"key": "maxResults",
									"value": "<integer>"
								},
								{
									"key": "userName",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"{\\\"header\\\":\\\"Showing 20 of 25 matching groups\\\",\\\"total\\\":25,\\\"groups\\\":[{\\\"name\\\":\\\"jdog-developers\\\",\\\"html\\\":\\\"<b>j</b>dog-developers\\\",\\\"groupId\\\":\\\"276f955c-63d7-42c8-9520-92d01dca0625\\\"},{\\\"name\\\":\\\"juvenal-bot\\\",\\\"html\\\":\\\"<b>j</b>uvenal-bot\\\",\\\"groupId\\\":\\\"6e87dc72-4f1f-421f-9382-2fee8b652487\\\"}]}\""
				}
			]
		},
		{
			"name": "Find Users And Groups",
			"request": {
				"auth": {
					"type": "inherit"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rest/api/3/groupuserpicker?query=<string>&maxResults=50&showAvatar=false&fieldId=<string>&projectId=<string>&projectId=<string>&issueTypeId=<string>&issueTypeId=<string>&avatarSize=xsmall&caseInsensitive=false&excludeConnectAddons=false",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"groupuserpicker"
					],
					"query": [
						{
							"key": "query",
							"value": "<string>",
							"description": "(Required) The search string."
						},
						{
							"key": "maxResults",
							"value": "50",
							"description": "The maximum number of items to return in each list."
						},
						{
							"key": "showAvatar",
							"value": "false",
							"description": "Whether the user avatar should be returned. If an invalid value is provided, the default value is used."
						},
						{
							"key": "fieldId",
							"value": "<string>",
							"description": "The custom field ID of the field this request is for."
						},
						{
							"key": "projectId",
							"value": "<string>",
							"description": "The ID of a project that returned users and groups must have permission to view. To include multiple projects, provide an ampersand-separated list. For example, `projectId=10000&projectId=10001`. This parameter is only used when `fieldId` is present."
						},
						{
							"key": "projectId",
							"value": "<string>",
							"description": "The ID of a project that returned users and groups must have permission to view. To include multiple projects, provide an ampersand-separated list. For example, `projectId=10000&projectId=10001`. This parameter is only used when `fieldId` is present."
						},
						{
							"key": "issueTypeId",
							"value": "<string>",
							"description": "The ID of an issue type that returned users and groups must have permission to view. To include multiple issue types, provide an ampersand-separated list. For example, `issueTypeId=10000&issueTypeId=10001`. Special values, such as `-1` (all standard issue types) and `-2` (all subtask issue types), are supported. This parameter is only used when `fieldId` is present."
						},
						{
							"key": "issueTypeId",
							"value": "<string>",
							"description": "The ID of an issue type that returned users and groups must have permission to view. To include multiple issue types, provide an ampersand-separated list. For example, `issueTypeId=10000&issueTypeId=10001`. Special values, such as `-1` (all standard issue types) and `-2` (all subtask issue types), are supported. This parameter is only used when `fieldId` is present."
						},
						{
							"key": "avatarSize",
							"value": "xsmall",
							"description": "The size of the avatar to return. If an invalid value is provided, the default value is used."
						},
						{
							"key": "caseInsensitive",
							"value": "false",
							"description": "Whether the search for groups should be case insensitive."
						},
						{
							"key": "excludeConnectAddons",
							"value": "false",
							"description": "Whether Connect app users and groups should be excluded from the search results. If an invalid value is provided, the default value is used."
						}
					]
				},
				"description": "Returns a list of users and groups matching a string. The string is used:\n\n *  for users, to find a case-insensitive match with display name and e-mail address. Note that if a user has hidden their email address in their user profile, partial matches of the email address will not find the user. An exact match is required.\n *  for groups, to find a case-sensitive match with group name.\n\nFor example, if the string *tin* is used, records with the display name *Tina*, email address *sarah@tinplatetraining.com*, and the group *accounting* would be returned.\n\nOptionally, the search can be refined to:\n\n *  the projects and issue types associated with a custom field, such as a user picker. The search can then be further refined to return only users and groups that have permission to view specific:\n    \n     *  projects.\n     *  issue types.\n    \n    If multiple projects or issue types are specified, they must be a subset of those enabled for the custom field or no results are returned. For example, if a field is enabled for projects A, B, and C then the search could be limited to projects B and C. However, if the search is limited to projects B and D, nothing is returned.\n *  not return Connect app users and groups.\n *  return groups that have a case-insensitive match with the query.\n\nThe primary use case for this resource is to populate a picker field suggestion list with users or groups. To this end, the returned object includes an `html` field for each list. This field highlights the matched query term in the item name with the HTML strong tag. Also, each list is wrapped in a response object that contains a header for use in a picker, specifically *Showing X of Y matching groups*.\n\nThis operation can be accessed anonymously.\n\n**[Permissions](#permissions) required:** *Browse users and groups* [global permission](https://confluence.atlassian.com/x/yodKLg)."
			},
			"response": [
				{
					"name": "Returned if the user does not have the necessary permission.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/groupuserpicker?query=<string>&maxResults=50&showAvatar=false&fieldId=<string>&projectId=<string>&projectId=<string>&issueTypeId=<string>&issueTypeId=<string>&avatarSize=xsmall&caseInsensitive=false&excludeConnectAddons=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"groupuserpicker"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>"
								},
								{
									"key": "maxResults",
									"value": "50"
								},
								{
									"key": "showAvatar",
									"value": "false"
								},
								{
									"key": "fieldId",
									"value": "<string>"
								},
								{
									"key": "projectId",
									"value": "<string>"
								},
								{
									"key": "projectId",
									"value": "<string>"
								},
								{
									"key": "issueTypeId",
									"value": "<string>"
								},
								{
									"key": "issueTypeId",
									"value": "<string>"
								},
								{
									"key": "avatarSize",
									"value": "xsmall"
								},
								{
									"key": "caseInsensitive",
									"value": "false"
								},
								{
									"key": "excludeConnectAddons",
									"value": "false"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returned if the authentication credentials are incorrect or missing.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/groupuserpicker?query=<string>&maxResults=50&showAvatar=false&fieldId=<string>&projectId=<string>&projectId=<string>&issueTypeId=<string>&issueTypeId=<string>&avatarSize=xsmall&caseInsensitive=false&excludeConnectAddons=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"groupuserpicker"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>"
								},
								{
									"key": "maxResults",
									"value": "50"
								},
								{
									"key": "showAvatar",
									"value": "false"
								},
								{
									"key": "fieldId",
									"value": "<string>"
								},
								{
									"key": "projectId",
									"value": "<string>"
								},
								{
									"key": "projectId",
									"value": "<string>"
								},
								{
									"key": "issueTypeId",
									"value": "<string>"
								},
								{
									"key": "issueTypeId",
									"value": "<string>"
								},
								{
									"key": "avatarSize",
									"value": "xsmall"
								},
								{
									"key": "caseInsensitive",
									"value": "false"
								},
								{
									"key": "excludeConnectAddons",
									"value": "false"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Returned if the request is successful.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/groupuserpicker?query=<string>&maxResults=50&showAvatar=false&fieldId=<string>&projectId=<string>&projectId=<string>&issueTypeId=<string>&issueTypeId=<string>&avatarSize=xsmall&caseInsensitive=false&excludeConnectAddons=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"groupuserpicker"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>"
								},
								{
									"key": "maxResults",
									"value": "50"
								},
								{
									"key": "showAvatar",
									"value": "false"
								},
								{
									"key": "fieldId",
									"value": "<string>"
								},
								{
									"key": "projectId",
									"value": "<string>"
								},
								{
									"key": "projectId",
									"value": "<string>"
								},
								{
									"key": "issueTypeId",
									"value": "<string>"
								},
								{
									"key": "issueTypeId",
									"value": "<string>"
								},
								{
									"key": "avatarSize",
									"value": "xsmall"
								},
								{
									"key": "caseInsensitive",
									"value": "false"
								},
								{
									"key": "excludeConnectAddons",
									"value": "false"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"{\\\"users\\\":{\\\"users\\\":[{\\\"accountId\\\":\\\"5b10a2844c20165700ede21g\\\",\\\"accountType\\\":\\\"atlassian\\\",\\\"name\\\":\\\"mia\\\",\\\"key\\\":\\\"mia\\\",\\\"html\\\":\\\"<strong>Mi</strong>a Krystof - <strong>mi</strong>a@example.com (<strong>mi</strong>a)\\\",\\\"displayName\\\":\\\"Mia Krystof\\\",\\\"avatarUrl\\\":\\\"https://avatar-management--avatars.server-location.prod.public.atl-paas.net/initials/MK-5.png?size=16&s=16\\\"}],\\\"total\\\":25,\\\"header\\\":\\\"Showing 20 of 25 matching groups\\\"},\\\"groups\\\":{\\\"header\\\":\\\"Showing 20 of 25 matching groups\\\",\\\"total\\\":25,\\\"groups\\\":[{\\\"name\\\":\\\"jdog-developers\\\",\\\"html\\\":\\\"<b>j</b>dog-developers\\\",\\\"groupId\\\":\\\"276f955c-63d7-42c8-9520-92d01dca0625\\\"},{\\\"name\\\":\\\"juvenal-bot\\\",\\\"html\\\":\\\"<b>j</b>uvenal-bot\\\",\\\"groupId\\\":\\\"6e87dc72-4f1f-421f-9382-2fee8b652487\\\"}]}}\""
				},
				{
					"name": "Returned if the query parameter is not provided.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/groupuserpicker?query=<string>&maxResults=50&showAvatar=false&fieldId=<string>&projectId=<string>&projectId=<string>&issueTypeId=<string>&issueTypeId=<string>&avatarSize=xsmall&caseInsensitive=false&excludeConnectAddons=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"groupuserpicker"
							],
							"query": [
								{
									"key": "query",
									"value": "<string>"
								},
								{
									"key": "maxResults",
									"value": "50"
								},
								{
									"key": "showAvatar",
									"value": "false"
								},
								{
									"key": "fieldId",
									"value": "<string>"
								},
								{
									"key": "projectId",
									"value": "<string>"
								},
								{
									"key": "projectId",
									"value": "<string>"
								},
								{
									"key": "issueTypeId",
									"value": "<string>"
								},
								{
									"key": "issueTypeId",
									"value": "<string>"
								},
								{
									"key": "avatarSize",
									"value": "xsmall"
								},
								{
									"key": "caseInsensitive",
									"value": "false"
								},
								{
									"key": "excludeConnectAddons",
									"value": "false"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Get All Labels",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rest/api/3/label?startAt=0&maxResults=1000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rest",
						"api",
						"3",
						"label"
					],
					"query": [
						{
							"key": "startAt",
							"value": "0",
							"description": "The index of the first item to return in a page of results (page offset)."
						},
						{
							"key": "maxResults",
							"value": "1000",
							"description": "The maximum number of items to return per page."
						}
					]
				},
				"description": "Returns a [paginated](#pagination) list of labels."
			},
			"response": [
				{
					"name": "Returned if the request is successful.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "<token>",
								"description": {
									"content": "Added as a part of security scheme: oauth2",
									"type": "text/plain"
								}
							}
						],
						"url": {
							"raw": "{{baseUrl}}/rest/api/3/label?startAt=0&maxResults=1000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"api",
								"3",
								"label"
							],
							"query": [
								{
									"key": "startAt",
									"value": "0"
								},
								{
									"key": "maxResults",
									"value": "1000"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"{\\\"maxResults\\\":2,\\\"startAt\\\":0,\\\"total\\\":100,\\\"isLast\\\":false,\\\"values\\\":[\\\"performance\\\",\\\"security\\\"]}\""
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{atlassian_token}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{atlassian_email}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://your-domain.atlassian.com",
			"type": "string"
		}
	]
}